ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysTickServiceCallbacks, %function
  24              	CySysTickServiceCallbacks:
  25              	.LFB40:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 2


  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 3


  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 4


 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 5


 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 6


 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 7


 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 8


 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 9


 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 10


 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 11


 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 577:Generated_Source\PSoC4/CyLib.c **** }
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 12


 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 13


 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 14


 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 15


 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 16


 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 17


 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 18


 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 19


1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 20


1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 21


1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 22


1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 23


1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 24


1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 25


1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 26


1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 27


1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 28


1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 29


1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 30


1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 31


1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 32


1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 33


1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 34


1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 35


1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 36


1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 37


2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 38


2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 39


2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 40


2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 41


2255:Generated_Source\PSoC4/CyLib.c **** {
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
2257:Generated_Source\PSoC4/CyLib.c **** }
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 42


2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 43


2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 44


2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2440:Generated_Source\PSoC4/CyLib.c **** }
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2459:Generated_Source\PSoC4/CyLib.c **** }
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2474:Generated_Source\PSoC4/CyLib.c **** }
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 45


2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2503:Generated_Source\PSoC4/CyLib.c **** }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 46


2540:Generated_Source\PSoC4/CyLib.c **** {
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
2547:Generated_Source\PSoC4/CyLib.c **** }
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
2571:Generated_Source\PSoC4/CyLib.c **** }
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
2585:Generated_Source\PSoC4/CyLib.c **** }
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 47


2597:Generated_Source\PSoC4/CyLib.c **** {
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
2610:Generated_Source\PSoC4/CyLib.c **** }
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 48


2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2707:Generated_Source\PSoC4/CyLib.c **** }
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 49


2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2723:Generated_Source\PSoC4/CyLib.c **** }
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2739:Generated_Source\PSoC4/CyLib.c **** }
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2756:Generated_Source\PSoC4/CyLib.c **** }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 50


2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2772:Generated_Source\PSoC4/CyLib.c **** }
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2788:Generated_Source\PSoC4/CyLib.c **** }
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 51


2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2868:Generated_Source\PSoC4/CyLib.c **** }
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2881:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 52


2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 53


2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
  27              		.loc 1 2951 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LBB50:
  32              	.LBB51:
2867:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 2867 0
  34 0000 074B     		ldr	r3, .L12
  35              	.LBE51:
  36              	.LBE50:
  37              		.loc 1 2951 0
  38 0002 70B5     		push	{r4, r5, r6, lr}
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 4, -16
  41              		.cfi_offset 5, -12
  42              		.cfi_offset 6, -8
  43              		.cfi_offset 14, -4
  44              	.LBB53:
  45              	.LBB52:
2867:Generated_Source\PSoC4/CyLib.c **** }
  46              		.loc 1 2867 0
  47 0004 1B68     		ldr	r3, [r3]
  48              	.LBE52:
  49              	.LBE53:
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
  50              		.loc 1 2955 0
  51 0006 DB03     		lsls	r3, r3, #15
  52 0008 00D4     		bmi	.L11
  53              	.L1:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
  54              		.loc 1 2965 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 54


  55              		@ sp needed
  56 000a 70BD     		pop	{r4, r5, r6, pc}
  57              	.L11:
  58 000c 0024     		movs	r4, #0
  59 000e 054D     		ldr	r5, .L12+4
  60              	.L4:
  61              	.LBB54:
2959:Generated_Source\PSoC4/CyLib.c ****             {
  62              		.loc 1 2959 0
  63 0010 2B59     		ldr	r3, [r5, r4]
  64 0012 002B     		cmp	r3, #0
  65 0014 00D0     		beq	.L3
2961:Generated_Source\PSoC4/CyLib.c ****             }
  66              		.loc 1 2961 0
  67 0016 9847     		blx	r3
  68              	.LVL0:
  69              	.L3:
  70 0018 0434     		adds	r4, r4, #4
2957:Generated_Source\PSoC4/CyLib.c ****         {
  71              		.loc 1 2957 0
  72 001a 142C     		cmp	r4, #20
  73 001c F8D1     		bne	.L4
  74 001e F4E7     		b	.L1
  75              	.L13:
  76              		.align	2
  77              	.L12:
  78 0020 10E000E0 		.word	-536813552
  79 0024 00000000 		.word	.LANCHOR0
  80              	.LBE54:
  81              		.cfi_endproc
  82              	.LFE40:
  83              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
  84              		.section	.text.CySysClkImoStart,"ax",%progbits
  85              		.align	2
  86              		.global	CySysClkImoStart
  87              		.code	16
  88              		.thumb_func
  89              		.type	CySysClkImoStart, %function
  90              	CySysClkImoStart:
  91              	.LFB0:
 108:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  92              		.loc 1 108 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c **** 
  97              		.loc 1 109 0
  98 0000 8021     		movs	r1, #128
  99 0002 034A     		ldr	r2, .L15
 100 0004 0906     		lsls	r1, r1, #24
 101 0006 1368     		ldr	r3, [r2]
 124:Generated_Source\PSoC4/CyLib.c **** 
 102              		.loc 1 124 0
 103              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c **** 
 104              		.loc 1 109 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 55


 105 0008 0B43     		orrs	r3, r1
 106 000a 1360     		str	r3, [r2]
 124:Generated_Source\PSoC4/CyLib.c **** 
 107              		.loc 1 124 0
 108 000c 7047     		bx	lr
 109              	.L16:
 110 000e C046     		.align	2
 111              	.L15:
 112 0010 30000340 		.word	1073938480
 113              		.cfi_endproc
 114              	.LFE0:
 115              		.size	CySysClkImoStart, .-CySysClkImoStart
 116              		.section	.text.CySysClkImoStop,"ax",%progbits
 117              		.align	2
 118              		.global	CySysClkImoStop
 119              		.code	16
 120              		.thumb_func
 121              		.type	CySysClkImoStop, %function
 122              	CySysClkImoStop:
 123              	.LFB1:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 124              		.loc 1 140 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 149:Generated_Source\PSoC4/CyLib.c **** }
 129              		.loc 1 149 0
 130 0000 024A     		ldr	r2, .L18
 150:Generated_Source\PSoC4/CyLib.c **** 
 131              		.loc 1 150 0
 132              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
 133              		.loc 1 149 0
 134 0002 1368     		ldr	r3, [r2]
 135 0004 5B00     		lsls	r3, r3, #1
 136 0006 5B08     		lsrs	r3, r3, #1
 137 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 138              		.loc 1 150 0
 139 000a 7047     		bx	lr
 140              	.L19:
 141              		.align	2
 142              	.L18:
 143 000c 30000340 		.word	1073938480
 144              		.cfi_endproc
 145              	.LFE1:
 146              		.size	CySysClkImoStop, .-CySysClkImoStop
 147              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 148              		.align	2
 149              		.global	CySysClkWriteHfclkDirect
 150              		.code	16
 151              		.thumb_func
 152              		.type	CySysClkWriteHfclkDirect, %function
 153              	CySysClkWriteHfclkDirect:
 154              	.LFB2:
 430:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 56


 155              		.loc 1 430 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL1:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
 430:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 164              		.loc 1 430 0
 165 0002 0400     		movs	r4, r0
 434:Generated_Source\PSoC4/CyLib.c **** 
 166              		.loc 1 434 0
 167 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 168              	.LVL2:
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 169              		.loc 1 437 0
 170 0008 0323     		movs	r3, #3
 171 000a 0449     		ldr	r1, .L21
 454:Generated_Source\PSoC4/CyLib.c **** 
 172              		.loc 1 454 0
 173              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 174              		.loc 1 437 0
 175 000c 0A68     		ldr	r2, [r1]
 176 000e 9A43     		bics	r2, r3
 177              	.LVL3:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 178              		.loc 1 448 0
 179 0010 2340     		ands	r3, r4
 180 0012 1343     		orrs	r3, r2
 181              	.LVL4:
 451:Generated_Source\PSoC4/CyLib.c **** 
 182              		.loc 1 451 0
 183 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 184              		.loc 1 453 0
 185 0016 FFF7FEFF 		bl	CyExitCriticalSection
 186              	.LVL5:
 187              	.LVL6:
 454:Generated_Source\PSoC4/CyLib.c **** 
 188              		.loc 1 454 0
 189 001a 10BD     		pop	{r4, pc}
 190              	.L22:
 191              		.align	2
 192              	.L21:
 193 001c 28000340 		.word	1073938472
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 197              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 198              		.align	2
 199              		.global	CySysEnablePumpClock
 200              		.code	16
 201              		.thumb_func
 202              		.type	CySysEnablePumpClock, %function
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 57


 203              	CySysEnablePumpClock:
 204              	.LFB3:
 474:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 205              		.loc 1 474 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL7:
 487:Generated_Source\PSoC4/CyLib.c ****         {
 211              		.loc 1 487 0
 212 0000 C307     		lsls	r3, r0, #31
 213 0002 0AD4     		bmi	.L26
 493:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 214              		.loc 1 493 0
 215 0004 094A     		ldr	r2, .L27
 216 0006 0A49     		ldr	r1, .L27+4
 217 0008 1368     		ldr	r3, [r2]
 218 000a 9B06     		lsls	r3, r3, #26
 219 000c 9B0F     		lsrs	r3, r3, #30
 220 000e 0B60     		str	r3, [r1]
 495:Generated_Source\PSoC4/CyLib.c ****         }
 221              		.loc 1 495 0
 222 0010 3021     		movs	r1, #48
 223 0012 1368     		ldr	r3, [r2]
 224 0014 8B43     		bics	r3, r1
 225 0016 1360     		str	r3, [r2]
 226              	.L23:
 498:Generated_Source\PSoC4/CyLib.c **** 
 227              		.loc 1 498 0
 228              		@ sp needed
 229 0018 7047     		bx	lr
 230              	.L26:
 489:Generated_Source\PSoC4/CyLib.c ****         }
 231              		.loc 1 489 0
 232 001a 054B     		ldr	r3, .L27+4
 233 001c 0349     		ldr	r1, .L27
 234 001e 1B68     		ldr	r3, [r3]
 235 0020 0A68     		ldr	r2, [r1]
 236 0022 1B01     		lsls	r3, r3, #4
 237 0024 1343     		orrs	r3, r2
 238 0026 0B60     		str	r3, [r1]
 239 0028 F6E7     		b	.L23
 240              	.L28:
 241 002a C046     		.align	2
 242              	.L27:
 243 002c 28000340 		.word	1073938472
 244 0030 00000000 		.word	.LANCHOR1
 245              		.cfi_endproc
 246              	.LFE3:
 247              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 248              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 249              		.align	2
 250              		.global	CySysClkGetSysclkSource
 251              		.code	16
 252              		.thumb_func
 253              		.type	CySysClkGetSysclkSource, %function
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 58


 254              	CySysClkGetSysclkSource:
 255              	.LFB4:
 511:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 256              		.loc 1 511 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 10B5     		push	{r4, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 4, -8
 263              		.cfi_offset 14, -4
 515:Generated_Source\PSoC4/CyLib.c **** 
 264              		.loc 1 515 0
 265 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 266              	.LVL8:
 525:Generated_Source\PSoC4/CyLib.c ****     }
 267              		.loc 1 525 0
 268 0006 034B     		ldr	r3, .L30
 531:Generated_Source\PSoC4/CyLib.c **** 
 269              		.loc 1 531 0
 270              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 271              		.loc 1 525 0
 272 0008 1C68     		ldr	r4, [r3]
 273              	.LVL9:
 528:Generated_Source\PSoC4/CyLib.c **** 
 274              		.loc 1 528 0
 275 000a FFF7FEFF 		bl	CyExitCriticalSection
 276              	.LVL10:
 530:Generated_Source\PSoC4/CyLib.c **** }
 277              		.loc 1 530 0
 278 000e 0320     		movs	r0, #3
 279 0010 2040     		ands	r0, r4
 280              	.LVL11:
 531:Generated_Source\PSoC4/CyLib.c **** 
 281              		.loc 1 531 0
 282 0012 10BD     		pop	{r4, pc}
 283              	.L31:
 284              		.align	2
 285              	.L30:
 286 0014 28000340 		.word	1073938472
 287              		.cfi_endproc
 288              	.LFE4:
 289              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 290              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 291              		.align	2
 292              		.global	CySysClkWriteSysclkDiv
 293              		.code	16
 294              		.thumb_func
 295              		.type	CySysClkWriteSysclkDiv, %function
 296              	CySysClkWriteSysclkDiv:
 297              	.LFB5:
 566:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 298              		.loc 1 566 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 59


 302              	.LVL12:
 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 566:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 307              		.loc 1 566 0
 308 0002 0400     		movs	r4, r0
 569:Generated_Source\PSoC4/CyLib.c **** 
 309              		.loc 1 569 0
 310 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 311              	.LVL13:
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 312              		.loc 1 572 0
 313 0008 FF23     		movs	r3, #255
 314 000a A401     		lsls	r4, r4, #6
 315              	.LVL14:
 316 000c 2340     		ands	r3, r4
 317 000e C024     		movs	r4, #192
 573:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 318              		.loc 1 573 0
 319 0010 0349     		ldr	r1, .L33
 577:Generated_Source\PSoC4/CyLib.c **** 
 320              		.loc 1 577 0
 321              		@ sp needed
 573:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 322              		.loc 1 573 0
 323 0012 0A68     		ldr	r2, [r1]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 324              		.loc 1 572 0
 325 0014 A243     		bics	r2, r4
 326 0016 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 327              		.loc 1 571 0
 328 0018 0B60     		str	r3, [r1]
 576:Generated_Source\PSoC4/CyLib.c **** }
 329              		.loc 1 576 0
 330 001a FFF7FEFF 		bl	CyExitCriticalSection
 331              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** 
 332              		.loc 1 577 0
 333 001e 10BD     		pop	{r4, pc}
 334              	.L34:
 335              		.align	2
 336              	.L33:
 337 0020 28000340 		.word	1073938472
 338              		.cfi_endproc
 339              	.LFE5:
 340              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 341              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 342              		.align	2
 343              		.global	CySysClkWriteImoFreq
 344              		.code	16
 345              		.thumb_func
 346              		.type	CySysClkWriteImoFreq, %function
 347              	CySysClkWriteImoFreq:
 348              	.LFB6:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 60


 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 349              		.loc 1 829 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              	.LVL16:
 354 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 355              		.cfi_def_cfa_offset 24
 356              		.cfi_offset 3, -24
 357              		.cfi_offset 4, -20
 358              		.cfi_offset 5, -16
 359              		.cfi_offset 6, -12
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 362              		.loc 1 829 0
 363 0002 0400     		movs	r4, r0
 842:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 364              		.loc 1 842 0
 365 0004 1828     		cmp	r0, #24
 366 0006 06D0     		beq	.L36
 842:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 367              		.loc 1 842 0 is_stmt 0 discriminator 1
 368 0008 1023     		movs	r3, #16
 369 000a 0200     		movs	r2, r0
 370 000c 9A43     		bics	r2, r3
 371 000e 202A     		cmp	r2, #32
 372 0010 01D0     		beq	.L36
 373              	.LVL17:
 374              	.LBB55:
 375              	.LBB56:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 376              		.loc 1 2525 0 is_stmt 1
 377              		.syntax divided
 378              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 379 0012 01BE     		    bkpt    1
 380              	@ 0 "" 2
 381              	.LVL18:
 382              		.thumb
 383              		.syntax unified
 384              	.L35:
 385              	.LBE56:
 386              	.LBE55:
 949:Generated_Source\PSoC4/CyLib.c **** 
 387              		.loc 1 949 0
 388              		@ sp needed
 389 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 390              	.LVL19:
 391              	.L36:
 882:Generated_Source\PSoC4/CyLib.c **** 
 392              		.loc 1 882 0
 393 0016 0726     		movs	r6, #7
 851:Generated_Source\PSoC4/CyLib.c **** 
 394              		.loc 1 851 0
 395 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 396              	.LVL20:
 882:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 61


 397              		.loc 1 882 0
 398 001c 1B4D     		ldr	r5, .L44
 902:Generated_Source\PSoC4/CyLib.c **** 
 399              		.loc 1 902 0
 400 001e 1C4A     		ldr	r2, .L44+4
 882:Generated_Source\PSoC4/CyLib.c **** 
 401              		.loc 1 882 0
 402 0020 2B68     		ldr	r3, [r5]
 851:Generated_Source\PSoC4/CyLib.c **** 
 403              		.loc 1 851 0
 404 0022 0700     		movs	r7, r0
 405              	.LVL21:
 882:Generated_Source\PSoC4/CyLib.c **** 
 406              		.loc 1 882 0
 407 0024 B343     		bics	r3, r6
 408 0026 2B60     		str	r3, [r5]
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409              		.loc 1 900 0
 410 0028 1A4B     		ldr	r3, .L44+8
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 411              		.loc 1 908 0
 412 002a 1B48     		ldr	r0, .L44+12
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 413              		.loc 1 900 0
 414 002c E318     		adds	r3, r4, r3
 415 002e 1B78     		ldrb	r3, [r3]
 416 0030 DBB2     		uxtb	r3, r3
 417              	.LVL22:
 902:Generated_Source\PSoC4/CyLib.c **** 
 418              		.loc 1 902 0
 419 0032 1360     		str	r3, [r2]
 905:Generated_Source\PSoC4/CyLib.c **** 
 420              		.loc 1 905 0
 421 0034 194A     		ldr	r2, .L44+16
 422 0036 1368     		ldr	r3, [r2]
 423              	.LVL23:
 424 0038 B343     		bics	r3, r6
 425 003a 1360     		str	r3, [r2]
 426              	.LVL24:
 909:Generated_Source\PSoC4/CyLib.c **** 
 427              		.loc 1 909 0
 428 003c 184B     		ldr	r3, .L44+20
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 429              		.loc 1 908 0
 430 003e 0168     		ldr	r1, [r0]
 909:Generated_Source\PSoC4/CyLib.c **** 
 431              		.loc 1 909 0
 432 0040 E318     		adds	r3, r4, r3
 433 0042 1A78     		ldrb	r2, [r3]
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 434              		.loc 1 908 0
 435 0044 7F23     		movs	r3, #127
 436 0046 9943     		bics	r1, r3
 437 0048 1340     		ands	r3, r2
 438 004a 0B43     		orrs	r3, r1
 439 004c 0360     		str	r3, [r0]
 911:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 62


 440              		.loc 1 911 0
 441 004e 3220     		movs	r0, #50
 442 0050 FFF7FEFF 		bl	CyDelayCycles
 443              	.LVL25:
 913:Generated_Source\PSoC4/CyLib.c ****             {
 444              		.loc 1 913 0
 445 0054 182C     		cmp	r4, #24
 446 0056 03D8     		bhi	.L43
 942:Generated_Source\PSoC4/CyLib.c ****         }
 447              		.loc 1 942 0
 448 0058 3800     		movs	r0, r7
 449 005a FFF7FEFF 		bl	CyExitCriticalSection
 450              	.LVL26:
 451 005e D9E7     		b	.L35
 452              	.L43:
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 453              		.loc 1 916 0
 454 0060 2300     		movs	r3, r4
 455 0062 2A68     		ldr	r2, [r5]
 456 0064 1C3B     		subs	r3, r3, #28
 457 0066 9B08     		lsrs	r3, r3, #2
 458 0068 B243     		bics	r2, r6
 459 006a 3340     		ands	r3, r6
 460 006c 1343     		orrs	r3, r2
 461 006e 2B60     		str	r3, [r5]
 919:Generated_Source\PSoC4/CyLib.c **** 
 462              		.loc 1 919 0
 463 0070 3220     		movs	r0, #50
 464 0072 FFF7FEFF 		bl	CyDelayCycles
 465              	.LVL27:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 466              		.loc 1 923 0
 467 0076 183C     		subs	r4, r4, #24
 468              	.LVL28:
 469 0078 2B68     		ldr	r3, [r5]
 470 007a A408     		lsrs	r4, r4, #2
 471              	.LVL29:
 472 007c 3440     		ands	r4, r6
 473 007e B343     		bics	r3, r6
 474 0080 1C43     		orrs	r4, r3
 475 0082 2C60     		str	r4, [r5]
 942:Generated_Source\PSoC4/CyLib.c ****         }
 476              		.loc 1 942 0
 477 0084 3800     		movs	r0, r7
 478 0086 FFF7FEFF 		bl	CyExitCriticalSection
 479              	.LVL30:
 480 008a C3E7     		b	.L35
 481              	.L45:
 482              		.align	2
 483              	.L44:
 484 008c 080F0340 		.word	1073942280
 485 0090 0C0F0340 		.word	1073942284
 486 0094 CDF1FF0F 		.word	268431821
 487 0098 180F0340 		.word	1073942296
 488 009c 100F0340 		.word	1073942288
 489 00a0 B4F1FF0F 		.word	268431796
 490              		.cfi_endproc
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 63


 491              	.LFE6:
 492              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 493              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 494              		.align	2
 495              		.global	CySysClkWriteHfclkDiv
 496              		.code	16
 497              		.thumb_func
 498              		.type	CySysClkWriteHfclkDiv, %function
 499              	CySysClkWriteHfclkDiv:
 500              	.LFB7:
 982:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 501              		.loc 1 982 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL31:
 506 0000 10B5     		push	{r4, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 4, -8
 509              		.cfi_offset 14, -4
 982:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 510              		.loc 1 982 0
 511 0002 0400     		movs	r4, r0
 985:Generated_Source\PSoC4/CyLib.c **** 
 512              		.loc 1 985 0
 513 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 514              	.LVL32:
 988:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 515              		.loc 1 988 0
 516 0008 A300     		lsls	r3, r4, #2
 517 000a 0C24     		movs	r4, #12
 518              	.LVL33:
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 519              		.loc 1 987 0
 520 000c 0449     		ldr	r1, .L47
 988:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 521              		.loc 1 988 0
 522 000e 2340     		ands	r3, r4
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 523              		.loc 1 987 0
 524 0010 0A68     		ldr	r2, [r1]
 992:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 525              		.loc 1 992 0
 526              		@ sp needed
 988:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 527              		.loc 1 988 0
 528 0012 A243     		bics	r2, r4
 529 0014 1343     		orrs	r3, r2
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 530              		.loc 1 987 0
 531 0016 0B60     		str	r3, [r1]
 991:Generated_Source\PSoC4/CyLib.c ****     }
 532              		.loc 1 991 0
 533 0018 FFF7FEFF 		bl	CyExitCriticalSection
 534              	.LVL34:
 992:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 535              		.loc 1 992 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 64


 536 001c 10BD     		pop	{r4, pc}
 537              	.L48:
 538 001e C046     		.align	2
 539              	.L47:
 540 0020 28000340 		.word	1073938472
 541              		.cfi_endproc
 542              	.LFE7:
 543              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 544              		.section	.text.CySysGetResetReason,"ax",%progbits
 545              		.align	2
 546              		.global	CySysGetResetReason
 547              		.code	16
 548              		.thumb_func
 549              		.type	CySysGetResetReason, %function
 550              	CySysGetResetReason:
 551              	.LFB8:
2209:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 552              		.loc 1 2209 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL35:
2209:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 558              		.loc 1 2209 0
 559 0000 0200     		movs	r2, r0
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 560              		.loc 1 2212 0
 561 0002 1920     		movs	r0, #25
 562              	.LVL36:
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 563              		.loc 1 2213 0
 564 0004 0249     		ldr	r1, .L50
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 565              		.loc 1 2212 0
 566 0006 0240     		ands	r2, r0
 567              	.LVL37:
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 568              		.loc 1 2213 0
 569 0008 0B68     		ldr	r3, [r1]
 570              	.LVL38:
2218:Generated_Source\PSoC4/CyLib.c **** 
 571              		.loc 1 2218 0
 572              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 573              		.loc 1 2217 0
 574 000a 1840     		ands	r0, r3
 575              	.LVL39:
2215:Generated_Source\PSoC4/CyLib.c **** 
 576              		.loc 1 2215 0
 577 000c 0A60     		str	r2, [r1]
2218:Generated_Source\PSoC4/CyLib.c **** 
 578              		.loc 1 2218 0
 579 000e 7047     		bx	lr
 580              	.L51:
 581              		.align	2
 582              	.L50:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 65


 583 0010 54000340 		.word	1073938516
 584              		.cfi_endproc
 585              	.LFE8:
 586              		.size	CySysGetResetReason, .-CySysGetResetReason
 587              		.section	.text.CyDisableInts,"ax",%progbits
 588              		.align	2
 589              		.global	CyDisableInts
 590              		.code	16
 591              		.thumb_func
 592              		.type	CyDisableInts, %function
 593              	CyDisableInts:
 594              	.LFB9:
2232:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 595              		.loc 1 2232 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
2239:Generated_Source\PSoC4/CyLib.c **** 
 600              		.loc 1 2239 0
 601 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 602              		.loc 1 2236 0
 603 0002 024B     		ldr	r3, .L53
2239:Generated_Source\PSoC4/CyLib.c **** 
 604              		.loc 1 2239 0
 605 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 606              		.loc 1 2236 0
 607 0006 1868     		ldr	r0, [r3]
 608              	.LVL40:
2242:Generated_Source\PSoC4/CyLib.c **** 
 609              		.loc 1 2242 0
 610              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 611              		.loc 1 2239 0
 612 0008 1A60     		str	r2, [r3]
2242:Generated_Source\PSoC4/CyLib.c **** 
 613              		.loc 1 2242 0
 614 000a 7047     		bx	lr
 615              	.L54:
 616              		.align	2
 617              	.L53:
 618 000c 80E100E0 		.word	-536813184
 619              		.cfi_endproc
 620              	.LFE9:
 621              		.size	CyDisableInts, .-CyDisableInts
 622              		.section	.text.CyEnableInts,"ax",%progbits
 623              		.align	2
 624              		.global	CyEnableInts
 625              		.code	16
 626              		.thumb_func
 627              		.type	CyEnableInts, %function
 628              	CyEnableInts:
 629              	.LFB10:
2255:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 630              		.loc 1 2255 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 66


 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL41:
2256:Generated_Source\PSoC4/CyLib.c **** }
 636              		.loc 1 2256 0
 637 0000 014B     		ldr	r3, .L56
2257:Generated_Source\PSoC4/CyLib.c **** 
 638              		.loc 1 2257 0
 639              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c **** }
 640              		.loc 1 2256 0
 641 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** 
 642              		.loc 1 2257 0
 643 0004 7047     		bx	lr
 644              	.L57:
 645 0006 C046     		.align	2
 646              	.L56:
 647 0008 00E100E0 		.word	-536813312
 648              		.cfi_endproc
 649              	.LFE10:
 650              		.size	CyEnableInts, .-CyEnableInts
 651              		.section	.text.CyIntSetSysVector,"ax",%progbits
 652              		.align	2
 653              		.global	CyIntSetSysVector
 654              		.code	16
 655              		.thumb_func
 656              		.type	CyIntSetSysVector, %function
 657              	CyIntSetSysVector:
 658              	.LFB11:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 659              		.loc 1 2280 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664              	.LVL42:
2284:Generated_Source\PSoC4/CyLib.c **** 
 665              		.loc 1 2284 0
 666 0000 0F28     		cmp	r0, #15
 667 0002 00D9     		bls	.L59
 668              	.LVL43:
 669              	.LBB57:
 670              	.LBB58:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 671              		.loc 1 2525 0
 672              		.syntax divided
 673              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 674 0004 01BE     		    bkpt    1
 675              	@ 0 "" 2
 676              	.LVL44:
 677              		.thumb
 678              		.syntax unified
 679              	.L59:
 680              	.LBE58:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 67


 681              	.LBE57:
2287:Generated_Source\PSoC4/CyLib.c **** 
 682              		.loc 1 2287 0
 683 0006 8023     		movs	r3, #128
 684 0008 8000     		lsls	r0, r0, #2
 685              	.LVL45:
 686 000a 9B05     		lsls	r3, r3, #22
 687 000c C318     		adds	r3, r0, r3
 688 000e 1868     		ldr	r0, [r3]
 689              	.LVL46:
2293:Generated_Source\PSoC4/CyLib.c **** 
 690              		.loc 1 2293 0
 691              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 692              		.loc 1 2290 0
 693 0010 1960     		str	r1, [r3]
2293:Generated_Source\PSoC4/CyLib.c **** 
 694              		.loc 1 2293 0
 695 0012 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE11:
 698              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 699              		.section	.text.CyIntGetSysVector,"ax",%progbits
 700              		.align	2
 701              		.global	CyIntGetSysVector
 702              		.code	16
 703              		.thumb_func
 704              		.type	CyIntGetSysVector, %function
 705              	CyIntGetSysVector:
 706              	.LFB12:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 707              		.loc 1 2314 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL47:
2317:Generated_Source\PSoC4/CyLib.c **** 
 713              		.loc 1 2317 0
 714 0000 0F28     		cmp	r0, #15
 715 0002 00D9     		bls	.L61
 716              	.LVL48:
 717              	.LBB59:
 718              	.LBB60:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 719              		.loc 1 2525 0
 720              		.syntax divided
 721              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 722 0004 01BE     		    bkpt    1
 723              	@ 0 "" 2
 724              	.LVL49:
 725              		.thumb
 726              		.syntax unified
 727              	.L61:
 728              	.LBE60:
 729              	.LBE59:
2319:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 68


 730              		.loc 1 2319 0
 731 0006 8023     		movs	r3, #128
 732 0008 9B05     		lsls	r3, r3, #22
 733 000a 9C46     		mov	ip, r3
 734 000c 8000     		lsls	r0, r0, #2
 735              	.LVL50:
 736 000e 6044     		add	r0, r0, ip
 737 0010 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 2320 0
 739              		@ sp needed
 740 0012 7047     		bx	lr
 741              		.cfi_endproc
 742              	.LFE12:
 743              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 744              		.section	.text.CyIntSetVector,"ax",%progbits
 745              		.align	2
 746              		.global	CyIntSetVector
 747              		.code	16
 748              		.thumb_func
 749              		.type	CyIntSetVector, %function
 750              	CyIntSetVector:
 751              	.LFB13:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 752              		.loc 1 2336 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757              	.LVL51:
2340:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 2340 0
 759 0000 0828     		cmp	r0, #8
 760 0002 00D9     		bls	.L63
 761              	.LVL52:
 762              	.LBB61:
 763              	.LBB62:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 764              		.loc 1 2525 0
 765              		.syntax divided
 766              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 767 0004 01BE     		    bkpt    1
 768              	@ 0 "" 2
 769              	.LVL53:
 770              		.thumb
 771              		.syntax unified
 772              	.L63:
 773              	.LBE62:
 774              	.LBE61:
2343:Generated_Source\PSoC4/CyLib.c **** 
 775              		.loc 1 2343 0
 776 0006 034B     		ldr	r3, .L64
 777 0008 8000     		lsls	r0, r0, #2
 778              	.LVL54:
 779 000a C318     		adds	r3, r0, r3
 780 000c 1868     		ldr	r0, [r3]
 781              	.LVL55:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 69


2349:Generated_Source\PSoC4/CyLib.c **** 
 782              		.loc 1 2349 0
 783              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 784              		.loc 1 2346 0
 785 000e 1960     		str	r1, [r3]
2349:Generated_Source\PSoC4/CyLib.c **** 
 786              		.loc 1 2349 0
 787 0010 7047     		bx	lr
 788              	.L65:
 789 0012 C046     		.align	2
 790              	.L64:
 791 0014 40000020 		.word	536870976
 792              		.cfi_endproc
 793              	.LFE13:
 794              		.size	CyIntSetVector, .-CyIntSetVector
 795              		.section	.text.CyIntGetVector,"ax",%progbits
 796              		.align	2
 797              		.global	CyIntGetVector
 798              		.code	16
 799              		.thumb_func
 800              		.type	CyIntGetVector, %function
 801              	CyIntGetVector:
 802              	.LFB14:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 803              		.loc 1 2364 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 808              	.LVL56:
2367:Generated_Source\PSoC4/CyLib.c **** 
 809              		.loc 1 2367 0
 810 0000 0828     		cmp	r0, #8
 811 0002 00D9     		bls	.L67
 812              	.LVL57:
 813              	.LBB63:
 814              	.LBB64:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 815              		.loc 1 2525 0
 816              		.syntax divided
 817              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 818 0004 01BE     		    bkpt    1
 819              	@ 0 "" 2
 820              	.LVL58:
 821              		.thumb
 822              		.syntax unified
 823              	.L67:
 824              	.LBE64:
 825              	.LBE63:
2369:Generated_Source\PSoC4/CyLib.c **** }
 826              		.loc 1 2369 0
 827 0006 034B     		ldr	r3, .L68
 828 0008 8000     		lsls	r0, r0, #2
 829              	.LVL59:
 830 000a 9C46     		mov	ip, r3
 831 000c 6044     		add	r0, r0, ip
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 70


 832 000e 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** 
 833              		.loc 1 2370 0
 834              		@ sp needed
 835 0010 7047     		bx	lr
 836              	.L69:
 837 0012 C046     		.align	2
 838              	.L68:
 839 0014 40000020 		.word	536870976
 840              		.cfi_endproc
 841              	.LFE14:
 842              		.size	CyIntGetVector, .-CyIntGetVector
 843              		.section	.text.CyIntSetPriority,"ax",%progbits
 844              		.align	2
 845              		.global	CyIntSetPriority
 846              		.code	16
 847              		.thumb_func
 848              		.type	CyIntSetPriority, %function
 849              	CyIntSetPriority:
 850              	.LFB15:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 851              		.loc 1 2383 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              	.LVL60:
 856 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 857              		.cfi_def_cfa_offset 24
 858              		.cfi_offset 3, -24
 859              		.cfi_offset 4, -20
 860              		.cfi_offset 5, -16
 861              		.cfi_offset 6, -12
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 864              		.loc 1 2383 0
 865 0002 0400     		movs	r4, r0
 866 0004 0E00     		movs	r6, r1
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 867              		.loc 1 2388 0
 868 0006 0329     		cmp	r1, #3
 869 0008 00D9     		bls	.L71
 870              	.LVL61:
 871              	.LBB65:
 872              	.LBB66:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 873              		.loc 1 2525 0
 874              		.syntax divided
 875              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 876 000a 01BE     		    bkpt    1
 877              	@ 0 "" 2
 878              	.LVL62:
 879              		.thumb
 880              		.syntax unified
 881              	.L71:
 882              	.LBE66:
 883              	.LBE65:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 71


2389:Generated_Source\PSoC4/CyLib.c **** 
 884              		.loc 1 2389 0
 885 000c 082C     		cmp	r4, #8
 886 000e 00D9     		bls	.L72
 887              	.LVL63:
 888              	.LBB67:
 889              	.LBB68:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 890              		.loc 1 2525 0
 891              		.syntax divided
 892              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 893 0010 01BE     		    bkpt    1
 894              	@ 0 "" 2
 895              	.LVL64:
 896              		.thumb
 897              		.syntax unified
 898              	.L72:
 899              	.LBE68:
 900              	.LBE67:
2391:Generated_Source\PSoC4/CyLib.c **** 
 901              		.loc 1 2391 0
 902 0012 0327     		movs	r7, #3
2393:Generated_Source\PSoC4/CyLib.c **** 
 903              		.loc 1 2393 0
 904 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 905              	.LVL65:
2391:Generated_Source\PSoC4/CyLib.c **** 
 906              		.loc 1 2391 0
 907 0018 3D00     		movs	r5, r7
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 908              		.loc 1 2395 0
 909 001a 094B     		ldr	r3, .L73
2391:Generated_Source\PSoC4/CyLib.c **** 
 910              		.loc 1 2391 0
 911 001c 2540     		ands	r5, r4
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 912              		.loc 1 2395 0
 913 001e 9C46     		mov	ip, r3
 914 0020 A408     		lsrs	r4, r4, #2
 915 0022 A400     		lsls	r4, r4, #2
 916 0024 6444     		add	r4, r4, ip
 917 0026 2168     		ldr	r1, [r4]
2391:Generated_Source\PSoC4/CyLib.c **** 
 918              		.loc 1 2391 0
 919 0028 ED00     		lsls	r5, r5, #3
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 920              		.loc 1 2396 0
 921 002a 0B00     		movs	r3, r1
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 922              		.loc 1 2397 0
 923 002c 3100     		movs	r1, r6
2391:Generated_Source\PSoC4/CyLib.c **** 
 924              		.loc 1 2391 0
 925 002e 0635     		adds	r5, r5, #6
 926              	.LVL66:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 927              		.loc 1 2396 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 72


 928 0030 AF40     		lsls	r7, r7, r5
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 929              		.loc 1 2397 0
 930 0032 A940     		lsls	r1, r1, r5
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 931              		.loc 1 2396 0
 932 0034 BB43     		bics	r3, r7
 933              	.LVL67:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 934              		.loc 1 2397 0
 935 0036 1943     		orrs	r1, r3
 936              	.LVL68:
2398:Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2398 0
 938 0038 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 939              		.loc 1 2400 0
 940 003a FFF7FEFF 		bl	CyExitCriticalSection
 941              	.LVL69:
2401:Generated_Source\PSoC4/CyLib.c **** 
 942              		.loc 1 2401 0
 943              		@ sp needed
 944              	.LVL70:
 945 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 946              	.L74:
 947              		.align	2
 948              	.L73:
 949 0040 00E400E0 		.word	-536812544
 950              		.cfi_endproc
 951              	.LFE15:
 952              		.size	CyIntSetPriority, .-CyIntSetPriority
 953              		.section	.text.CyIntGetPriority,"ax",%progbits
 954              		.align	2
 955              		.global	CyIntGetPriority
 956              		.code	16
 957              		.thumb_func
 958              		.type	CyIntGetPriority, %function
 959              	CyIntGetPriority:
 960              	.LFB16:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 961              		.loc 1 2417 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		@ link register save eliminated.
 966              	.LVL71:
2420:Generated_Source\PSoC4/CyLib.c **** 
 967              		.loc 1 2420 0
 968 0000 0828     		cmp	r0, #8
 969 0002 00D9     		bls	.L76
 970              	.LVL72:
 971              	.LBB69:
 972              	.LBB70:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 973              		.loc 1 2525 0
 974              		.syntax divided
 975              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 73


 976 0004 01BE     		    bkpt    1
 977              	@ 0 "" 2
 978              	.LVL73:
 979              		.thumb
 980              		.syntax unified
 981              	.L76:
 982              	.LBE70:
 983              	.LBE69:
2422:Generated_Source\PSoC4/CyLib.c **** 
 984              		.loc 1 2422 0
 985 0006 074A     		ldr	r2, .L77
 986 0008 8308     		lsrs	r3, r0, #2
 987 000a 9446     		mov	ip, r2
 988 000c 9B00     		lsls	r3, r3, #2
 989 000e 6344     		add	r3, r3, ip
 990 0010 1A68     		ldr	r2, [r3]
 991              	.LVL74:
2424:Generated_Source\PSoC4/CyLib.c **** }
 992              		.loc 1 2424 0
 993 0012 0321     		movs	r1, #3
 994 0014 0300     		movs	r3, r0
 995 0016 0B40     		ands	r3, r1
 996 0018 DB00     		lsls	r3, r3, #3
 997 001a 0633     		adds	r3, r3, #6
 998 001c DA40     		lsrs	r2, r2, r3
 999              	.LVL75:
 1000 001e 1000     		movs	r0, r2
 1001              	.LVL76:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1002              		.loc 1 2425 0
 1003              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 1004              		.loc 1 2424 0
 1005 0020 0840     		ands	r0, r1
2425:Generated_Source\PSoC4/CyLib.c **** 
 1006              		.loc 1 2425 0
 1007 0022 7047     		bx	lr
 1008              	.L78:
 1009              		.align	2
 1010              	.L77:
 1011 0024 00E400E0 		.word	-536812544
 1012              		.cfi_endproc
 1013              	.LFE16:
 1014              		.size	CyIntGetPriority, .-CyIntGetPriority
 1015              		.section	.text.CyIntEnable,"ax",%progbits
 1016              		.align	2
 1017              		.global	CyIntEnable
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	CyIntEnable, %function
 1021              	CyIntEnable:
 1022              	.LFB17:
2438:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1023              		.loc 1 2438 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 74


 1027              		@ link register save eliminated.
 1028              	.LVL77:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1029              		.loc 1 2439 0
 1030 0000 1F23     		movs	r3, #31
 1031 0002 1840     		ands	r0, r3
 1032              	.LVL78:
 1033 0004 1E3B     		subs	r3, r3, #30
 1034 0006 8340     		lsls	r3, r3, r0
 1035 0008 014A     		ldr	r2, .L80
2440:Generated_Source\PSoC4/CyLib.c **** 
 1036              		.loc 1 2440 0
 1037              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c **** }
 1038              		.loc 1 2439 0
 1039 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** 
 1040              		.loc 1 2440 0
 1041 000c 7047     		bx	lr
 1042              	.L81:
 1043 000e C046     		.align	2
 1044              	.L80:
 1045 0010 00E100E0 		.word	-536813312
 1046              		.cfi_endproc
 1047              	.LFE17:
 1048              		.size	CyIntEnable, .-CyIntEnable
 1049              		.section	.text.CyIntGetState,"ax",%progbits
 1050              		.align	2
 1051              		.global	CyIntGetState
 1052              		.code	16
 1053              		.thumb_func
 1054              		.type	CyIntGetState, %function
 1055              	CyIntGetState:
 1056              	.LFB18:
2456:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 1057              		.loc 1 2456 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062              	.LVL79:
2458:Generated_Source\PSoC4/CyLib.c **** }
 1063              		.loc 1 2458 0
 1064 0000 1F22     		movs	r2, #31
 1065 0002 044B     		ldr	r3, .L83
 1066 0004 1040     		ands	r0, r2
 1067              	.LVL80:
 1068 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** 
 1069              		.loc 1 2459 0
 1070              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 1071              		.loc 1 2458 0
 1072 0008 C340     		lsrs	r3, r3, r0
 1073 000a 1800     		movs	r0, r3
 1074 000c 0123     		movs	r3, #1
 1075 000e 1840     		ands	r0, r3
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 75


2459:Generated_Source\PSoC4/CyLib.c **** 
 1076              		.loc 1 2459 0
 1077 0010 7047     		bx	lr
 1078              	.L84:
 1079 0012 C046     		.align	2
 1080              	.L83:
 1081 0014 00E100E0 		.word	-536813312
 1082              		.cfi_endproc
 1083              	.LFE18:
 1084              		.size	CyIntGetState, .-CyIntGetState
 1085              		.section	.text.CyIntDisable,"ax",%progbits
 1086              		.align	2
 1087              		.global	CyIntDisable
 1088              		.code	16
 1089              		.thumb_func
 1090              		.type	CyIntDisable, %function
 1091              	CyIntDisable:
 1092              	.LFB19:
2472:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1093              		.loc 1 2472 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098              	.LVL81:
2473:Generated_Source\PSoC4/CyLib.c **** }
 1099              		.loc 1 2473 0
 1100 0000 1F23     		movs	r3, #31
 1101 0002 1840     		ands	r0, r3
 1102              	.LVL82:
 1103 0004 1E3B     		subs	r3, r3, #30
 1104 0006 8340     		lsls	r3, r3, r0
 1105 0008 014A     		ldr	r2, .L86
2474:Generated_Source\PSoC4/CyLib.c **** 
 1106              		.loc 1 2474 0
 1107              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c **** }
 1108              		.loc 1 2473 0
 1109 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** 
 1110              		.loc 1 2474 0
 1111 000c 7047     		bx	lr
 1112              	.L87:
 1113 000e C046     		.align	2
 1114              	.L86:
 1115 0010 80E100E0 		.word	-536813184
 1116              		.cfi_endproc
 1117              	.LFE19:
 1118              		.size	CyIntDisable, .-CyIntDisable
 1119              		.section	.text.CyIntSetPending,"ax",%progbits
 1120              		.align	2
 1121              		.global	CyIntSetPending
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	CyIntSetPending, %function
 1125              	CyIntSetPending:
 1126              	.LFB20:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 76


2486:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1127              		.loc 1 2486 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              		@ link register save eliminated.
 1132              	.LVL83:
2487:Generated_Source\PSoC4/CyLib.c **** }
 1133              		.loc 1 2487 0
 1134 0000 1F23     		movs	r3, #31
 1135 0002 1840     		ands	r0, r3
 1136              	.LVL84:
 1137 0004 1E3B     		subs	r3, r3, #30
 1138 0006 8340     		lsls	r3, r3, r0
 1139 0008 014A     		ldr	r2, .L89
2488:Generated_Source\PSoC4/CyLib.c **** 
 1140              		.loc 1 2488 0
 1141              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c **** }
 1142              		.loc 1 2487 0
 1143 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** 
 1144              		.loc 1 2488 0
 1145 000c 7047     		bx	lr
 1146              	.L90:
 1147 000e C046     		.align	2
 1148              	.L89:
 1149 0010 00E200E0 		.word	-536813056
 1150              		.cfi_endproc
 1151              	.LFE20:
 1152              		.size	CyIntSetPending, .-CyIntSetPending
 1153              		.section	.text.CyIntClearPending,"ax",%progbits
 1154              		.align	2
 1155              		.global	CyIntClearPending
 1156              		.code	16
 1157              		.thumb_func
 1158              		.type	CyIntClearPending, %function
 1159              	CyIntClearPending:
 1160              	.LFB21:
2501:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1161              		.loc 1 2501 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166              	.LVL85:
2502:Generated_Source\PSoC4/CyLib.c **** }
 1167              		.loc 1 2502 0
 1168 0000 1F23     		movs	r3, #31
 1169 0002 1840     		ands	r0, r3
 1170              	.LVL86:
 1171 0004 1E3B     		subs	r3, r3, #30
 1172 0006 8340     		lsls	r3, r3, r0
 1173 0008 014A     		ldr	r2, .L92
2503:Generated_Source\PSoC4/CyLib.c **** 
 1174              		.loc 1 2503 0
 1175              		@ sp needed
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 77


2502:Generated_Source\PSoC4/CyLib.c **** }
 1176              		.loc 1 2502 0
 1177 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** 
 1178              		.loc 1 2503 0
 1179 000c 7047     		bx	lr
 1180              	.L93:
 1181 000e C046     		.align	2
 1182              	.L92:
 1183 0010 80E200E0 		.word	-536812928
 1184              		.cfi_endproc
 1185              	.LFE21:
 1186              		.size	CyIntClearPending, .-CyIntClearPending
 1187              		.section	.text.CyHalt,"ax",%progbits
 1188              		.align	2
 1189              		.global	CyHalt
 1190              		.code	16
 1191              		.thumb_func
 1192              		.type	CyHalt, %function
 1193              	CyHalt:
 1194              	.LFB22:
2516:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1195              		.loc 1 2516 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200              	.LVL87:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1201              		.loc 1 2525 0
 1202              		.syntax divided
 1203              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1204 0000 01BE     		    bkpt    1
 1205              	@ 0 "" 2
2529:Generated_Source\PSoC4/CyLib.c **** 
 1206              		.loc 1 2529 0
 1207              		.thumb
 1208              		.syntax unified
 1209              		@ sp needed
 1210 0002 7047     		bx	lr
 1211              		.cfi_endproc
 1212              	.LFE22:
 1213              		.size	CyHalt, .-CyHalt
 1214              		.section	.text.CySoftwareReset,"ax",%progbits
 1215              		.align	2
 1216              		.global	CySoftwareReset
 1217              		.code	16
 1218              		.thumb_func
 1219              		.type	CySoftwareReset, %function
 1220              	CySoftwareReset:
 1221              	.LFB23:
2540:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
 1222              		.loc 1 2540 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              		@ link register save eliminated.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 78


2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1227              		.loc 1 2545 0
 1228 0000 034A     		ldr	r2, .L96
2546:Generated_Source\PSoC4/CyLib.c **** }
 1229              		.loc 1 2546 0
 1230 0002 0449     		ldr	r1, .L96+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1231              		.loc 1 2545 0
 1232 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** 
 1233              		.loc 1 2547 0
 1234              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c **** }
 1235              		.loc 1 2546 0
 1236 0006 1B04     		lsls	r3, r3, #16
 1237 0008 1B0C     		lsrs	r3, r3, #16
 1238 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1239              		.loc 1 2545 0
 1240 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** 
 1241              		.loc 1 2547 0
 1242 000e 7047     		bx	lr
 1243              	.L97:
 1244              		.align	2
 1245              	.L96:
 1246 0010 0CED00E0 		.word	-536810228
 1247 0014 0400FA05 		.word	100270084
 1248              		.cfi_endproc
 1249              	.LFE23:
 1250              		.size	CySoftwareReset, .-CySoftwareReset
 1251              		.section	.text.CyDelay,"ax",%progbits
 1252              		.align	2
 1253              		.global	CyDelay
 1254              		.code	16
 1255              		.thumb_func
 1256              		.type	CyDelay, %function
 1257              	CyDelay:
 1258              	.LFB24:
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1259              		.loc 1 2560 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              	.LVL88:
 1264 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1265              		.cfi_def_cfa_offset 24
 1266              		.cfi_offset 3, -24
 1267              		.cfi_offset 4, -20
 1268              		.cfi_offset 5, -16
 1269              		.cfi_offset 6, -12
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1272              		.loc 1 2561 0
 1273 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 79


 1274              		.loc 1 2560 0
 1275 0004 0700     		movs	r7, r0
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1276              		.loc 1 2561 0
 1277 0006 2D02     		lsls	r5, r5, #8
 1278 0008 A842     		cmp	r0, r5
 1279 000a 14D9     		bls	.L104
 1280 000c 0400     		movs	r4, r0
 1281 000e 0B4E     		ldr	r6, .L105
 1282              	.LVL89:
 1283              	.L100:
2566:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1284              		.loc 1 2566 0
 1285 0010 7068     		ldr	r0, [r6, #4]
 1286 0012 FFF7FEFF 		bl	CyDelayCycles
 1287              	.LVL90:
2567:Generated_Source\PSoC4/CyLib.c ****     }
 1288              		.loc 1 2567 0
 1289 0016 0A4B     		ldr	r3, .L105+4
 1290 0018 9C46     		mov	ip, r3
 1291 001a 6444     		add	r4, r4, ip
 1292              	.LVL91:
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1293              		.loc 1 2561 0
 1294 001c AC42     		cmp	r4, r5
 1295 001e F7D8     		bhi	.L100
 1296 0020 084B     		ldr	r3, .L105+8
 1297 0022 FB18     		adds	r3, r7, r3
 1298 0024 DB0B     		lsrs	r3, r3, #15
 1299 0026 DB03     		lsls	r3, r3, #15
 1300 0028 6744     		add	r7, r7, ip
 1301 002a FF1A     		subs	r7, r7, r3
 1302              	.LVL92:
 1303              	.L99:
2570:Generated_Source\PSoC4/CyLib.c **** }
 1304              		.loc 1 2570 0
 1305 002c B068     		ldr	r0, [r6, #8]
2571:Generated_Source\PSoC4/CyLib.c **** 
 1306              		.loc 1 2571 0
 1307              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1308              		.loc 1 2570 0
 1309 002e 7843     		muls	r0, r7
 1310 0030 FFF7FEFF 		bl	CyDelayCycles
 1311              	.LVL93:
2571:Generated_Source\PSoC4/CyLib.c **** 
 1312              		.loc 1 2571 0
 1313 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1314              	.LVL94:
 1315              	.L104:
 1316 0036 014E     		ldr	r6, .L105
 1317 0038 F8E7     		b	.L99
 1318              	.L106:
 1319 003a C046     		.align	2
 1320              	.L105:
 1321 003c 00000000 		.word	.LANCHOR1
 1322 0040 0080FFFF 		.word	-32768
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 80


 1323 0044 FF7FFFFF 		.word	-32769
 1324              		.cfi_endproc
 1325              	.LFE24:
 1326              		.size	CyDelay, .-CyDelay
 1327              		.section	.text.CyDelayUs,"ax",%progbits
 1328              		.align	2
 1329              		.global	CyDelayUs
 1330              		.code	16
 1331              		.thumb_func
 1332              		.type	CyDelayUs, %function
 1333              	CyDelayUs:
 1334              	.LFB25:
2583:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1335              		.loc 1 2583 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339              	.LVL95:
 1340 0000 10B5     		push	{r4, lr}
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 4, -8
 1343              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c **** }
 1344              		.loc 1 2584 0
 1345 0002 034B     		ldr	r3, .L108
2585:Generated_Source\PSoC4/CyLib.c **** 
 1346              		.loc 1 2585 0
 1347              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c **** }
 1348              		.loc 1 2584 0
 1349 0004 1B7B     		ldrb	r3, [r3, #12]
 1350 0006 5843     		muls	r0, r3
 1351              	.LVL96:
 1352 0008 FFF7FEFF 		bl	CyDelayCycles
 1353              	.LVL97:
2585:Generated_Source\PSoC4/CyLib.c **** 
 1354              		.loc 1 2585 0
 1355 000c 10BD     		pop	{r4, pc}
 1356              	.L109:
 1357 000e C046     		.align	2
 1358              	.L108:
 1359 0010 00000000 		.word	.LANCHOR1
 1360              		.cfi_endproc
 1361              	.LFE25:
 1362              		.size	CyDelayUs, .-CyDelayUs
 1363              		.global	__aeabi_uidiv
 1364              		.section	.text.CyDelayFreq,"ax",%progbits
 1365              		.align	2
 1366              		.global	CyDelayFreq
 1367              		.code	16
 1368              		.thumb_func
 1369              		.type	CyDelayFreq, %function
 1370              	CyDelayFreq:
 1371              	.LFB26:
2597:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1372              		.loc 1 2597 0
 1373              		.cfi_startproc
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 81


 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              	.LVL98:
 1377 0000 70B5     		push	{r4, r5, r6, lr}
 1378              		.cfi_def_cfa_offset 16
 1379              		.cfi_offset 4, -16
 1380              		.cfi_offset 5, -12
 1381              		.cfi_offset 6, -8
 1382              		.cfi_offset 14, -4
2597:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1383              		.loc 1 2597 0
 1384 0002 041E     		subs	r4, r0, #0
2598:Generated_Source\PSoC4/CyLib.c ****     {
 1385              		.loc 1 2598 0
 1386 0004 09D1     		bne	.L113
 1387 0006 0C25     		movs	r5, #12
 1388 0008 0B4A     		ldr	r2, .L114
 1389 000a 0C48     		ldr	r0, .L114+4
 1390              	.LVL99:
2604:Generated_Source\PSoC4/CyLib.c ****     }
 1391              		.loc 1 2604 0
 1392 000c 0C4C     		ldr	r4, .L114+8
 1393              	.LVL100:
 1394              	.L111:
 1395 000e 0D4B     		ldr	r3, .L114+12
2610:Generated_Source\PSoC4/CyLib.c **** 
 1396              		.loc 1 2610 0
 1397              		@ sp needed
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1398              		.loc 1 2607 0
 1399 0010 1D73     		strb	r5, [r3, #12]
 1400 0012 1C61     		str	r4, [r3, #16]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1401              		.loc 1 2608 0
 1402 0014 9860     		str	r0, [r3, #8]
2609:Generated_Source\PSoC4/CyLib.c **** }
 1403              		.loc 1 2609 0
 1404 0016 5A60     		str	r2, [r3, #4]
2610:Generated_Source\PSoC4/CyLib.c **** 
 1405              		.loc 1 2610 0
 1406 0018 70BD     		pop	{r4, r5, r6, pc}
 1407              	.LVL101:
 1408              	.L113:
 1409 001a 0B4B     		ldr	r3, .L114+16
 1410 001c 0B49     		ldr	r1, .L114+20
 1411 001e C018     		adds	r0, r0, r3
 1412              	.LVL102:
 1413 0020 FFF7FEFF 		bl	__aeabi_uidiv
 1414              	.LVL103:
 1415 0024 FA21     		movs	r1, #250
 1416 0026 0A4B     		ldr	r3, .L114+24
 1417 0028 C5B2     		uxtb	r5, r0
 1418 002a 8900     		lsls	r1, r1, #2
 1419 002c E018     		adds	r0, r4, r3
 1420 002e FFF7FEFF 		bl	__aeabi_uidiv
 1421              	.LVL104:
 1422 0032 C203     		lsls	r2, r0, #15
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 82


 1423 0034 EBE7     		b	.L111
 1424              	.L115:
 1425 0036 C046     		.align	2
 1426              	.L114:
 1427 0038 00007017 		.word	393216000
 1428 003c E02E0000 		.word	12000
 1429 0040 001BB700 		.word	12000000
 1430 0044 00000000 		.word	.LANCHOR1
 1431 0048 3F420F00 		.word	999999
 1432 004c 40420F00 		.word	1000000
 1433 0050 E7030000 		.word	999
 1434              		.cfi_endproc
 1435              	.LFE26:
 1436              		.size	CyDelayFreq, .-CyDelayFreq
 1437              		.section	.text.CySysTickStart,"ax",%progbits
 1438              		.align	2
 1439              		.global	CySysTickStart
 1440              		.code	16
 1441              		.thumb_func
 1442              		.type	CySysTickStart, %function
 1443              	CySysTickStart:
 1444              	.LFB27:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1445              		.loc 1 2629 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
 1449 0000 70B5     		push	{r4, r5, r6, lr}
 1450              		.cfi_def_cfa_offset 16
 1451              		.cfi_offset 4, -16
 1452              		.cfi_offset 5, -12
 1453              		.cfi_offset 6, -8
 1454              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1455              		.loc 1 2630 0
 1456 0002 114C     		ldr	r4, .L118
 1457 0004 6569     		ldr	r5, [r4, #20]
 1458 0006 002D     		cmp	r5, #0
 1459 0008 13D1     		bne	.L117
 1460              	.LVL105:
 1461              	.LBB71:
 1462              	.LBB72:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1463              		.loc 1 2672 0
 1464 000a FA21     		movs	r1, #250
 1465              	.LBB73:
 1466              	.LBB74:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1467              		.loc 1 2290 0
 1468 000c 0F4A     		ldr	r2, .L118+4
 1469 000e 104B     		ldr	r3, .L118+8
 1470              	.LBE74:
 1471              	.LBE73:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1472              		.loc 1 2663 0
 1473 0010 2560     		str	r5, [r4]
 1474              	.LVL106:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 83


 1475 0012 6560     		str	r5, [r4, #4]
 1476              	.LVL107:
 1477 0014 A560     		str	r5, [r4, #8]
 1478              	.LVL108:
 1479 0016 E560     		str	r5, [r4, #12]
 1480              	.LVL109:
 1481 0018 2561     		str	r5, [r4, #16]
 1482              	.LVL110:
 1483              	.LBB76:
 1484              	.LBB75:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1485              		.loc 1 2290 0
 1486 001a 1A60     		str	r2, [r3]
 1487              	.LVL111:
 1488              	.LBE75:
 1489              	.LBE76:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1490              		.loc 1 2672 0
 1491 001c 0D4B     		ldr	r3, .L118+12
 1492 001e 8900     		lsls	r1, r1, #2
 1493 0020 1869     		ldr	r0, [r3, #16]
 1494 0022 FFF7FEFF 		bl	__aeabi_uidiv
 1495              	.LVL112:
 1496              	.LBB77:
 1497              	.LBB78:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 2755 0
 1499 0026 0C4B     		ldr	r3, .L118+16
 1500 0028 1860     		str	r0, [r3]
 1501              	.LVL113:
 1502              	.LBE78:
 1503              	.LBE77:
 1504              	.LBB79:
 1505              	.LBB80:
2880:Generated_Source\PSoC4/CyLib.c **** }
 1506              		.loc 1 2880 0
 1507 002a 0C4B     		ldr	r3, .L118+20
 1508 002c 1D60     		str	r5, [r3]
 1509              	.LVL114:
 1510              	.LBE80:
 1511              	.LBE79:
 1512              	.LBE72:
 1513              	.LBE71:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1514              		.loc 1 2633 0
 1515 002e 0123     		movs	r3, #1
 1516 0030 6361     		str	r3, [r4, #20]
 1517              	.LVL115:
 1518              	.L117:
 1519              	.LBB81:
 1520              	.LBB82:
 1521              	.LBB83:
 1522              	.LBB84:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1523              		.loc 1 2722 0
 1524 0032 0222     		movs	r2, #2
 1525 0034 0A4B     		ldr	r3, .L118+24
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 84


 1526              	.LBE84:
 1527              	.LBE83:
 1528              	.LBE82:
 1529              	.LBE81:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1530              		.loc 1 2637 0
 1531              		@ sp needed
 1532              	.LBB88:
 1533              	.LBB87:
 1534              	.LBB86:
 1535              	.LBB85:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1536              		.loc 1 2722 0
 1537 0036 1968     		ldr	r1, [r3]
 1538 0038 0A43     		orrs	r2, r1
 1539 003a 1A60     		str	r2, [r3]
 1540              	.LBE85:
 1541              	.LBE86:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1542              		.loc 1 2690 0
 1543 003c 0122     		movs	r2, #1
 1544 003e 1968     		ldr	r1, [r3]
 1545 0040 0A43     		orrs	r2, r1
 1546 0042 1A60     		str	r2, [r3]
 1547              	.LBE87:
 1548              	.LBE88:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1549              		.loc 1 2637 0
 1550 0044 70BD     		pop	{r4, r5, r6, pc}
 1551              	.L119:
 1552 0046 C046     		.align	2
 1553              	.L118:
 1554 0048 00000000 		.word	.LANCHOR0
 1555 004c 00000000 		.word	CySysTickServiceCallbacks
 1556 0050 3C000020 		.word	536870972
 1557 0054 00000000 		.word	.LANCHOR1
 1558 0058 14E000E0 		.word	-536813548
 1559 005c 18E000E0 		.word	-536813544
 1560 0060 10E000E0 		.word	-536813552
 1561              		.cfi_endproc
 1562              	.LFE27:
 1563              		.size	CySysTickStart, .-CySysTickStart
 1564              		.section	.text.CySysTickInit,"ax",%progbits
 1565              		.align	2
 1566              		.global	CySysTickInit
 1567              		.code	16
 1568              		.thumb_func
 1569              		.type	CySysTickInit, %function
 1570              	CySysTickInit:
 1571              	.LFB28:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1572              		.loc 1 2658 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576              	.LVL116:
 1577 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 85


 1578              		.cfi_def_cfa_offset 8
 1579              		.cfi_offset 4, -8
 1580              		.cfi_offset 14, -4
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1581              		.loc 1 2663 0
 1582 0002 0024     		movs	r4, #0
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1583              		.loc 1 2672 0
 1584 0004 FA21     		movs	r1, #250
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1585              		.loc 1 2663 0
 1586 0006 094B     		ldr	r3, .L121
 1587              	.LBB89:
 1588              	.LBB90:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1589              		.loc 1 2290 0
 1590 0008 094A     		ldr	r2, .L121+4
 1591              	.LBE90:
 1592              	.LBE89:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1593              		.loc 1 2663 0
 1594 000a 1C60     		str	r4, [r3]
 1595              	.LVL117:
 1596 000c 1C61     		str	r4, [r3, #16]
 1597 000e 5C60     		str	r4, [r3, #4]
 1598              	.LVL118:
 1599 0010 9C60     		str	r4, [r3, #8]
 1600              	.LVL119:
 1601 0012 DC60     		str	r4, [r3, #12]
 1602              	.LVL120:
 1603              	.LBB93:
 1604              	.LBB91:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1605              		.loc 1 2290 0
 1606 0014 074B     		ldr	r3, .L121+8
 1607              	.LVL121:
 1608              	.LBE91:
 1609              	.LBE93:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1610              		.loc 1 2672 0
 1611 0016 8900     		lsls	r1, r1, #2
 1612              	.LBB94:
 1613              	.LBB92:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1614              		.loc 1 2290 0
 1615 0018 1A60     		str	r2, [r3]
 1616              	.LVL122:
 1617              	.LBE92:
 1618              	.LBE94:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1619              		.loc 1 2672 0
 1620 001a 074B     		ldr	r3, .L121+12
2674:Generated_Source\PSoC4/CyLib.c **** 
 1621              		.loc 1 2674 0
 1622              		@ sp needed
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1623              		.loc 1 2672 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 86


 1624 001c 1869     		ldr	r0, [r3, #16]
 1625 001e FFF7FEFF 		bl	__aeabi_uidiv
 1626              	.LVL123:
 1627              	.LBB95:
 1628              	.LBB96:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2755 0
 1630 0022 064B     		ldr	r3, .L121+16
 1631 0024 1860     		str	r0, [r3]
 1632              	.LVL124:
 1633              	.LBE96:
 1634              	.LBE95:
 1635              	.LBB97:
 1636              	.LBB98:
2880:Generated_Source\PSoC4/CyLib.c **** }
 1637              		.loc 1 2880 0
 1638 0026 064B     		ldr	r3, .L121+20
 1639 0028 1C60     		str	r4, [r3]
 1640              	.LBE98:
 1641              	.LBE97:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1642              		.loc 1 2674 0
 1643 002a 10BD     		pop	{r4, pc}
 1644              	.L122:
 1645              		.align	2
 1646              	.L121:
 1647 002c 00000000 		.word	.LANCHOR0
 1648 0030 00000000 		.word	CySysTickServiceCallbacks
 1649 0034 3C000020 		.word	536870972
 1650 0038 00000000 		.word	.LANCHOR1
 1651 003c 14E000E0 		.word	-536813548
 1652 0040 18E000E0 		.word	-536813544
 1653              		.cfi_endproc
 1654              	.LFE28:
 1655              		.size	CySysTickInit, .-CySysTickInit
 1656              		.section	.text.CySysTickEnable,"ax",%progbits
 1657              		.align	2
 1658              		.global	CySysTickEnable
 1659              		.code	16
 1660              		.thumb_func
 1661              		.type	CySysTickEnable, %function
 1662              	CySysTickEnable:
 1663              	.LFB29:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1664              		.loc 1 2688 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              		@ link register save eliminated.
 1669              	.LBB99:
 1670              	.LBB100:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1671              		.loc 1 2722 0
 1672 0000 0222     		movs	r2, #2
 1673 0002 044B     		ldr	r3, .L124
 1674              	.LBE100:
 1675              	.LBE99:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 87


2691:Generated_Source\PSoC4/CyLib.c **** 
 1676              		.loc 1 2691 0
 1677              		@ sp needed
 1678              	.LBB102:
 1679              	.LBB101:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1680              		.loc 1 2722 0
 1681 0004 1968     		ldr	r1, [r3]
 1682 0006 0A43     		orrs	r2, r1
 1683 0008 1A60     		str	r2, [r3]
 1684              	.LBE101:
 1685              	.LBE102:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1686              		.loc 1 2690 0
 1687 000a 0122     		movs	r2, #1
 1688 000c 1968     		ldr	r1, [r3]
 1689 000e 0A43     		orrs	r2, r1
 1690 0010 1A60     		str	r2, [r3]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1691              		.loc 1 2691 0
 1692 0012 7047     		bx	lr
 1693              	.L125:
 1694              		.align	2
 1695              	.L124:
 1696 0014 10E000E0 		.word	-536813552
 1697              		.cfi_endproc
 1698              	.LFE29:
 1699              		.size	CySysTickEnable, .-CySysTickEnable
 1700              		.section	.text.CySysTickStop,"ax",%progbits
 1701              		.align	2
 1702              		.global	CySysTickStop
 1703              		.code	16
 1704              		.thumb_func
 1705              		.type	CySysTickStop, %function
 1706              	CySysTickStop:
 1707              	.LFB30:
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1708              		.loc 1 2705 0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c **** }
 1713              		.loc 1 2706 0
 1714 0000 0121     		movs	r1, #1
 1715 0002 024A     		ldr	r2, .L127
2707:Generated_Source\PSoC4/CyLib.c **** 
 1716              		.loc 1 2707 0
 1717              		@ sp needed
2706:Generated_Source\PSoC4/CyLib.c **** }
 1718              		.loc 1 2706 0
 1719 0004 1368     		ldr	r3, [r2]
 1720 0006 8B43     		bics	r3, r1
 1721 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** 
 1722              		.loc 1 2707 0
 1723 000a 7047     		bx	lr
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 88


 1724              	.L128:
 1725              		.align	2
 1726              	.L127:
 1727 000c 10E000E0 		.word	-536813552
 1728              		.cfi_endproc
 1729              	.LFE30:
 1730              		.size	CySysTickStop, .-CySysTickStop
 1731              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1732              		.align	2
 1733              		.global	CySysTickEnableInterrupt
 1734              		.code	16
 1735              		.thumb_func
 1736              		.type	CySysTickEnableInterrupt, %function
 1737              	CySysTickEnableInterrupt:
 1738              	.LFB31:
2721:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1739              		.loc 1 2721 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 0
 1742              		@ frame_needed = 0, uses_anonymous_args = 0
 1743              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c **** }
 1744              		.loc 1 2722 0
 1745 0000 0223     		movs	r3, #2
 1746 0002 024A     		ldr	r2, .L130
2723:Generated_Source\PSoC4/CyLib.c **** 
 1747              		.loc 1 2723 0
 1748              		@ sp needed
2722:Generated_Source\PSoC4/CyLib.c **** }
 1749              		.loc 1 2722 0
 1750 0004 1168     		ldr	r1, [r2]
 1751 0006 0B43     		orrs	r3, r1
 1752 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** 
 1753              		.loc 1 2723 0
 1754 000a 7047     		bx	lr
 1755              	.L131:
 1756              		.align	2
 1757              	.L130:
 1758 000c 10E000E0 		.word	-536813552
 1759              		.cfi_endproc
 1760              	.LFE31:
 1761              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1762              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1763              		.align	2
 1764              		.global	CySysTickDisableInterrupt
 1765              		.code	16
 1766              		.thumb_func
 1767              		.type	CySysTickDisableInterrupt, %function
 1768              	CySysTickDisableInterrupt:
 1769              	.LFB32:
2737:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1770              		.loc 1 2737 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 89


2738:Generated_Source\PSoC4/CyLib.c **** }
 1775              		.loc 1 2738 0
 1776 0000 0221     		movs	r1, #2
 1777 0002 024A     		ldr	r2, .L133
2739:Generated_Source\PSoC4/CyLib.c **** 
 1778              		.loc 1 2739 0
 1779              		@ sp needed
2738:Generated_Source\PSoC4/CyLib.c **** }
 1780              		.loc 1 2738 0
 1781 0004 1368     		ldr	r3, [r2]
 1782 0006 8B43     		bics	r3, r1
 1783 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** 
 1784              		.loc 1 2739 0
 1785 000a 7047     		bx	lr
 1786              	.L134:
 1787              		.align	2
 1788              	.L133:
 1789 000c 10E000E0 		.word	-536813552
 1790              		.cfi_endproc
 1791              	.LFE32:
 1792              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1793              		.section	.text.CySysTickSetReload,"ax",%progbits
 1794              		.align	2
 1795              		.global	CySysTickSetReload
 1796              		.code	16
 1797              		.thumb_func
 1798              		.type	CySysTickSetReload, %function
 1799              	CySysTickSetReload:
 1800              	.LFB33:
2754:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1801              		.loc 1 2754 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
 1806              	.LVL125:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1807              		.loc 1 2755 0
 1808 0000 024B     		ldr	r3, .L136
 1809 0002 0002     		lsls	r0, r0, #8
 1810              	.LVL126:
 1811 0004 000A     		lsrs	r0, r0, #8
 1812 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** 
 1813              		.loc 1 2756 0
 1814              		@ sp needed
 1815 0008 7047     		bx	lr
 1816              	.L137:
 1817 000a C046     		.align	2
 1818              	.L136:
 1819 000c 14E000E0 		.word	-536813548
 1820              		.cfi_endproc
 1821              	.LFE33:
 1822              		.size	CySysTickSetReload, .-CySysTickSetReload
 1823              		.section	.text.CySysTickGetReload,"ax",%progbits
 1824              		.align	2
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 90


 1825              		.global	CySysTickGetReload
 1826              		.code	16
 1827              		.thumb_func
 1828              		.type	CySysTickGetReload, %function
 1829              	CySysTickGetReload:
 1830              	.LFB34:
2770:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1831              		.loc 1 2770 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c **** }
 1836              		.loc 1 2771 0
 1837 0000 024B     		ldr	r3, .L139
2772:Generated_Source\PSoC4/CyLib.c **** 
 1838              		.loc 1 2772 0
 1839              		@ sp needed
2771:Generated_Source\PSoC4/CyLib.c **** }
 1840              		.loc 1 2771 0
 1841 0002 1868     		ldr	r0, [r3]
 1842 0004 0002     		lsls	r0, r0, #8
 1843 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** 
 1844              		.loc 1 2772 0
 1845 0008 7047     		bx	lr
 1846              	.L140:
 1847 000a C046     		.align	2
 1848              	.L139:
 1849 000c 14E000E0 		.word	-536813548
 1850              		.cfi_endproc
 1851              	.LFE34:
 1852              		.size	CySysTickGetReload, .-CySysTickGetReload
 1853              		.section	.text.CySysTickGetValue,"ax",%progbits
 1854              		.align	2
 1855              		.global	CySysTickGetValue
 1856              		.code	16
 1857              		.thumb_func
 1858              		.type	CySysTickGetValue, %function
 1859              	CySysTickGetValue:
 1860              	.LFB35:
2786:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1861              		.loc 1 2786 0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 0
 1864              		@ frame_needed = 0, uses_anonymous_args = 0
 1865              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c **** }
 1866              		.loc 1 2787 0
 1867 0000 024B     		ldr	r3, .L142
2788:Generated_Source\PSoC4/CyLib.c **** 
 1868              		.loc 1 2788 0
 1869              		@ sp needed
2787:Generated_Source\PSoC4/CyLib.c **** }
 1870              		.loc 1 2787 0
 1871 0002 1868     		ldr	r0, [r3]
 1872 0004 0002     		lsls	r0, r0, #8
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 91


 1873 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** 
 1874              		.loc 1 2788 0
 1875 0008 7047     		bx	lr
 1876              	.L143:
 1877 000a C046     		.align	2
 1878              	.L142:
 1879 000c 18E000E0 		.word	-536813544
 1880              		.cfi_endproc
 1881              	.LFE35:
 1882              		.size	CySysTickGetValue, .-CySysTickGetValue
 1883              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1884              		.align	2
 1885              		.global	CySysTickGetCountFlag
 1886              		.code	16
 1887              		.thumb_func
 1888              		.type	CySysTickGetCountFlag, %function
 1889              	CySysTickGetCountFlag:
 1890              	.LFB36:
2866:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1891              		.loc 1 2866 0
 1892              		.cfi_startproc
 1893              		@ args = 0, pretend = 0, frame = 0
 1894              		@ frame_needed = 0, uses_anonymous_args = 0
 1895              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c **** }
 1896              		.loc 1 2867 0
 1897 0000 024B     		ldr	r3, .L145
2868:Generated_Source\PSoC4/CyLib.c **** 
 1898              		.loc 1 2868 0
 1899              		@ sp needed
2867:Generated_Source\PSoC4/CyLib.c **** }
 1900              		.loc 1 2867 0
 1901 0002 1868     		ldr	r0, [r3]
 1902 0004 C003     		lsls	r0, r0, #15
 1903 0006 C00F     		lsrs	r0, r0, #31
2868:Generated_Source\PSoC4/CyLib.c **** 
 1904              		.loc 1 2868 0
 1905 0008 7047     		bx	lr
 1906              	.L146:
 1907 000a C046     		.align	2
 1908              	.L145:
 1909 000c 10E000E0 		.word	-536813552
 1910              		.cfi_endproc
 1911              	.LFE36:
 1912              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1913              		.section	.text.CySysTickClear,"ax",%progbits
 1914              		.align	2
 1915              		.global	CySysTickClear
 1916              		.code	16
 1917              		.thumb_func
 1918              		.type	CySysTickClear, %function
 1919              	CySysTickClear:
 1920              	.LFB37:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1921              		.loc 1 2879 0
 1922              		.cfi_startproc
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 92


 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 1926              		.loc 1 2880 0
 1927 0000 0022     		movs	r2, #0
 1928 0002 014B     		ldr	r3, .L148
2881:Generated_Source\PSoC4/CyLib.c **** 
 1929              		.loc 1 2881 0
 1930              		@ sp needed
2880:Generated_Source\PSoC4/CyLib.c **** }
 1931              		.loc 1 2880 0
 1932 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 1933              		.loc 1 2881 0
 1934 0006 7047     		bx	lr
 1935              	.L149:
 1936              		.align	2
 1937              	.L148:
 1938 0008 18E000E0 		.word	-536813544
 1939              		.cfi_endproc
 1940              	.LFE37:
 1941              		.size	CySysTickClear, .-CySysTickClear
 1942              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1943              		.align	2
 1944              		.global	CySysTickSetCallback
 1945              		.code	16
 1946              		.thumb_func
 1947              		.type	CySysTickSetCallback, %function
 1948              	CySysTickSetCallback:
 1949              	.LFB38:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1950              		.loc 1 2914 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              		@ link register save eliminated.
 1955              	.LVL127:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1956              		.loc 1 2917 0
 1957 0000 024A     		ldr	r2, .L151
 1958 0002 8300     		lsls	r3, r0, #2
 1959 0004 9858     		ldr	r0, [r3, r2]
 1960              	.LVL128:
2920:Generated_Source\PSoC4/CyLib.c **** 
 1961              		.loc 1 2920 0
 1962              		@ sp needed
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1963              		.loc 1 2918 0
 1964 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 1965              		.loc 1 2920 0
 1966 0008 7047     		bx	lr
 1967              	.L152:
 1968 000a C046     		.align	2
 1969              	.L151:
 1970 000c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 93


 1971              		.cfi_endproc
 1972              	.LFE38:
 1973              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1974              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1975              		.align	2
 1976              		.global	CySysTickGetCallback
 1977              		.code	16
 1978              		.thumb_func
 1979              		.type	CySysTickGetCallback, %function
 1980              	CySysTickGetCallback:
 1981              	.LFB39:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1982              		.loc 1 2938 0
 1983              		.cfi_startproc
 1984              		@ args = 0, pretend = 0, frame = 0
 1985              		@ frame_needed = 0, uses_anonymous_args = 0
 1986              		@ link register save eliminated.
 1987              	.LVL129:
2939:Generated_Source\PSoC4/CyLib.c **** }
 1988              		.loc 1 2939 0
 1989 0000 014B     		ldr	r3, .L154
 1990 0002 8000     		lsls	r0, r0, #2
 1991              	.LVL130:
 1992 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 1993              		.loc 1 2940 0
 1994              		@ sp needed
 1995 0006 7047     		bx	lr
 1996              	.L155:
 1997              		.align	2
 1998              	.L154:
 1999 0008 00000000 		.word	.LANCHOR0
 2000              		.cfi_endproc
 2001              	.LFE39:
 2002              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2003              		.section	.text.CyGetUniqueId,"ax",%progbits
 2004              		.align	2
 2005              		.global	CyGetUniqueId
 2006              		.code	16
 2007              		.thumb_func
 2008              		.type	CyGetUniqueId, %function
 2009              	CyGetUniqueId:
 2010              	.LFB41:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 94


2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2011              		.loc 1 2983 0
 2012              		.cfi_startproc
 2013              		@ args = 0, pretend = 0, frame = 0
 2014              		@ frame_needed = 0, uses_anonymous_args = 0
 2015              		@ link register save eliminated.
 2016              	.LVL131:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2017              		.loc 1 2985 0
 2018 0000 144B     		ldr	r3, .L157
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2019              		.loc 1 3005 0
 2020              		@ sp needed
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2021              		.loc 1 2985 0
 2022 0002 1A78     		ldrb	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2023              		.loc 1 2986 0
 2024 0004 144B     		ldr	r3, .L157+4
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2025              		.loc 1 2985 0
 2026 0006 D1B2     		uxtb	r1, r2
 2027 0008 0160     		str	r1, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2028              		.loc 1 2986 0
 2029 000a 1B78     		ldrb	r3, [r3]
 2030 000c 1B02     		lsls	r3, r3, #8
 2031 000e 0B43     		orrs	r3, r1
 2032 0010 1A00     		movs	r2, r3
 2033 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2034              		.loc 1 2987 0
 2035 0014 114B     		ldr	r3, .L157+8
 2036 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 95


 2037 0018 1B04     		lsls	r3, r3, #16
 2038 001a 1343     		orrs	r3, r2
2988:Generated_Source\PSoC4/CyLib.c **** 
 2039              		.loc 1 2988 0
 2040 001c 104A     		ldr	r2, .L157+12
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2041              		.loc 1 2987 0
 2042 001e 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c **** 
 2043              		.loc 1 2988 0
 2044 0020 1278     		ldrb	r2, [r2]
 2045 0022 1206     		lsls	r2, r2, #24
 2046 0024 1343     		orrs	r3, r2
 2047 0026 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2048              		.loc 1 2990 0
 2049 0028 0E4B     		ldr	r3, .L157+16
 2050 002a 1A78     		ldrb	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2051              		.loc 1 2991 0
 2052 002c 0E4B     		ldr	r3, .L157+20
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2053              		.loc 1 2990 0
 2054 002e D1B2     		uxtb	r1, r2
 2055 0030 4160     		str	r1, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2056              		.loc 1 2991 0
 2057 0032 1B78     		ldrb	r3, [r3]
 2058 0034 1B02     		lsls	r3, r3, #8
 2059 0036 0B43     		orrs	r3, r1
 2060 0038 1A00     		movs	r2, r3
 2061 003a 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2062              		.loc 1 2992 0
 2063 003c 0B4B     		ldr	r3, .L157+24
 2064 003e 1B78     		ldrb	r3, [r3]
 2065 0040 1B04     		lsls	r3, r3, #16
 2066 0042 1343     		orrs	r3, r2
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2067              		.loc 1 2993 0
 2068 0044 0A4A     		ldr	r2, .L157+28
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2069              		.loc 1 2992 0
 2070 0046 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2071              		.loc 1 2993 0
 2072 0048 1278     		ldrb	r2, [r2]
 2073 004a 1206     		lsls	r2, r2, #24
 2074 004c 1343     		orrs	r3, r2
 2075 004e 4360     		str	r3, [r0, #4]
 2076              		.loc 1 3005 0
 2077 0050 7047     		bx	lr
 2078              	.L158:
 2079 0052 C046     		.align	2
 2080              	.L157:
 2081 0054 78F1FF0F 		.word	268431736
 2082 0058 79F1FF0F 		.word	268431737
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 96


 2083 005c 7AF1FF0F 		.word	268431738
 2084 0060 7BF1FF0F 		.word	268431739
 2085 0064 7CF1FF0F 		.word	268431740
 2086 0068 7DF1FF0F 		.word	268431741
 2087 006c 7EF1FF0F 		.word	268431742
 2088 0070 7FF1FF0F 		.word	268431743
 2089              		.cfi_endproc
 2090              	.LFE41:
 2091              		.size	CyGetUniqueId, .-CyGetUniqueId
 2092              		.global	CySysClkPumpConfig
 2093              		.global	CySysTickInitVar
 2094              		.global	cydelay32kMs
 2095              		.global	cydelayFreqMhz
 2096              		.global	cydelayFreqKhz
 2097              		.global	cydelayFreqHz
 2098              		.data
 2099              		.align	2
 2100              		.set	.LANCHOR1,. + 0
 2101              		.type	CySysClkPumpConfig, %object
 2102              		.size	CySysClkPumpConfig, 4
 2103              	CySysClkPumpConfig:
 2104 0000 01000000 		.word	1
 2105              		.type	cydelay32kMs, %object
 2106              		.size	cydelay32kMs, 4
 2107              	cydelay32kMs:
 2108 0004 00007017 		.word	393216000
 2109              		.type	cydelayFreqKhz, %object
 2110              		.size	cydelayFreqKhz, 4
 2111              	cydelayFreqKhz:
 2112 0008 E02E0000 		.word	12000
 2113              		.type	cydelayFreqMhz, %object
 2114              		.size	cydelayFreqMhz, 1
 2115              	cydelayFreqMhz:
 2116 000c 0C       		.byte	12
 2117 000d 000000   		.space	3
 2118              		.type	cydelayFreqHz, %object
 2119              		.size	cydelayFreqHz, 4
 2120              	cydelayFreqHz:
 2121 0010 001BB700 		.word	12000000
 2122              		.bss
 2123              		.align	2
 2124              		.set	.LANCHOR0,. + 0
 2125              		.type	CySysTickCallbacks, %object
 2126              		.size	CySysTickCallbacks, 20
 2127              	CySysTickCallbacks:
 2128 0000 00000000 		.space	20
 2128      00000000 
 2128      00000000 
 2128      00000000 
 2128      00000000 
 2129              		.type	CySysTickInitVar, %object
 2130              		.size	CySysTickInitVar, 4
 2131              	CySysTickInitVar:
 2132 0014 00000000 		.space	4
 2133              		.text
 2134              	.Letext0:
 2135              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 97


 2136              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2137              		.section	.debug_info,"",%progbits
 2138              	.Ldebug_info0:
 2139 0000 0C0C0000 		.4byte	0xc0c
 2140 0004 0400     		.2byte	0x4
 2141 0006 00000000 		.4byte	.Ldebug_abbrev0
 2142 000a 04       		.byte	0x4
 2143 000b 01       		.uleb128 0x1
 2144 000c D3000000 		.4byte	.LASF94
 2145 0010 0C       		.byte	0xc
 2146 0011 02060000 		.4byte	.LASF95
 2147 0015 AC030000 		.4byte	.LASF96
 2148 0019 98000000 		.4byte	.Ldebug_ranges0+0x98
 2149 001d 00000000 		.4byte	0
 2150 0021 00000000 		.4byte	.Ldebug_line0
 2151 0025 02       		.uleb128 0x2
 2152 0026 01       		.byte	0x1
 2153 0027 06       		.byte	0x6
 2154 0028 6F010000 		.4byte	.LASF0
 2155 002c 02       		.uleb128 0x2
 2156 002d 01       		.byte	0x1
 2157 002e 08       		.byte	0x8
 2158 002f CB040000 		.4byte	.LASF1
 2159 0033 02       		.uleb128 0x2
 2160 0034 02       		.byte	0x2
 2161 0035 05       		.byte	0x5
 2162 0036 D9040000 		.4byte	.LASF2
 2163 003a 02       		.uleb128 0x2
 2164 003b 02       		.byte	0x2
 2165 003c 07       		.byte	0x7
 2166 003d F5020000 		.4byte	.LASF3
 2167 0041 02       		.uleb128 0x2
 2168 0042 04       		.byte	0x4
 2169 0043 05       		.byte	0x5
 2170 0044 AE010000 		.4byte	.LASF4
 2171 0048 02       		.uleb128 0x2
 2172 0049 04       		.byte	0x4
 2173 004a 07       		.byte	0x7
 2174 004b 98020000 		.4byte	.LASF5
 2175 004f 02       		.uleb128 0x2
 2176 0050 08       		.byte	0x8
 2177 0051 05       		.byte	0x5
 2178 0052 61010000 		.4byte	.LASF6
 2179 0056 02       		.uleb128 0x2
 2180 0057 08       		.byte	0x8
 2181 0058 07       		.byte	0x7
 2182 0059 67000000 		.4byte	.LASF7
 2183 005d 03       		.uleb128 0x3
 2184 005e 04       		.byte	0x4
 2185 005f 05       		.byte	0x5
 2186 0060 696E7400 		.ascii	"int\000"
 2187 0064 02       		.uleb128 0x2
 2188 0065 04       		.byte	0x4
 2189 0066 07       		.byte	0x7
 2190 0067 7C020000 		.4byte	.LASF8
 2191 006b 04       		.uleb128 0x4
 2192 006c D9010000 		.4byte	.LASF9
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 98


 2193 0070 02       		.byte	0x2
 2194 0071 D201     		.2byte	0x1d2
 2195 0073 2C000000 		.4byte	0x2c
 2196 0077 04       		.uleb128 0x4
 2197 0078 0F000000 		.4byte	.LASF10
 2198 007c 02       		.byte	0x2
 2199 007d D301     		.2byte	0x1d3
 2200 007f 3A000000 		.4byte	0x3a
 2201 0083 04       		.uleb128 0x4
 2202 0084 02020000 		.4byte	.LASF11
 2203 0088 02       		.byte	0x2
 2204 0089 D401     		.2byte	0x1d4
 2205 008b 48000000 		.4byte	0x48
 2206 008f 02       		.uleb128 0x2
 2207 0090 04       		.byte	0x4
 2208 0091 04       		.byte	0x4
 2209 0092 67040000 		.4byte	.LASF12
 2210 0096 02       		.uleb128 0x2
 2211 0097 08       		.byte	0x8
 2212 0098 04       		.byte	0x4
 2213 0099 F5010000 		.4byte	.LASF13
 2214 009d 02       		.uleb128 0x2
 2215 009e 01       		.byte	0x1
 2216 009f 08       		.byte	0x8
 2217 00a0 1C050000 		.4byte	.LASF14
 2218 00a4 04       		.uleb128 0x4
 2219 00a5 BF040000 		.4byte	.LASF15
 2220 00a9 02       		.byte	0x2
 2221 00aa 7C02     		.2byte	0x27c
 2222 00ac B0000000 		.4byte	0xb0
 2223 00b0 05       		.uleb128 0x5
 2224 00b1 6B000000 		.4byte	0x6b
 2225 00b5 04       		.uleb128 0x4
 2226 00b6 63030000 		.4byte	.LASF16
 2227 00ba 02       		.byte	0x2
 2228 00bb 7E02     		.2byte	0x27e
 2229 00bd C1000000 		.4byte	0xc1
 2230 00c1 05       		.uleb128 0x5
 2231 00c2 83000000 		.4byte	0x83
 2232 00c6 04       		.uleb128 0x4
 2233 00c7 21050000 		.4byte	.LASF17
 2234 00cb 02       		.byte	0x2
 2235 00cc 8E02     		.2byte	0x28e
 2236 00ce D2000000 		.4byte	0xd2
 2237 00d2 06       		.uleb128 0x6
 2238 00d3 04       		.byte	0x4
 2239 00d4 D8000000 		.4byte	0xd8
 2240 00d8 07       		.uleb128 0x7
 2241 00d9 02       		.uleb128 0x2
 2242 00da 08       		.byte	0x8
 2243 00db 04       		.byte	0x4
 2244 00dc A0030000 		.4byte	.LASF18
 2245 00e0 02       		.uleb128 0x2
 2246 00e1 04       		.byte	0x4
 2247 00e2 07       		.byte	0x7
 2248 00e3 85030000 		.4byte	.LASF19
 2249 00e7 08       		.uleb128 0x8
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 99


 2250 00e8 83040000 		.4byte	.LASF20
 2251 00ec 03       		.byte	0x3
 2252 00ed F5       		.byte	0xf5
 2253 00ee D2000000 		.4byte	0xd2
 2254 00f2 09       		.uleb128 0x9
 2255 00f3 C4040000 		.4byte	.LASF23
 2256 00f7 01       		.byte	0x1
 2257 00f8 D309     		.2byte	0x9d3
 2258 00fa 01       		.byte	0x1
 2259 00fb 0C010000 		.4byte	0x10c
 2260 00ff 0A       		.uleb128 0xa
 2261 0100 15050000 		.4byte	.LASF25
 2262 0104 01       		.byte	0x1
 2263 0105 D309     		.2byte	0x9d3
 2264 0107 6B000000 		.4byte	0x6b
 2265 010b 00       		.byte	0
 2266 010c 0B       		.uleb128 0xb
 2267 010d AC000000 		.4byte	.LASF21
 2268 0111 01       		.byte	0x1
 2269 0112 A00A     		.2byte	0xaa0
 2270 0114 01       		.byte	0x1
 2271 0115 0C       		.uleb128 0xc
 2272 0116 66020000 		.4byte	.LASF97
 2273 011a 01       		.byte	0x1
 2274 011b 310B     		.2byte	0xb31
 2275 011d 83000000 		.4byte	0x83
 2276 0121 01       		.byte	0x1
 2277 0122 0D       		.uleb128 0xd
 2278 0123 48060000 		.4byte	.LASF98
 2279 0127 01       		.byte	0x1
 2280 0128 860B     		.2byte	0xb86
 2281 012a 01       		.byte	0x1
 2282 012b 3A010000 		.4byte	0x13a
 2283 012f 0E       		.uleb128 0xe
 2284 0130 6900     		.ascii	"i\000"
 2285 0132 01       		.byte	0x1
 2286 0133 880B     		.2byte	0xb88
 2287 0135 83000000 		.4byte	0x83
 2288 0139 00       		.byte	0
 2289 013a 0B       		.uleb128 0xb
 2290 013b 89020000 		.4byte	.LASF22
 2291 013f 01       		.byte	0x1
 2292 0140 3E0B     		.2byte	0xb3e
 2293 0142 01       		.byte	0x1
 2294 0143 09       		.uleb128 0x9
 2295 0144 35060000 		.4byte	.LASF24
 2296 0148 01       		.byte	0x1
 2297 0149 C10A     		.2byte	0xac1
 2298 014b 01       		.byte	0x1
 2299 014c 5D010000 		.4byte	0x15d
 2300 0150 0A       		.uleb128 0xa
 2301 0151 52020000 		.4byte	.LASF26
 2302 0155 01       		.byte	0x1
 2303 0156 C10A     		.2byte	0xac1
 2304 0158 83000000 		.4byte	0x83
 2305 015c 00       		.byte	0
 2306 015d 0F       		.uleb128 0xf
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 100


 2307 015e 3C030000 		.4byte	.LASF99
 2308 0162 01       		.byte	0x1
 2309 0163 E708     		.2byte	0x8e7
 2310 0165 C6000000 		.4byte	0xc6
 2311 0169 01       		.byte	0x1
 2312 016a 9F010000 		.4byte	0x19f
 2313 016e 0A       		.uleb128 0xa
 2314 016f 17030000 		.4byte	.LASF27
 2315 0173 01       		.byte	0x1
 2316 0174 E708     		.2byte	0x8e7
 2317 0176 6B000000 		.4byte	0x6b
 2318 017a 0A       		.uleb128 0xa
 2319 017b 18040000 		.4byte	.LASF28
 2320 017f 01       		.byte	0x1
 2321 0180 E708     		.2byte	0x8e7
 2322 0182 C6000000 		.4byte	0xc6
 2323 0186 10       		.uleb128 0x10
 2324 0187 4B000000 		.4byte	.LASF29
 2325 018b 01       		.byte	0x1
 2326 018c E908     		.2byte	0x8e9
 2327 018e C6000000 		.4byte	0xc6
 2328 0192 10       		.uleb128 0x10
 2329 0193 00000000 		.4byte	.LASF30
 2330 0197 01       		.byte	0x1
 2331 0198 EA08     		.2byte	0x8ea
 2332 019a 9F010000 		.4byte	0x19f
 2333 019e 00       		.byte	0
 2334 019f 06       		.uleb128 0x6
 2335 01a0 04       		.byte	0x4
 2336 01a1 C6000000 		.4byte	0xc6
 2337 01a5 09       		.uleb128 0x9
 2338 01a6 44020000 		.4byte	.LASF31
 2339 01aa 01       		.byte	0x1
 2340 01ab 610A     		.2byte	0xa61
 2341 01ad 01       		.byte	0x1
 2342 01ae BD010000 		.4byte	0x1bd
 2343 01b2 0E       		.uleb128 0xe
 2344 01b3 6900     		.ascii	"i\000"
 2345 01b5 01       		.byte	0x1
 2346 01b6 630A     		.2byte	0xa63
 2347 01b8 83000000 		.4byte	0x83
 2348 01bc 00       		.byte	0
 2349 01bd 0B       		.uleb128 0xb
 2350 01be 2E050000 		.4byte	.LASF32
 2351 01c2 01       		.byte	0x1
 2352 01c3 7F0A     		.2byte	0xa7f
 2353 01c5 01       		.byte	0x1
 2354 01c6 11       		.uleb128 0x11
 2355 01c7 22010000 		.4byte	0x122
 2356 01cb 00000000 		.4byte	.LFB40
 2357 01cf 28000000 		.4byte	.LFE40-.LFB40
 2358 01d3 01       		.uleb128 0x1
 2359 01d4 9C       		.byte	0x9c
 2360 01d5 FE010000 		.4byte	0x1fe
 2361 01d9 12       		.uleb128 0x12
 2362 01da 2F010000 		.4byte	0x12f
 2363 01de 13       		.uleb128 0x13
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 101


 2364 01df 15010000 		.4byte	0x115
 2365 01e3 00000000 		.4byte	.LBB50
 2366 01e7 00000000 		.4byte	.Ldebug_ranges0+0
 2367 01eb 01       		.byte	0x1
 2368 01ec 8B0B     		.2byte	0xb8b
 2369 01ee 14       		.uleb128 0x14
 2370 01ef 10000000 		.4byte	.LBB54
 2371 01f3 18000000 		.4byte	.LBE54-.LBB54
 2372 01f7 12       		.uleb128 0x12
 2373 01f8 2F010000 		.4byte	0x12f
 2374 01fc 00       		.byte	0
 2375 01fd 00       		.byte	0
 2376 01fe 15       		.uleb128 0x15
 2377 01ff F1050000 		.4byte	.LASF33
 2378 0203 01       		.byte	0x1
 2379 0204 6B       		.byte	0x6b
 2380 0205 00000000 		.4byte	.LFB0
 2381 0209 14000000 		.4byte	.LFE0-.LFB0
 2382 020d 01       		.uleb128 0x1
 2383 020e 9C       		.byte	0x9c
 2384 020f 15       		.uleb128 0x15
 2385 0210 AA020000 		.4byte	.LASF34
 2386 0214 01       		.byte	0x1
 2387 0215 8B       		.byte	0x8b
 2388 0216 00000000 		.4byte	.LFB1
 2389 021a 10000000 		.4byte	.LFE1-.LFB1
 2390 021e 01       		.uleb128 0x1
 2391 021f 9C       		.byte	0x9c
 2392 0220 16       		.uleb128 0x16
 2393 0221 1F000000 		.4byte	.LASF37
 2394 0225 01       		.byte	0x1
 2395 0226 AD01     		.2byte	0x1ad
 2396 0228 00000000 		.4byte	.LFB2
 2397 022c 20000000 		.4byte	.LFE2-.LFB2
 2398 0230 01       		.uleb128 0x1
 2399 0231 9C       		.byte	0x9c
 2400 0232 79020000 		.4byte	0x279
 2401 0236 17       		.uleb128 0x17
 2402 0237 01050000 		.4byte	.LASF39
 2403 023b 01       		.byte	0x1
 2404 023c AD01     		.2byte	0x1ad
 2405 023e 83000000 		.4byte	0x83
 2406 0242 00000000 		.4byte	.LLST0
 2407 0246 18       		.uleb128 0x18
 2408 0247 8C010000 		.4byte	.LASF35
 2409 024b 01       		.byte	0x1
 2410 024c AF01     		.2byte	0x1af
 2411 024e 6B000000 		.4byte	0x6b
 2412 0252 2C000000 		.4byte	.LLST1
 2413 0256 18       		.uleb128 0x18
 2414 0257 2E060000 		.4byte	.LASF36
 2415 025b 01       		.byte	0x1
 2416 025c B001     		.2byte	0x1b0
 2417 025e 83000000 		.4byte	0x83
 2418 0262 3F000000 		.4byte	.LLST2
 2419 0266 19       		.uleb128 0x19
 2420 0267 08000000 		.4byte	.LVL2
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 102


 2421 026b EE0B0000 		.4byte	0xbee
 2422 026f 19       		.uleb128 0x19
 2423 0270 1A000000 		.4byte	.LVL5
 2424 0274 F90B0000 		.4byte	0xbf9
 2425 0278 00       		.byte	0
 2426 0279 16       		.uleb128 0x16
 2427 027a 4E030000 		.4byte	.LASF38
 2428 027e 01       		.byte	0x1
 2429 027f D901     		.2byte	0x1d9
 2430 0281 00000000 		.4byte	.LFB3
 2431 0285 34000000 		.4byte	.LFE3-.LFB3
 2432 0289 01       		.uleb128 0x1
 2433 028a 9C       		.byte	0x9c
 2434 028b 9E020000 		.4byte	0x29e
 2435 028f 1A       		.uleb128 0x1a
 2436 0290 EE010000 		.4byte	.LASF40
 2437 0294 01       		.byte	0x1
 2438 0295 D901     		.2byte	0x1d9
 2439 0297 83000000 		.4byte	0x83
 2440 029b 01       		.uleb128 0x1
 2441 029c 50       		.byte	0x50
 2442 029d 00       		.byte	0
 2443 029e 1B       		.uleb128 0x1b
 2444 029f 0E020000 		.4byte	.LASF48
 2445 02a3 01       		.byte	0x1
 2446 02a4 FE01     		.2byte	0x1fe
 2447 02a6 83000000 		.4byte	0x83
 2448 02aa 00000000 		.4byte	.LFB4
 2449 02ae 18000000 		.4byte	.LFE4-.LFB4
 2450 02b2 01       		.uleb128 0x1
 2451 02b3 9C       		.byte	0x9c
 2452 02b4 EB020000 		.4byte	0x2eb
 2453 02b8 18       		.uleb128 0x18
 2454 02b9 8C010000 		.4byte	.LASF35
 2455 02bd 01       		.byte	0x1
 2456 02be 0002     		.2byte	0x200
 2457 02c0 6B000000 		.4byte	0x6b
 2458 02c4 5D000000 		.4byte	.LLST3
 2459 02c8 18       		.uleb128 0x18
 2460 02c9 20040000 		.4byte	.LASF41
 2461 02cd 01       		.byte	0x1
 2462 02ce 0102     		.2byte	0x201
 2463 02d0 83000000 		.4byte	0x83
 2464 02d4 70000000 		.4byte	.LLST4
 2465 02d8 19       		.uleb128 0x19
 2466 02d9 06000000 		.4byte	.LVL8
 2467 02dd EE0B0000 		.4byte	0xbee
 2468 02e1 19       		.uleb128 0x19
 2469 02e2 0E000000 		.4byte	.LVL10
 2470 02e6 F90B0000 		.4byte	0xbf9
 2471 02ea 00       		.byte	0
 2472 02eb 16       		.uleb128 0x16
 2473 02ec 54050000 		.4byte	.LASF42
 2474 02f0 01       		.byte	0x1
 2475 02f1 3502     		.2byte	0x235
 2476 02f3 00000000 		.4byte	.LFB5
 2477 02f7 24000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 103


 2478 02fb 01       		.uleb128 0x1
 2479 02fc 9C       		.byte	0x9c
 2480 02fd 34030000 		.4byte	0x334
 2481 0301 17       		.uleb128 0x17
 2482 0302 E9050000 		.4byte	.LASF43
 2483 0306 01       		.byte	0x1
 2484 0307 3502     		.2byte	0x235
 2485 0309 83000000 		.4byte	0x83
 2486 030d 92000000 		.4byte	.LLST5
 2487 0311 18       		.uleb128 0x18
 2488 0312 8C010000 		.4byte	.LASF35
 2489 0316 01       		.byte	0x1
 2490 0317 3702     		.2byte	0x237
 2491 0319 6B000000 		.4byte	0x6b
 2492 031d BE000000 		.4byte	.LLST6
 2493 0321 19       		.uleb128 0x19
 2494 0322 08000000 		.4byte	.LVL13
 2495 0326 EE0B0000 		.4byte	0xbee
 2496 032a 19       		.uleb128 0x19
 2497 032b 1E000000 		.4byte	.LVL15
 2498 032f F90B0000 		.4byte	0xbf9
 2499 0333 00       		.byte	0
 2500 0334 16       		.uleb128 0x16
 2501 0335 27030000 		.4byte	.LASF44
 2502 0339 01       		.byte	0x1
 2503 033a 3C03     		.2byte	0x33c
 2504 033c 00000000 		.4byte	.LFB6
 2505 0340 A4000000 		.4byte	.LFE6-.LFB6
 2506 0344 01       		.uleb128 0x1
 2507 0345 9C       		.byte	0x9c
 2508 0346 EC030000 		.4byte	0x3ec
 2509 034a 17       		.uleb128 0x17
 2510 034b 7B010000 		.4byte	.LASF45
 2511 034f 01       		.byte	0x1
 2512 0350 3C03     		.2byte	0x33c
 2513 0352 83000000 		.4byte	0x83
 2514 0356 D1000000 		.4byte	.LLST7
 2515 035a 1C       		.uleb128 0x1c
 2516 035b 8C010000 		.4byte	.LASF35
 2517 035f 01       		.byte	0x1
 2518 0360 3E03     		.2byte	0x33e
 2519 0362 6B000000 		.4byte	0x6b
 2520 0366 01       		.uleb128 0x1
 2521 0367 57       		.byte	0x57
 2522 0368 18       		.uleb128 0x18
 2523 0369 93050000 		.4byte	.LASF46
 2524 036d 01       		.byte	0x1
 2525 036e 3F03     		.2byte	0x33f
 2526 0370 6B000000 		.4byte	0x6b
 2527 0374 23010000 		.4byte	.LLST8
 2528 0378 1D       		.uleb128 0x1d
 2529 0379 F2000000 		.4byte	0xf2
 2530 037d 12000000 		.4byte	.LBB55
 2531 0381 02000000 		.4byte	.LBE55-.LBB55
 2532 0385 01       		.byte	0x1
 2533 0386 B303     		.2byte	0x3b3
 2534 0388 96030000 		.4byte	0x396
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 104


 2535 038c 1E       		.uleb128 0x1e
 2536 038d FF000000 		.4byte	0xff
 2537 0391 47010000 		.4byte	.LLST9
 2538 0395 00       		.byte	0
 2539 0396 19       		.uleb128 0x19
 2540 0397 1C000000 		.4byte	.LVL20
 2541 039b EE0B0000 		.4byte	0xbee
 2542 039f 1F       		.uleb128 0x1f
 2543 03a0 54000000 		.4byte	.LVL25
 2544 03a4 040C0000 		.4byte	0xc04
 2545 03a8 B3030000 		.4byte	0x3b3
 2546 03ac 20       		.uleb128 0x20
 2547 03ad 01       		.uleb128 0x1
 2548 03ae 50       		.byte	0x50
 2549 03af 02       		.uleb128 0x2
 2550 03b0 08       		.byte	0x8
 2551 03b1 32       		.byte	0x32
 2552 03b2 00       		.byte	0
 2553 03b3 1F       		.uleb128 0x1f
 2554 03b4 5E000000 		.4byte	.LVL26
 2555 03b8 F90B0000 		.4byte	0xbf9
 2556 03bc C7030000 		.4byte	0x3c7
 2557 03c0 20       		.uleb128 0x20
 2558 03c1 01       		.uleb128 0x1
 2559 03c2 50       		.byte	0x50
 2560 03c3 02       		.uleb128 0x2
 2561 03c4 77       		.byte	0x77
 2562 03c5 00       		.sleb128 0
 2563 03c6 00       		.byte	0
 2564 03c7 1F       		.uleb128 0x1f
 2565 03c8 76000000 		.4byte	.LVL27
 2566 03cc 040C0000 		.4byte	0xc04
 2567 03d0 DB030000 		.4byte	0x3db
 2568 03d4 20       		.uleb128 0x20
 2569 03d5 01       		.uleb128 0x1
 2570 03d6 50       		.byte	0x50
 2571 03d7 02       		.uleb128 0x2
 2572 03d8 08       		.byte	0x8
 2573 03d9 32       		.byte	0x32
 2574 03da 00       		.byte	0
 2575 03db 21       		.uleb128 0x21
 2576 03dc 8A000000 		.4byte	.LVL30
 2577 03e0 F90B0000 		.4byte	0xbf9
 2578 03e4 20       		.uleb128 0x20
 2579 03e5 01       		.uleb128 0x1
 2580 03e6 50       		.byte	0x50
 2581 03e7 02       		.uleb128 0x2
 2582 03e8 77       		.byte	0x77
 2583 03e9 00       		.sleb128 0
 2584 03ea 00       		.byte	0
 2585 03eb 00       		.byte	0
 2586 03ec 16       		.uleb128 0x16
 2587 03ed 3E050000 		.4byte	.LASF47
 2588 03f1 01       		.byte	0x1
 2589 03f2 D503     		.2byte	0x3d5
 2590 03f4 00000000 		.4byte	.LFB7
 2591 03f8 24000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 105


 2592 03fc 01       		.uleb128 0x1
 2593 03fd 9C       		.byte	0x9c
 2594 03fe 35040000 		.4byte	0x435
 2595 0402 17       		.uleb128 0x17
 2596 0403 E9050000 		.4byte	.LASF43
 2597 0407 01       		.byte	0x1
 2598 0408 D503     		.2byte	0x3d5
 2599 040a 83000000 		.4byte	0x83
 2600 040e 5B010000 		.4byte	.LLST10
 2601 0412 18       		.uleb128 0x18
 2602 0413 8C010000 		.4byte	.LASF35
 2603 0417 01       		.byte	0x1
 2604 0418 D703     		.2byte	0x3d7
 2605 041a 6B000000 		.4byte	0x6b
 2606 041e 87010000 		.4byte	.LLST11
 2607 0422 19       		.uleb128 0x19
 2608 0423 08000000 		.4byte	.LVL32
 2609 0427 EE0B0000 		.4byte	0xbee
 2610 042b 19       		.uleb128 0x19
 2611 042c 1C000000 		.4byte	.LVL34
 2612 0430 F90B0000 		.4byte	0xbf9
 2613 0434 00       		.byte	0
 2614 0435 1B       		.uleb128 0x1b
 2615 0436 E1020000 		.4byte	.LASF49
 2616 043a 01       		.byte	0x1
 2617 043b A008     		.2byte	0x8a0
 2618 043d 83000000 		.4byte	0x83
 2619 0441 00000000 		.4byte	.LFB8
 2620 0445 14000000 		.4byte	.LFE8-.LFB8
 2621 0449 01       		.uleb128 0x1
 2622 044a 9C       		.byte	0x9c
 2623 044b 70040000 		.4byte	0x470
 2624 044f 17       		.uleb128 0x17
 2625 0450 15050000 		.4byte	.LASF25
 2626 0454 01       		.byte	0x1
 2627 0455 A008     		.2byte	0x8a0
 2628 0457 83000000 		.4byte	0x83
 2629 045b 9A010000 		.4byte	.LLST12
 2630 045f 18       		.uleb128 0x18
 2631 0460 78030000 		.4byte	.LASF50
 2632 0464 01       		.byte	0x1
 2633 0465 A208     		.2byte	0x8a2
 2634 0467 83000000 		.4byte	0x83
 2635 046b B8010000 		.4byte	.LLST13
 2636 046f 00       		.byte	0
 2637 0470 1B       		.uleb128 0x1b
 2638 0471 59000000 		.4byte	.LASF51
 2639 0475 01       		.byte	0x1
 2640 0476 B708     		.2byte	0x8b7
 2641 0478 83000000 		.4byte	0x83
 2642 047c 00000000 		.4byte	.LFB9
 2643 0480 10000000 		.4byte	.LFE9-.LFB9
 2644 0484 01       		.uleb128 0x1
 2645 0485 9C       		.byte	0x9c
 2646 0486 99040000 		.4byte	0x499
 2647 048a 1C       		.uleb128 0x1c
 2648 048b 16000000 		.4byte	.LASF52
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 106


 2649 048f 01       		.byte	0x1
 2650 0490 B908     		.2byte	0x8b9
 2651 0492 83000000 		.4byte	0x83
 2652 0496 01       		.uleb128 0x1
 2653 0497 50       		.byte	0x50
 2654 0498 00       		.byte	0
 2655 0499 16       		.uleb128 0x16
 2656 049a 8F000000 		.4byte	.LASF53
 2657 049e 01       		.byte	0x1
 2658 049f CE08     		.2byte	0x8ce
 2659 04a1 00000000 		.4byte	.LFB10
 2660 04a5 0C000000 		.4byte	.LFE10-.LFB10
 2661 04a9 01       		.uleb128 0x1
 2662 04aa 9C       		.byte	0x9c
 2663 04ab BE040000 		.4byte	0x4be
 2664 04af 1A       		.uleb128 0x1a
 2665 04b0 09020000 		.4byte	.LASF54
 2666 04b4 01       		.byte	0x1
 2667 04b5 CE08     		.2byte	0x8ce
 2668 04b7 83000000 		.4byte	0x83
 2669 04bb 01       		.uleb128 0x1
 2670 04bc 50       		.byte	0x50
 2671 04bd 00       		.byte	0
 2672 04be 22       		.uleb128 0x22
 2673 04bf 5D010000 		.4byte	0x15d
 2674 04c3 00000000 		.4byte	.LFB11
 2675 04c7 14000000 		.4byte	.LFE11-.LFB11
 2676 04cb 01       		.uleb128 0x1
 2677 04cc 9C       		.byte	0x9c
 2678 04cd 0C050000 		.4byte	0x50c
 2679 04d1 1E       		.uleb128 0x1e
 2680 04d2 6E010000 		.4byte	0x16e
 2681 04d6 DA010000 		.4byte	.LLST14
 2682 04da 23       		.uleb128 0x23
 2683 04db 7A010000 		.4byte	0x17a
 2684 04df 01       		.uleb128 0x1
 2685 04e0 51       		.byte	0x51
 2686 04e1 24       		.uleb128 0x24
 2687 04e2 86010000 		.4byte	0x186
 2688 04e6 01       		.uleb128 0x1
 2689 04e7 50       		.byte	0x50
 2690 04e8 25       		.uleb128 0x25
 2691 04e9 92010000 		.4byte	0x192
 2692 04ed 00000020 		.4byte	0x20000000
 2693 04f1 26       		.uleb128 0x26
 2694 04f2 F2000000 		.4byte	0xf2
 2695 04f6 04000000 		.4byte	.LBB57
 2696 04fa 02000000 		.4byte	.LBE57-.LBB57
 2697 04fe 01       		.byte	0x1
 2698 04ff EC08     		.2byte	0x8ec
 2699 0501 1E       		.uleb128 0x1e
 2700 0502 FF000000 		.4byte	0xff
 2701 0506 FB010000 		.4byte	.LLST15
 2702 050a 00       		.byte	0
 2703 050b 00       		.byte	0
 2704 050c 1B       		.uleb128 0x1b
 2705 050d EF040000 		.4byte	.LASF55
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 107


 2706 0511 01       		.byte	0x1
 2707 0512 0909     		.2byte	0x909
 2708 0514 C6000000 		.4byte	0xc6
 2709 0518 00000000 		.4byte	.LFB12
 2710 051c 14000000 		.4byte	.LFE12-.LFB12
 2711 0520 01       		.uleb128 0x1
 2712 0521 9C       		.byte	0x9c
 2713 0522 61050000 		.4byte	0x561
 2714 0526 17       		.uleb128 0x17
 2715 0527 17030000 		.4byte	.LASF27
 2716 052b 01       		.byte	0x1
 2717 052c 0909     		.2byte	0x909
 2718 052e 6B000000 		.4byte	0x6b
 2719 0532 0F020000 		.4byte	.LLST16
 2720 0536 27       		.uleb128 0x27
 2721 0537 00000000 		.4byte	.LASF30
 2722 053b 01       		.byte	0x1
 2723 053c 0B09     		.2byte	0x90b
 2724 053e 9F010000 		.4byte	0x19f
 2725 0542 00000020 		.4byte	0x20000000
 2726 0546 26       		.uleb128 0x26
 2727 0547 F2000000 		.4byte	0xf2
 2728 054b 04000000 		.4byte	.LBB59
 2729 054f 02000000 		.4byte	.LBE59-.LBB59
 2730 0553 01       		.byte	0x1
 2731 0554 0D09     		.2byte	0x90d
 2732 0556 1E       		.uleb128 0x1e
 2733 0557 FF000000 		.4byte	0xff
 2734 055b 30020000 		.4byte	.LLST17
 2735 055f 00       		.byte	0
 2736 0560 00       		.byte	0
 2737 0561 1B       		.uleb128 0x1b
 2738 0562 08030000 		.4byte	.LASF56
 2739 0566 01       		.byte	0x1
 2740 0567 1F09     		.2byte	0x91f
 2741 0569 C6000000 		.4byte	0xc6
 2742 056d 00000000 		.4byte	.LFB13
 2743 0571 18000000 		.4byte	.LFE13-.LFB13
 2744 0575 01       		.uleb128 0x1
 2745 0576 9C       		.byte	0x9c
 2746 0577 D2050000 		.4byte	0x5d2
 2747 057b 17       		.uleb128 0x17
 2748 057c 17030000 		.4byte	.LASF27
 2749 0580 01       		.byte	0x1
 2750 0581 1F09     		.2byte	0x91f
 2751 0583 6B000000 		.4byte	0x6b
 2752 0587 44020000 		.4byte	.LLST18
 2753 058b 1A       		.uleb128 0x1a
 2754 058c 18040000 		.4byte	.LASF28
 2755 0590 01       		.byte	0x1
 2756 0591 1F09     		.2byte	0x91f
 2757 0593 C6000000 		.4byte	0xc6
 2758 0597 01       		.uleb128 0x1
 2759 0598 51       		.byte	0x51
 2760 0599 1C       		.uleb128 0x1c
 2761 059a 4B000000 		.4byte	.LASF29
 2762 059e 01       		.byte	0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 108


 2763 059f 2109     		.2byte	0x921
 2764 05a1 C6000000 		.4byte	0xc6
 2765 05a5 01       		.uleb128 0x1
 2766 05a6 50       		.byte	0x50
 2767 05a7 27       		.uleb128 0x27
 2768 05a8 00000000 		.4byte	.LASF30
 2769 05ac 01       		.byte	0x1
 2770 05ad 2209     		.2byte	0x922
 2771 05af 9F010000 		.4byte	0x19f
 2772 05b3 00000020 		.4byte	0x20000000
 2773 05b7 26       		.uleb128 0x26
 2774 05b8 F2000000 		.4byte	0xf2
 2775 05bc 04000000 		.4byte	.LBB61
 2776 05c0 02000000 		.4byte	.LBE61-.LBB61
 2777 05c4 01       		.byte	0x1
 2778 05c5 2409     		.2byte	0x924
 2779 05c7 1E       		.uleb128 0x1e
 2780 05c8 FF000000 		.4byte	0xff
 2781 05cc 65020000 		.4byte	.LLST19
 2782 05d0 00       		.byte	0
 2783 05d1 00       		.byte	0
 2784 05d2 1B       		.uleb128 0x1b
 2785 05d3 95040000 		.4byte	.LASF57
 2786 05d7 01       		.byte	0x1
 2787 05d8 3B09     		.2byte	0x93b
 2788 05da C6000000 		.4byte	0xc6
 2789 05de 00000000 		.4byte	.LFB14
 2790 05e2 18000000 		.4byte	.LFE14-.LFB14
 2791 05e6 01       		.uleb128 0x1
 2792 05e7 9C       		.byte	0x9c
 2793 05e8 27060000 		.4byte	0x627
 2794 05ec 17       		.uleb128 0x17
 2795 05ed 17030000 		.4byte	.LASF27
 2796 05f1 01       		.byte	0x1
 2797 05f2 3B09     		.2byte	0x93b
 2798 05f4 6B000000 		.4byte	0x6b
 2799 05f8 79020000 		.4byte	.LLST20
 2800 05fc 27       		.uleb128 0x27
 2801 05fd 00000000 		.4byte	.LASF30
 2802 0601 01       		.byte	0x1
 2803 0602 3D09     		.2byte	0x93d
 2804 0604 9F010000 		.4byte	0x19f
 2805 0608 00000020 		.4byte	0x20000000
 2806 060c 26       		.uleb128 0x26
 2807 060d F2000000 		.4byte	0xf2
 2808 0611 04000000 		.4byte	.LBB63
 2809 0615 02000000 		.4byte	.LBE63-.LBB63
 2810 0619 01       		.byte	0x1
 2811 061a 3F09     		.2byte	0x93f
 2812 061c 1E       		.uleb128 0x1e
 2813 061d FF000000 		.4byte	0xff
 2814 0621 9A020000 		.4byte	.LLST21
 2815 0625 00       		.byte	0
 2816 0626 00       		.byte	0
 2817 0627 16       		.uleb128 0x16
 2818 0628 56040000 		.4byte	.LASF58
 2819 062c 01       		.byte	0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 109


 2820 062d 4E09     		.2byte	0x94e
 2821 062f 00000000 		.4byte	.LFB15
 2822 0633 44000000 		.4byte	.LFE15-.LFB15
 2823 0637 01       		.uleb128 0x1
 2824 0638 9C       		.byte	0x9c
 2825 0639 DC060000 		.4byte	0x6dc
 2826 063d 17       		.uleb128 0x17
 2827 063e 17030000 		.4byte	.LASF27
 2828 0642 01       		.byte	0x1
 2829 0643 4E09     		.2byte	0x94e
 2830 0645 6B000000 		.4byte	0x6b
 2831 0649 AE020000 		.4byte	.LLST22
 2832 064d 17       		.uleb128 0x17
 2833 064e 1E030000 		.4byte	.LASF59
 2834 0652 01       		.byte	0x1
 2835 0653 4E09     		.2byte	0x94e
 2836 0655 6B000000 		.4byte	0x6b
 2837 0659 CF020000 		.4byte	.LLST23
 2838 065d 18       		.uleb128 0x18
 2839 065e 8C010000 		.4byte	.LASF35
 2840 0662 01       		.byte	0x1
 2841 0663 5009     		.2byte	0x950
 2842 0665 6B000000 		.4byte	0x6b
 2843 0669 F0020000 		.4byte	.LLST24
 2844 066d 18       		.uleb128 0x18
 2845 066e FC010000 		.4byte	.LASF60
 2846 0672 01       		.byte	0x1
 2847 0673 5109     		.2byte	0x951
 2848 0675 83000000 		.4byte	0x83
 2849 0679 03030000 		.4byte	.LLST25
 2850 067d 18       		.uleb128 0x18
 2851 067e 52020000 		.4byte	.LASF26
 2852 0682 01       		.byte	0x1
 2853 0683 5209     		.2byte	0x952
 2854 0685 83000000 		.4byte	0x83
 2855 0689 16030000 		.4byte	.LLST26
 2856 068d 1D       		.uleb128 0x1d
 2857 068e F2000000 		.4byte	0xf2
 2858 0692 0A000000 		.4byte	.LBB65
 2859 0696 02000000 		.4byte	.LBE65-.LBB65
 2860 069a 01       		.byte	0x1
 2861 069b 5409     		.2byte	0x954
 2862 069d AB060000 		.4byte	0x6ab
 2863 06a1 1E       		.uleb128 0x1e
 2864 06a2 FF000000 		.4byte	0xff
 2865 06a6 34030000 		.4byte	.LLST27
 2866 06aa 00       		.byte	0
 2867 06ab 1D       		.uleb128 0x1d
 2868 06ac F2000000 		.4byte	0xf2
 2869 06b0 10000000 		.4byte	.LBB67
 2870 06b4 02000000 		.4byte	.LBE67-.LBB67
 2871 06b8 01       		.byte	0x1
 2872 06b9 5509     		.2byte	0x955
 2873 06bb C9060000 		.4byte	0x6c9
 2874 06bf 1E       		.uleb128 0x1e
 2875 06c0 FF000000 		.4byte	0xff
 2876 06c4 48030000 		.4byte	.LLST28
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 110


 2877 06c8 00       		.byte	0
 2878 06c9 19       		.uleb128 0x19
 2879 06ca 18000000 		.4byte	.LVL65
 2880 06ce EE0B0000 		.4byte	0xbee
 2881 06d2 19       		.uleb128 0x19
 2882 06d3 3E000000 		.4byte	.LVL69
 2883 06d7 F90B0000 		.4byte	0xbf9
 2884 06db 00       		.byte	0
 2885 06dc 1B       		.uleb128 0x1b
 2886 06dd 26020000 		.4byte	.LASF61
 2887 06e1 01       		.byte	0x1
 2888 06e2 7009     		.2byte	0x970
 2889 06e4 6B000000 		.4byte	0x6b
 2890 06e8 00000000 		.4byte	.LFB16
 2891 06ec 28000000 		.4byte	.LFE16-.LFB16
 2892 06f0 01       		.uleb128 0x1
 2893 06f1 9C       		.byte	0x9c
 2894 06f2 31070000 		.4byte	0x731
 2895 06f6 17       		.uleb128 0x17
 2896 06f7 17030000 		.4byte	.LASF27
 2897 06fb 01       		.byte	0x1
 2898 06fc 7009     		.2byte	0x970
 2899 06fe 6B000000 		.4byte	0x6b
 2900 0702 5C030000 		.4byte	.LLST29
 2901 0706 18       		.uleb128 0x18
 2902 0707 1E030000 		.4byte	.LASF59
 2903 070b 01       		.byte	0x1
 2904 070c 7209     		.2byte	0x972
 2905 070e 6B000000 		.4byte	0x6b
 2906 0712 7D030000 		.4byte	.LLST30
 2907 0716 26       		.uleb128 0x26
 2908 0717 F2000000 		.4byte	0xf2
 2909 071b 04000000 		.4byte	.LBB69
 2910 071f 02000000 		.4byte	.LBE69-.LBB69
 2911 0723 01       		.byte	0x1
 2912 0724 7409     		.2byte	0x974
 2913 0726 1E       		.uleb128 0x1e
 2914 0727 FF000000 		.4byte	0xff
 2915 072b 9E030000 		.4byte	.LLST31
 2916 072f 00       		.byte	0
 2917 0730 00       		.byte	0
 2918 0731 16       		.uleb128 0x16
 2919 0732 E3040000 		.4byte	.LASF62
 2920 0736 01       		.byte	0x1
 2921 0737 8509     		.2byte	0x985
 2922 0739 00000000 		.4byte	.LFB17
 2923 073d 14000000 		.4byte	.LFE17-.LFB17
 2924 0741 01       		.uleb128 0x1
 2925 0742 9C       		.byte	0x9c
 2926 0743 58070000 		.4byte	0x758
 2927 0747 17       		.uleb128 0x17
 2928 0748 17030000 		.4byte	.LASF27
 2929 074c 01       		.byte	0x1
 2930 074d 8509     		.2byte	0x985
 2931 074f 6B000000 		.4byte	0x6b
 2932 0753 B2030000 		.4byte	.LLST32
 2933 0757 00       		.byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 111


 2934 0758 1B       		.uleb128 0x1b
 2935 0759 C5000000 		.4byte	.LASF63
 2936 075d 01       		.byte	0x1
 2937 075e 9709     		.2byte	0x997
 2938 0760 6B000000 		.4byte	0x6b
 2939 0764 00000000 		.4byte	.LFB18
 2940 0768 18000000 		.4byte	.LFE18-.LFB18
 2941 076c 01       		.uleb128 0x1
 2942 076d 9C       		.byte	0x9c
 2943 076e 83070000 		.4byte	0x783
 2944 0772 17       		.uleb128 0x17
 2945 0773 17030000 		.4byte	.LASF27
 2946 0777 01       		.byte	0x1
 2947 0778 9709     		.2byte	0x997
 2948 077a 6B000000 		.4byte	0x6b
 2949 077e D3030000 		.4byte	.LLST33
 2950 0782 00       		.byte	0
 2951 0783 16       		.uleb128 0x16
 2952 0784 B7010000 		.4byte	.LASF64
 2953 0788 01       		.byte	0x1
 2954 0789 A709     		.2byte	0x9a7
 2955 078b 00000000 		.4byte	.LFB19
 2956 078f 14000000 		.4byte	.LFE19-.LFB19
 2957 0793 01       		.uleb128 0x1
 2958 0794 9C       		.byte	0x9c
 2959 0795 AA070000 		.4byte	0x7aa
 2960 0799 17       		.uleb128 0x17
 2961 079a 17030000 		.4byte	.LASF27
 2962 079e 01       		.byte	0x1
 2963 079f A709     		.2byte	0x9a7
 2964 07a1 6B000000 		.4byte	0x6b
 2965 07a5 F4030000 		.4byte	.LLST34
 2966 07a9 00       		.byte	0
 2967 07aa 16       		.uleb128 0x16
 2968 07ab D1020000 		.4byte	.LASF65
 2969 07af 01       		.byte	0x1
 2970 07b0 B509     		.2byte	0x9b5
 2971 07b2 00000000 		.4byte	.LFB20
 2972 07b6 14000000 		.4byte	.LFE20-.LFB20
 2973 07ba 01       		.uleb128 0x1
 2974 07bb 9C       		.byte	0x9c
 2975 07bc D1070000 		.4byte	0x7d1
 2976 07c0 17       		.uleb128 0x17
 2977 07c1 17030000 		.4byte	.LASF27
 2978 07c5 01       		.byte	0x1
 2979 07c6 B509     		.2byte	0x9b5
 2980 07c8 6B000000 		.4byte	0x6b
 2981 07cc 15040000 		.4byte	.LLST35
 2982 07d0 00       		.byte	0
 2983 07d1 16       		.uleb128 0x16
 2984 07d2 8E030000 		.4byte	.LASF66
 2985 07d6 01       		.byte	0x1
 2986 07d7 C409     		.2byte	0x9c4
 2987 07d9 00000000 		.4byte	.LFB21
 2988 07dd 14000000 		.4byte	.LFE21-.LFB21
 2989 07e1 01       		.uleb128 0x1
 2990 07e2 9C       		.byte	0x9c
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 112


 2991 07e3 F8070000 		.4byte	0x7f8
 2992 07e7 17       		.uleb128 0x17
 2993 07e8 17030000 		.4byte	.LASF27
 2994 07ec 01       		.byte	0x1
 2995 07ed C409     		.2byte	0x9c4
 2996 07ef 6B000000 		.4byte	0x6b
 2997 07f3 36040000 		.4byte	.LLST36
 2998 07f7 00       		.byte	0
 2999 07f8 22       		.uleb128 0x22
 3000 07f9 F2000000 		.4byte	0xf2
 3001 07fd 00000000 		.4byte	.LFB22
 3002 0801 04000000 		.4byte	.LFE22-.LFB22
 3003 0805 01       		.uleb128 0x1
 3004 0806 9C       		.byte	0x9c
 3005 0807 13080000 		.4byte	0x813
 3006 080b 23       		.uleb128 0x23
 3007 080c FF000000 		.4byte	0xff
 3008 0810 01       		.uleb128 0x1
 3009 0811 50       		.byte	0x50
 3010 0812 00       		.byte	0
 3011 0813 28       		.uleb128 0x28
 3012 0814 9C000000 		.4byte	.LASF67
 3013 0818 01       		.byte	0x1
 3014 0819 EB09     		.2byte	0x9eb
 3015 081b 00000000 		.4byte	.LFB23
 3016 081f 18000000 		.4byte	.LFE23-.LFB23
 3017 0823 01       		.uleb128 0x1
 3018 0824 9C       		.byte	0x9c
 3019 0825 16       		.uleb128 0x16
 3020 0826 AA050000 		.4byte	.LASF68
 3021 082a 01       		.byte	0x1
 3022 082b FF09     		.2byte	0x9ff
 3023 082d 00000000 		.4byte	.LFB24
 3024 0831 48000000 		.4byte	.LFE24-.LFB24
 3025 0835 01       		.uleb128 0x1
 3026 0836 9C       		.byte	0x9c
 3027 0837 5E080000 		.4byte	0x85e
 3028 083b 17       		.uleb128 0x17
 3029 083c A4040000 		.4byte	.LASF69
 3030 0840 01       		.byte	0x1
 3031 0841 FF09     		.2byte	0x9ff
 3032 0843 83000000 		.4byte	0x83
 3033 0847 57040000 		.4byte	.LLST37
 3034 084b 19       		.uleb128 0x19
 3035 084c 16000000 		.4byte	.LVL90
 3036 0850 040C0000 		.4byte	0xc04
 3037 0854 19       		.uleb128 0x19
 3038 0855 34000000 		.4byte	.LVL93
 3039 0859 040C0000 		.4byte	0xc04
 3040 085d 00       		.byte	0
 3041 085e 16       		.uleb128 0x16
 3042 085f 0B050000 		.4byte	.LASF70
 3043 0863 01       		.byte	0x1
 3044 0864 160A     		.2byte	0xa16
 3045 0866 00000000 		.4byte	.LFB25
 3046 086a 14000000 		.4byte	.LFE25-.LFB25
 3047 086e 01       		.uleb128 0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 113


 3048 086f 9C       		.byte	0x9c
 3049 0870 8E080000 		.4byte	0x88e
 3050 0874 17       		.uleb128 0x17
 3051 0875 21060000 		.4byte	.LASF71
 3052 0879 01       		.byte	0x1
 3053 087a 160A     		.2byte	0xa16
 3054 087c 77000000 		.4byte	0x77
 3055 0880 80040000 		.4byte	.LLST38
 3056 0884 19       		.uleb128 0x19
 3057 0885 0C000000 		.4byte	.LVL97
 3058 0889 040C0000 		.4byte	0xc04
 3059 088d 00       		.byte	0
 3060 088e 29       		.uleb128 0x29
 3061 088f 80010000 		.4byte	.LASF72
 3062 0893 01       		.byte	0x1
 3063 0894 240A     		.2byte	0xa24
 3064 0896 00000000 		.4byte	.LFB26
 3065 089a 54000000 		.4byte	.LFE26-.LFB26
 3066 089e 01       		.uleb128 0x1
 3067 089f 9C       		.byte	0x9c
 3068 08a0 B5080000 		.4byte	0x8b5
 3069 08a4 17       		.uleb128 0x17
 3070 08a5 7B010000 		.4byte	.LASF45
 3071 08a9 01       		.byte	0x1
 3072 08aa 240A     		.2byte	0xa24
 3073 08ac 83000000 		.4byte	0x83
 3074 08b0 A1040000 		.4byte	.LLST39
 3075 08b4 00       		.byte	0
 3076 08b5 29       		.uleb128 0x29
 3077 08b6 69030000 		.4byte	.LASF73
 3078 08ba 01       		.byte	0x1
 3079 08bb 440A     		.2byte	0xa44
 3080 08bd 00000000 		.4byte	.LFB27
 3081 08c1 64000000 		.4byte	.LFE27-.LFB27
 3082 08c5 01       		.uleb128 0x1
 3083 08c6 9C       		.byte	0x9c
 3084 08c7 82090000 		.4byte	0x982
 3085 08cb 1D       		.uleb128 0x1d
 3086 08cc A5010000 		.4byte	0x1a5
 3087 08d0 0A000000 		.4byte	.LBB71
 3088 08d4 24000000 		.4byte	.LBE71-.LBB71
 3089 08d8 01       		.byte	0x1
 3090 08d9 480A     		.2byte	0xa48
 3091 08db 60090000 		.4byte	0x960
 3092 08df 14       		.uleb128 0x14
 3093 08e0 0A000000 		.4byte	.LBB72
 3094 08e4 24000000 		.4byte	.LBE72-.LBB72
 3095 08e8 2A       		.uleb128 0x2a
 3096 08e9 B2010000 		.4byte	0x1b2
 3097 08ed E3040000 		.4byte	.LLST40
 3098 08f1 2B       		.uleb128 0x2b
 3099 08f2 5D010000 		.4byte	0x15d
 3100 08f6 0C000000 		.4byte	.LBB73
 3101 08fa 18000000 		.4byte	.Ldebug_ranges0+0x18
 3102 08fe 01       		.byte	0x1
 3103 08ff 6A0A     		.2byte	0xa6a
 3104 0901 30090000 		.4byte	0x930
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 114


 3105 0905 1E       		.uleb128 0x1e
 3106 0906 7A010000 		.4byte	0x17a
 3107 090a 33050000 		.4byte	.LLST41
 3108 090e 1E       		.uleb128 0x1e
 3109 090f 6E010000 		.4byte	0x16e
 3110 0913 4B050000 		.4byte	.LLST42
 3111 0917 2C       		.uleb128 0x2c
 3112 0918 18000000 		.4byte	.Ldebug_ranges0+0x18
 3113 091c 2A       		.uleb128 0x2a
 3114 091d 86010000 		.4byte	0x186
 3115 0921 5F050000 		.4byte	.LLST43
 3116 0925 2A       		.uleb128 0x2a
 3117 0926 92010000 		.4byte	0x192
 3118 092a 73050000 		.4byte	.LLST44
 3119 092e 00       		.byte	0
 3120 092f 00       		.byte	0
 3121 0930 1D       		.uleb128 0x1d
 3122 0931 43010000 		.4byte	0x143
 3123 0935 26000000 		.4byte	.LBB77
 3124 0939 04000000 		.4byte	.LBE77-.LBB77
 3125 093d 01       		.byte	0x1
 3126 093e 700A     		.2byte	0xa70
 3127 0940 4E090000 		.4byte	0x94e
 3128 0944 1E       		.uleb128 0x1e
 3129 0945 50010000 		.4byte	0x150
 3130 0949 89050000 		.4byte	.LLST45
 3131 094d 00       		.byte	0
 3132 094e 2D       		.uleb128 0x2d
 3133 094f 3A010000 		.4byte	0x13a
 3134 0953 2A000000 		.4byte	.LBB79
 3135 0957 04000000 		.4byte	.LBE79-.LBB79
 3136 095b 01       		.byte	0x1
 3137 095c 710A     		.2byte	0xa71
 3138 095e 00       		.byte	0
 3139 095f 00       		.byte	0
 3140 0960 2E       		.uleb128 0x2e
 3141 0961 BD010000 		.4byte	0x1bd
 3142 0965 32000000 		.4byte	.LBB81
 3143 0969 30000000 		.4byte	.Ldebug_ranges0+0x30
 3144 096d 01       		.byte	0x1
 3145 096e 4C0A     		.2byte	0xa4c
 3146 0970 13       		.uleb128 0x13
 3147 0971 0C010000 		.4byte	0x10c
 3148 0975 32000000 		.4byte	.LBB83
 3149 0979 48000000 		.4byte	.Ldebug_ranges0+0x48
 3150 097d 01       		.byte	0x1
 3151 097e 810A     		.2byte	0xa81
 3152 0980 00       		.byte	0
 3153 0981 00       		.byte	0
 3154 0982 11       		.uleb128 0x11
 3155 0983 A5010000 		.4byte	0x1a5
 3156 0987 00000000 		.4byte	.LFB28
 3157 098b 44000000 		.4byte	.LFE28-.LFB28
 3158 098f 01       		.uleb128 0x1
 3159 0990 9C       		.byte	0x9c
 3160 0991 0C0A0000 		.4byte	0xa0c
 3161 0995 2A       		.uleb128 0x2a
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 115


 3162 0996 B2010000 		.4byte	0x1b2
 3163 099a 9C050000 		.4byte	.LLST46
 3164 099e 2B       		.uleb128 0x2b
 3165 099f 5D010000 		.4byte	0x15d
 3166 09a3 08000000 		.4byte	.LBB89
 3167 09a7 60000000 		.4byte	.Ldebug_ranges0+0x60
 3168 09ab 01       		.byte	0x1
 3169 09ac 6A0A     		.2byte	0xa6a
 3170 09ae DD090000 		.4byte	0x9dd
 3171 09b2 1E       		.uleb128 0x1e
 3172 09b3 7A010000 		.4byte	0x17a
 3173 09b7 E0050000 		.4byte	.LLST47
 3174 09bb 1E       		.uleb128 0x1e
 3175 09bc 6E010000 		.4byte	0x16e
 3176 09c0 F8050000 		.4byte	.LLST48
 3177 09c4 2C       		.uleb128 0x2c
 3178 09c5 60000000 		.4byte	.Ldebug_ranges0+0x60
 3179 09c9 2A       		.uleb128 0x2a
 3180 09ca 86010000 		.4byte	0x186
 3181 09ce 0C060000 		.4byte	.LLST49
 3182 09d2 25       		.uleb128 0x25
 3183 09d3 92010000 		.4byte	0x192
 3184 09d7 00000020 		.4byte	0x20000000
 3185 09db 00       		.byte	0
 3186 09dc 00       		.byte	0
 3187 09dd 1D       		.uleb128 0x1d
 3188 09de 43010000 		.4byte	0x143
 3189 09e2 22000000 		.4byte	.LBB95
 3190 09e6 04000000 		.4byte	.LBE95-.LBB95
 3191 09ea 01       		.byte	0x1
 3192 09eb 700A     		.2byte	0xa70
 3193 09ed FB090000 		.4byte	0x9fb
 3194 09f1 1E       		.uleb128 0x1e
 3195 09f2 50010000 		.4byte	0x150
 3196 09f6 2F060000 		.4byte	.LLST50
 3197 09fa 00       		.byte	0
 3198 09fb 2D       		.uleb128 0x2d
 3199 09fc 3A010000 		.4byte	0x13a
 3200 0a00 26000000 		.4byte	.LBB97
 3201 0a04 04000000 		.4byte	.LBE97-.LBB97
 3202 0a08 01       		.byte	0x1
 3203 0a09 710A     		.2byte	0xa71
 3204 0a0b 00       		.byte	0
 3205 0a0c 22       		.uleb128 0x22
 3206 0a0d BD010000 		.4byte	0x1bd
 3207 0a11 00000000 		.4byte	.LFB29
 3208 0a15 18000000 		.4byte	.LFE29-.LFB29
 3209 0a19 01       		.uleb128 0x1
 3210 0a1a 9C       		.byte	0x9c
 3211 0a1b 300A0000 		.4byte	0xa30
 3212 0a1f 13       		.uleb128 0x13
 3213 0a20 0C010000 		.4byte	0x10c
 3214 0a24 00000000 		.4byte	.LBB99
 3215 0a28 80000000 		.4byte	.Ldebug_ranges0+0x80
 3216 0a2c 01       		.byte	0x1
 3217 0a2d 810A     		.2byte	0xa81
 3218 0a2f 00       		.byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 116


 3219 0a30 28       		.uleb128 0x28
 3220 0a31 DB050000 		.4byte	.LASF74
 3221 0a35 01       		.byte	0x1
 3222 0a36 900A     		.2byte	0xa90
 3223 0a38 00000000 		.4byte	.LFB30
 3224 0a3c 10000000 		.4byte	.LFE30-.LFB30
 3225 0a40 01       		.uleb128 0x1
 3226 0a41 9C       		.byte	0x9c
 3227 0a42 2F       		.uleb128 0x2f
 3228 0a43 0C010000 		.4byte	0x10c
 3229 0a47 00000000 		.4byte	.LFB31
 3230 0a4b 10000000 		.4byte	.LFE31-.LFB31
 3231 0a4f 01       		.uleb128 0x1
 3232 0a50 9C       		.byte	0x9c
 3233 0a51 28       		.uleb128 0x28
 3234 0a52 B2050000 		.4byte	.LASF75
 3235 0a56 01       		.byte	0x1
 3236 0a57 B00A     		.2byte	0xab0
 3237 0a59 00000000 		.4byte	.LFB32
 3238 0a5d 10000000 		.4byte	.LFE32-.LFB32
 3239 0a61 01       		.uleb128 0x1
 3240 0a62 9C       		.byte	0x9c
 3241 0a63 22       		.uleb128 0x22
 3242 0a64 43010000 		.4byte	0x143
 3243 0a68 00000000 		.4byte	.LFB33
 3244 0a6c 10000000 		.4byte	.LFE33-.LFB33
 3245 0a70 01       		.uleb128 0x1
 3246 0a71 9C       		.byte	0x9c
 3247 0a72 800A0000 		.4byte	0xa80
 3248 0a76 1E       		.uleb128 0x1e
 3249 0a77 50010000 		.4byte	0x150
 3250 0a7b 42060000 		.4byte	.LLST51
 3251 0a7f 00       		.byte	0
 3252 0a80 30       		.uleb128 0x30
 3253 0a81 9B010000 		.4byte	.LASF76
 3254 0a85 01       		.byte	0x1
 3255 0a86 D10A     		.2byte	0xad1
 3256 0a88 83000000 		.4byte	0x83
 3257 0a8c 00000000 		.4byte	.LFB34
 3258 0a90 10000000 		.4byte	.LFE34-.LFB34
 3259 0a94 01       		.uleb128 0x1
 3260 0a95 9C       		.byte	0x9c
 3261 0a96 30       		.uleb128 0x30
 3262 0a97 36040000 		.4byte	.LASF77
 3263 0a9b 01       		.byte	0x1
 3264 0a9c E10A     		.2byte	0xae1
 3265 0a9e 83000000 		.4byte	0x83
 3266 0aa2 00000000 		.4byte	.LFB35
 3267 0aa6 10000000 		.4byte	.LFE35-.LFB35
 3268 0aaa 01       		.uleb128 0x1
 3269 0aab 9C       		.byte	0x9c
 3270 0aac 2F       		.uleb128 0x2f
 3271 0aad 15010000 		.4byte	0x115
 3272 0ab1 00000000 		.4byte	.LFB36
 3273 0ab5 10000000 		.4byte	.LFE36-.LFB36
 3274 0ab9 01       		.uleb128 0x1
 3275 0aba 9C       		.byte	0x9c
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 117


 3276 0abb 2F       		.uleb128 0x2f
 3277 0abc 3A010000 		.4byte	0x13a
 3278 0ac0 00000000 		.4byte	.LFB37
 3279 0ac4 0C000000 		.4byte	.LFE37-.LFB37
 3280 0ac8 01       		.uleb128 0x1
 3281 0ac9 9C       		.byte	0x9c
 3282 0aca 1B       		.uleb128 0x1b
 3283 0acb 6B050000 		.4byte	.LASF78
 3284 0acf 01       		.byte	0x1
 3285 0ad0 610B     		.2byte	0xb61
 3286 0ad2 E7000000 		.4byte	0xe7
 3287 0ad6 00000000 		.4byte	.LFB38
 3288 0ada 10000000 		.4byte	.LFE38-.LFB38
 3289 0ade 01       		.uleb128 0x1
 3290 0adf 9C       		.byte	0x9c
 3291 0ae0 110B0000 		.4byte	0xb11
 3292 0ae4 17       		.uleb128 0x17
 3293 0ae5 17030000 		.4byte	.LASF27
 3294 0ae9 01       		.byte	0x1
 3295 0aea 610B     		.2byte	0xb61
 3296 0aec 83000000 		.4byte	0x83
 3297 0af0 63060000 		.4byte	.LLST52
 3298 0af4 1A       		.uleb128 0x1a
 3299 0af5 2D040000 		.4byte	.LASF79
 3300 0af9 01       		.byte	0x1
 3301 0afa 610B     		.2byte	0xb61
 3302 0afc E7000000 		.4byte	0xe7
 3303 0b00 01       		.uleb128 0x1
 3304 0b01 51       		.byte	0x51
 3305 0b02 1C       		.uleb128 0x1c
 3306 0b03 52000000 		.4byte	.LASF80
 3307 0b07 01       		.byte	0x1
 3308 0b08 630B     		.2byte	0xb63
 3309 0b0a E7000000 		.4byte	0xe7
 3310 0b0e 01       		.uleb128 0x1
 3311 0b0f 50       		.byte	0x50
 3312 0b10 00       		.byte	0
 3313 0b11 1B       		.uleb128 0x1b
 3314 0b12 C4010000 		.4byte	.LASF81
 3315 0b16 01       		.byte	0x1
 3316 0b17 790B     		.2byte	0xb79
 3317 0b19 E7000000 		.4byte	0xe7
 3318 0b1d 00000000 		.4byte	.LFB39
 3319 0b21 0C000000 		.4byte	.LFE39-.LFB39
 3320 0b25 01       		.uleb128 0x1
 3321 0b26 9C       		.byte	0x9c
 3322 0b27 3C0B0000 		.4byte	0xb3c
 3323 0b2b 17       		.uleb128 0x17
 3324 0b2c 17030000 		.4byte	.LASF27
 3325 0b30 01       		.byte	0x1
 3326 0b31 790B     		.2byte	0xb79
 3327 0b33 83000000 		.4byte	0x83
 3328 0b37 84060000 		.4byte	.LLST53
 3329 0b3b 00       		.byte	0
 3330 0b3c 16       		.uleb128 0x16
 3331 0b3d 58020000 		.4byte	.LASF82
 3332 0b41 01       		.byte	0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 118


 3333 0b42 A60B     		.2byte	0xba6
 3334 0b44 00000000 		.4byte	.LFB41
 3335 0b48 74000000 		.4byte	.LFE41-.LFB41
 3336 0b4c 01       		.uleb128 0x1
 3337 0b4d 9C       		.byte	0x9c
 3338 0b4e 610B0000 		.4byte	0xb61
 3339 0b52 1A       		.uleb128 0x1a
 3340 0b53 A1050000 		.4byte	.LASF83
 3341 0b57 01       		.byte	0x1
 3342 0b58 A60B     		.2byte	0xba6
 3343 0b5a 610B0000 		.4byte	0xb61
 3344 0b5e 01       		.uleb128 0x1
 3345 0b5f 50       		.byte	0x50
 3346 0b60 00       		.byte	0
 3347 0b61 06       		.uleb128 0x6
 3348 0b62 04       		.byte	0x4
 3349 0b63 83000000 		.4byte	0x83
 3350 0b67 31       		.uleb128 0x31
 3351 0b68 E7000000 		.4byte	0xe7
 3352 0b6c 770B0000 		.4byte	0xb77
 3353 0b70 32       		.uleb128 0x32
 3354 0b71 E0000000 		.4byte	0xe0
 3355 0b75 04       		.byte	0x4
 3356 0b76 00       		.byte	0
 3357 0b77 33       		.uleb128 0x33
 3358 0b78 80050000 		.4byte	.LASF84
 3359 0b7c 01       		.byte	0x1
 3360 0b7d 22       		.byte	0x22
 3361 0b7e 670B0000 		.4byte	0xb67
 3362 0b82 05       		.uleb128 0x5
 3363 0b83 03       		.byte	0x3
 3364 0b84 00000000 		.4byte	CySysTickCallbacks
 3365 0b88 34       		.uleb128 0x34
 3366 0b89 48040000 		.4byte	.LASF85
 3367 0b8d 01       		.byte	0x1
 3368 0b8e 1B       		.byte	0x1b
 3369 0b8f 83000000 		.4byte	0x83
 3370 0b93 05       		.uleb128 0x5
 3371 0b94 03       		.byte	0x3
 3372 0b95 00000000 		.4byte	cydelayFreqHz
 3373 0b99 34       		.uleb128 0x34
 3374 0b9a DF010000 		.4byte	.LASF86
 3375 0b9e 01       		.byte	0x1
 3376 0b9f 1C       		.byte	0x1c
 3377 0ba0 83000000 		.4byte	0x83
 3378 0ba4 05       		.uleb128 0x5
 3379 0ba5 03       		.byte	0x3
 3380 0ba6 00000000 		.4byte	cydelayFreqKhz
 3381 0baa 34       		.uleb128 0x34
 3382 0bab CC050000 		.4byte	.LASF87
 3383 0baf 01       		.byte	0x1
 3384 0bb0 1D       		.byte	0x1d
 3385 0bb1 6B000000 		.4byte	0x6b
 3386 0bb5 05       		.uleb128 0x5
 3387 0bb6 03       		.byte	0x3
 3388 0bb7 00000000 		.4byte	cydelayFreqMhz
 3389 0bbb 34       		.uleb128 0x34
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 119


 3390 0bbc 37020000 		.4byte	.LASF88
 3391 0bc0 01       		.byte	0x1
 3392 0bc1 1E       		.byte	0x1e
 3393 0bc2 83000000 		.4byte	0x83
 3394 0bc6 05       		.uleb128 0x5
 3395 0bc7 03       		.byte	0x3
 3396 0bc8 00000000 		.4byte	cydelay32kMs
 3397 0bcc 34       		.uleb128 0x34
 3398 0bcd 7E000000 		.4byte	.LASF89
 3399 0bd1 01       		.byte	0x1
 3400 0bd2 36       		.byte	0x36
 3401 0bd3 83000000 		.4byte	0x83
 3402 0bd7 05       		.uleb128 0x5
 3403 0bd8 03       		.byte	0x3
 3404 0bd9 00000000 		.4byte	CySysTickInitVar
 3405 0bdd 34       		.uleb128 0x34
 3406 0bde 38000000 		.4byte	.LASF90
 3407 0be2 01       		.byte	0x1
 3408 0be3 5B       		.byte	0x5b
 3409 0be4 83000000 		.4byte	0x83
 3410 0be8 05       		.uleb128 0x5
 3411 0be9 03       		.byte	0x3
 3412 0bea 00000000 		.4byte	CySysClkPumpConfig
 3413 0bee 35       		.uleb128 0x35
 3414 0bef BA020000 		.4byte	.LASF91
 3415 0bf3 BA020000 		.4byte	.LASF91
 3416 0bf7 03       		.byte	0x3
 3417 0bf8 E5       		.byte	0xe5
 3418 0bf9 35       		.uleb128 0x35
 3419 0bfa 6D040000 		.4byte	.LASF92
 3420 0bfe 6D040000 		.4byte	.LASF92
 3421 0c02 03       		.byte	0x3
 3422 0c03 E6       		.byte	0xe6
 3423 0c04 35       		.uleb128 0x35
 3424 0c05 B1040000 		.4byte	.LASF93
 3425 0c09 B1040000 		.4byte	.LASF93
 3426 0c0d 03       		.byte	0x3
 3427 0c0e DC       		.byte	0xdc
 3428 0c0f 00       		.byte	0
 3429              		.section	.debug_abbrev,"",%progbits
 3430              	.Ldebug_abbrev0:
 3431 0000 01       		.uleb128 0x1
 3432 0001 11       		.uleb128 0x11
 3433 0002 01       		.byte	0x1
 3434 0003 25       		.uleb128 0x25
 3435 0004 0E       		.uleb128 0xe
 3436 0005 13       		.uleb128 0x13
 3437 0006 0B       		.uleb128 0xb
 3438 0007 03       		.uleb128 0x3
 3439 0008 0E       		.uleb128 0xe
 3440 0009 1B       		.uleb128 0x1b
 3441 000a 0E       		.uleb128 0xe
 3442 000b 55       		.uleb128 0x55
 3443 000c 17       		.uleb128 0x17
 3444 000d 11       		.uleb128 0x11
 3445 000e 01       		.uleb128 0x1
 3446 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 120


 3447 0010 17       		.uleb128 0x17
 3448 0011 00       		.byte	0
 3449 0012 00       		.byte	0
 3450 0013 02       		.uleb128 0x2
 3451 0014 24       		.uleb128 0x24
 3452 0015 00       		.byte	0
 3453 0016 0B       		.uleb128 0xb
 3454 0017 0B       		.uleb128 0xb
 3455 0018 3E       		.uleb128 0x3e
 3456 0019 0B       		.uleb128 0xb
 3457 001a 03       		.uleb128 0x3
 3458 001b 0E       		.uleb128 0xe
 3459 001c 00       		.byte	0
 3460 001d 00       		.byte	0
 3461 001e 03       		.uleb128 0x3
 3462 001f 24       		.uleb128 0x24
 3463 0020 00       		.byte	0
 3464 0021 0B       		.uleb128 0xb
 3465 0022 0B       		.uleb128 0xb
 3466 0023 3E       		.uleb128 0x3e
 3467 0024 0B       		.uleb128 0xb
 3468 0025 03       		.uleb128 0x3
 3469 0026 08       		.uleb128 0x8
 3470 0027 00       		.byte	0
 3471 0028 00       		.byte	0
 3472 0029 04       		.uleb128 0x4
 3473 002a 16       		.uleb128 0x16
 3474 002b 00       		.byte	0
 3475 002c 03       		.uleb128 0x3
 3476 002d 0E       		.uleb128 0xe
 3477 002e 3A       		.uleb128 0x3a
 3478 002f 0B       		.uleb128 0xb
 3479 0030 3B       		.uleb128 0x3b
 3480 0031 05       		.uleb128 0x5
 3481 0032 49       		.uleb128 0x49
 3482 0033 13       		.uleb128 0x13
 3483 0034 00       		.byte	0
 3484 0035 00       		.byte	0
 3485 0036 05       		.uleb128 0x5
 3486 0037 35       		.uleb128 0x35
 3487 0038 00       		.byte	0
 3488 0039 49       		.uleb128 0x49
 3489 003a 13       		.uleb128 0x13
 3490 003b 00       		.byte	0
 3491 003c 00       		.byte	0
 3492 003d 06       		.uleb128 0x6
 3493 003e 0F       		.uleb128 0xf
 3494 003f 00       		.byte	0
 3495 0040 0B       		.uleb128 0xb
 3496 0041 0B       		.uleb128 0xb
 3497 0042 49       		.uleb128 0x49
 3498 0043 13       		.uleb128 0x13
 3499 0044 00       		.byte	0
 3500 0045 00       		.byte	0
 3501 0046 07       		.uleb128 0x7
 3502 0047 15       		.uleb128 0x15
 3503 0048 00       		.byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 121


 3504 0049 27       		.uleb128 0x27
 3505 004a 19       		.uleb128 0x19
 3506 004b 00       		.byte	0
 3507 004c 00       		.byte	0
 3508 004d 08       		.uleb128 0x8
 3509 004e 16       		.uleb128 0x16
 3510 004f 00       		.byte	0
 3511 0050 03       		.uleb128 0x3
 3512 0051 0E       		.uleb128 0xe
 3513 0052 3A       		.uleb128 0x3a
 3514 0053 0B       		.uleb128 0xb
 3515 0054 3B       		.uleb128 0x3b
 3516 0055 0B       		.uleb128 0xb
 3517 0056 49       		.uleb128 0x49
 3518 0057 13       		.uleb128 0x13
 3519 0058 00       		.byte	0
 3520 0059 00       		.byte	0
 3521 005a 09       		.uleb128 0x9
 3522 005b 2E       		.uleb128 0x2e
 3523 005c 01       		.byte	0x1
 3524 005d 3F       		.uleb128 0x3f
 3525 005e 19       		.uleb128 0x19
 3526 005f 03       		.uleb128 0x3
 3527 0060 0E       		.uleb128 0xe
 3528 0061 3A       		.uleb128 0x3a
 3529 0062 0B       		.uleb128 0xb
 3530 0063 3B       		.uleb128 0x3b
 3531 0064 05       		.uleb128 0x5
 3532 0065 27       		.uleb128 0x27
 3533 0066 19       		.uleb128 0x19
 3534 0067 20       		.uleb128 0x20
 3535 0068 0B       		.uleb128 0xb
 3536 0069 01       		.uleb128 0x1
 3537 006a 13       		.uleb128 0x13
 3538 006b 00       		.byte	0
 3539 006c 00       		.byte	0
 3540 006d 0A       		.uleb128 0xa
 3541 006e 05       		.uleb128 0x5
 3542 006f 00       		.byte	0
 3543 0070 03       		.uleb128 0x3
 3544 0071 0E       		.uleb128 0xe
 3545 0072 3A       		.uleb128 0x3a
 3546 0073 0B       		.uleb128 0xb
 3547 0074 3B       		.uleb128 0x3b
 3548 0075 05       		.uleb128 0x5
 3549 0076 49       		.uleb128 0x49
 3550 0077 13       		.uleb128 0x13
 3551 0078 00       		.byte	0
 3552 0079 00       		.byte	0
 3553 007a 0B       		.uleb128 0xb
 3554 007b 2E       		.uleb128 0x2e
 3555 007c 00       		.byte	0
 3556 007d 3F       		.uleb128 0x3f
 3557 007e 19       		.uleb128 0x19
 3558 007f 03       		.uleb128 0x3
 3559 0080 0E       		.uleb128 0xe
 3560 0081 3A       		.uleb128 0x3a
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 122


 3561 0082 0B       		.uleb128 0xb
 3562 0083 3B       		.uleb128 0x3b
 3563 0084 05       		.uleb128 0x5
 3564 0085 27       		.uleb128 0x27
 3565 0086 19       		.uleb128 0x19
 3566 0087 20       		.uleb128 0x20
 3567 0088 0B       		.uleb128 0xb
 3568 0089 00       		.byte	0
 3569 008a 00       		.byte	0
 3570 008b 0C       		.uleb128 0xc
 3571 008c 2E       		.uleb128 0x2e
 3572 008d 00       		.byte	0
 3573 008e 3F       		.uleb128 0x3f
 3574 008f 19       		.uleb128 0x19
 3575 0090 03       		.uleb128 0x3
 3576 0091 0E       		.uleb128 0xe
 3577 0092 3A       		.uleb128 0x3a
 3578 0093 0B       		.uleb128 0xb
 3579 0094 3B       		.uleb128 0x3b
 3580 0095 05       		.uleb128 0x5
 3581 0096 27       		.uleb128 0x27
 3582 0097 19       		.uleb128 0x19
 3583 0098 49       		.uleb128 0x49
 3584 0099 13       		.uleb128 0x13
 3585 009a 20       		.uleb128 0x20
 3586 009b 0B       		.uleb128 0xb
 3587 009c 00       		.byte	0
 3588 009d 00       		.byte	0
 3589 009e 0D       		.uleb128 0xd
 3590 009f 2E       		.uleb128 0x2e
 3591 00a0 01       		.byte	0x1
 3592 00a1 03       		.uleb128 0x3
 3593 00a2 0E       		.uleb128 0xe
 3594 00a3 3A       		.uleb128 0x3a
 3595 00a4 0B       		.uleb128 0xb
 3596 00a5 3B       		.uleb128 0x3b
 3597 00a6 05       		.uleb128 0x5
 3598 00a7 27       		.uleb128 0x27
 3599 00a8 19       		.uleb128 0x19
 3600 00a9 20       		.uleb128 0x20
 3601 00aa 0B       		.uleb128 0xb
 3602 00ab 01       		.uleb128 0x1
 3603 00ac 13       		.uleb128 0x13
 3604 00ad 00       		.byte	0
 3605 00ae 00       		.byte	0
 3606 00af 0E       		.uleb128 0xe
 3607 00b0 34       		.uleb128 0x34
 3608 00b1 00       		.byte	0
 3609 00b2 03       		.uleb128 0x3
 3610 00b3 08       		.uleb128 0x8
 3611 00b4 3A       		.uleb128 0x3a
 3612 00b5 0B       		.uleb128 0xb
 3613 00b6 3B       		.uleb128 0x3b
 3614 00b7 05       		.uleb128 0x5
 3615 00b8 49       		.uleb128 0x49
 3616 00b9 13       		.uleb128 0x13
 3617 00ba 00       		.byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 123


 3618 00bb 00       		.byte	0
 3619 00bc 0F       		.uleb128 0xf
 3620 00bd 2E       		.uleb128 0x2e
 3621 00be 01       		.byte	0x1
 3622 00bf 3F       		.uleb128 0x3f
 3623 00c0 19       		.uleb128 0x19
 3624 00c1 03       		.uleb128 0x3
 3625 00c2 0E       		.uleb128 0xe
 3626 00c3 3A       		.uleb128 0x3a
 3627 00c4 0B       		.uleb128 0xb
 3628 00c5 3B       		.uleb128 0x3b
 3629 00c6 05       		.uleb128 0x5
 3630 00c7 27       		.uleb128 0x27
 3631 00c8 19       		.uleb128 0x19
 3632 00c9 49       		.uleb128 0x49
 3633 00ca 13       		.uleb128 0x13
 3634 00cb 20       		.uleb128 0x20
 3635 00cc 0B       		.uleb128 0xb
 3636 00cd 01       		.uleb128 0x1
 3637 00ce 13       		.uleb128 0x13
 3638 00cf 00       		.byte	0
 3639 00d0 00       		.byte	0
 3640 00d1 10       		.uleb128 0x10
 3641 00d2 34       		.uleb128 0x34
 3642 00d3 00       		.byte	0
 3643 00d4 03       		.uleb128 0x3
 3644 00d5 0E       		.uleb128 0xe
 3645 00d6 3A       		.uleb128 0x3a
 3646 00d7 0B       		.uleb128 0xb
 3647 00d8 3B       		.uleb128 0x3b
 3648 00d9 05       		.uleb128 0x5
 3649 00da 49       		.uleb128 0x49
 3650 00db 13       		.uleb128 0x13
 3651 00dc 00       		.byte	0
 3652 00dd 00       		.byte	0
 3653 00de 11       		.uleb128 0x11
 3654 00df 2E       		.uleb128 0x2e
 3655 00e0 01       		.byte	0x1
 3656 00e1 31       		.uleb128 0x31
 3657 00e2 13       		.uleb128 0x13
 3658 00e3 11       		.uleb128 0x11
 3659 00e4 01       		.uleb128 0x1
 3660 00e5 12       		.uleb128 0x12
 3661 00e6 06       		.uleb128 0x6
 3662 00e7 40       		.uleb128 0x40
 3663 00e8 18       		.uleb128 0x18
 3664 00e9 9642     		.uleb128 0x2116
 3665 00eb 19       		.uleb128 0x19
 3666 00ec 01       		.uleb128 0x1
 3667 00ed 13       		.uleb128 0x13
 3668 00ee 00       		.byte	0
 3669 00ef 00       		.byte	0
 3670 00f0 12       		.uleb128 0x12
 3671 00f1 34       		.uleb128 0x34
 3672 00f2 00       		.byte	0
 3673 00f3 31       		.uleb128 0x31
 3674 00f4 13       		.uleb128 0x13
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 124


 3675 00f5 00       		.byte	0
 3676 00f6 00       		.byte	0
 3677 00f7 13       		.uleb128 0x13
 3678 00f8 1D       		.uleb128 0x1d
 3679 00f9 00       		.byte	0
 3680 00fa 31       		.uleb128 0x31
 3681 00fb 13       		.uleb128 0x13
 3682 00fc 52       		.uleb128 0x52
 3683 00fd 01       		.uleb128 0x1
 3684 00fe 55       		.uleb128 0x55
 3685 00ff 17       		.uleb128 0x17
 3686 0100 58       		.uleb128 0x58
 3687 0101 0B       		.uleb128 0xb
 3688 0102 59       		.uleb128 0x59
 3689 0103 05       		.uleb128 0x5
 3690 0104 00       		.byte	0
 3691 0105 00       		.byte	0
 3692 0106 14       		.uleb128 0x14
 3693 0107 0B       		.uleb128 0xb
 3694 0108 01       		.byte	0x1
 3695 0109 11       		.uleb128 0x11
 3696 010a 01       		.uleb128 0x1
 3697 010b 12       		.uleb128 0x12
 3698 010c 06       		.uleb128 0x6
 3699 010d 00       		.byte	0
 3700 010e 00       		.byte	0
 3701 010f 15       		.uleb128 0x15
 3702 0110 2E       		.uleb128 0x2e
 3703 0111 00       		.byte	0
 3704 0112 3F       		.uleb128 0x3f
 3705 0113 19       		.uleb128 0x19
 3706 0114 03       		.uleb128 0x3
 3707 0115 0E       		.uleb128 0xe
 3708 0116 3A       		.uleb128 0x3a
 3709 0117 0B       		.uleb128 0xb
 3710 0118 3B       		.uleb128 0x3b
 3711 0119 0B       		.uleb128 0xb
 3712 011a 27       		.uleb128 0x27
 3713 011b 19       		.uleb128 0x19
 3714 011c 11       		.uleb128 0x11
 3715 011d 01       		.uleb128 0x1
 3716 011e 12       		.uleb128 0x12
 3717 011f 06       		.uleb128 0x6
 3718 0120 40       		.uleb128 0x40
 3719 0121 18       		.uleb128 0x18
 3720 0122 9742     		.uleb128 0x2117
 3721 0124 19       		.uleb128 0x19
 3722 0125 00       		.byte	0
 3723 0126 00       		.byte	0
 3724 0127 16       		.uleb128 0x16
 3725 0128 2E       		.uleb128 0x2e
 3726 0129 01       		.byte	0x1
 3727 012a 3F       		.uleb128 0x3f
 3728 012b 19       		.uleb128 0x19
 3729 012c 03       		.uleb128 0x3
 3730 012d 0E       		.uleb128 0xe
 3731 012e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 125


 3732 012f 0B       		.uleb128 0xb
 3733 0130 3B       		.uleb128 0x3b
 3734 0131 05       		.uleb128 0x5
 3735 0132 27       		.uleb128 0x27
 3736 0133 19       		.uleb128 0x19
 3737 0134 11       		.uleb128 0x11
 3738 0135 01       		.uleb128 0x1
 3739 0136 12       		.uleb128 0x12
 3740 0137 06       		.uleb128 0x6
 3741 0138 40       		.uleb128 0x40
 3742 0139 18       		.uleb128 0x18
 3743 013a 9742     		.uleb128 0x2117
 3744 013c 19       		.uleb128 0x19
 3745 013d 01       		.uleb128 0x1
 3746 013e 13       		.uleb128 0x13
 3747 013f 00       		.byte	0
 3748 0140 00       		.byte	0
 3749 0141 17       		.uleb128 0x17
 3750 0142 05       		.uleb128 0x5
 3751 0143 00       		.byte	0
 3752 0144 03       		.uleb128 0x3
 3753 0145 0E       		.uleb128 0xe
 3754 0146 3A       		.uleb128 0x3a
 3755 0147 0B       		.uleb128 0xb
 3756 0148 3B       		.uleb128 0x3b
 3757 0149 05       		.uleb128 0x5
 3758 014a 49       		.uleb128 0x49
 3759 014b 13       		.uleb128 0x13
 3760 014c 02       		.uleb128 0x2
 3761 014d 17       		.uleb128 0x17
 3762 014e 00       		.byte	0
 3763 014f 00       		.byte	0
 3764 0150 18       		.uleb128 0x18
 3765 0151 34       		.uleb128 0x34
 3766 0152 00       		.byte	0
 3767 0153 03       		.uleb128 0x3
 3768 0154 0E       		.uleb128 0xe
 3769 0155 3A       		.uleb128 0x3a
 3770 0156 0B       		.uleb128 0xb
 3771 0157 3B       		.uleb128 0x3b
 3772 0158 05       		.uleb128 0x5
 3773 0159 49       		.uleb128 0x49
 3774 015a 13       		.uleb128 0x13
 3775 015b 02       		.uleb128 0x2
 3776 015c 17       		.uleb128 0x17
 3777 015d 00       		.byte	0
 3778 015e 00       		.byte	0
 3779 015f 19       		.uleb128 0x19
 3780 0160 898201   		.uleb128 0x4109
 3781 0163 00       		.byte	0
 3782 0164 11       		.uleb128 0x11
 3783 0165 01       		.uleb128 0x1
 3784 0166 31       		.uleb128 0x31
 3785 0167 13       		.uleb128 0x13
 3786 0168 00       		.byte	0
 3787 0169 00       		.byte	0
 3788 016a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 126


 3789 016b 05       		.uleb128 0x5
 3790 016c 00       		.byte	0
 3791 016d 03       		.uleb128 0x3
 3792 016e 0E       		.uleb128 0xe
 3793 016f 3A       		.uleb128 0x3a
 3794 0170 0B       		.uleb128 0xb
 3795 0171 3B       		.uleb128 0x3b
 3796 0172 05       		.uleb128 0x5
 3797 0173 49       		.uleb128 0x49
 3798 0174 13       		.uleb128 0x13
 3799 0175 02       		.uleb128 0x2
 3800 0176 18       		.uleb128 0x18
 3801 0177 00       		.byte	0
 3802 0178 00       		.byte	0
 3803 0179 1B       		.uleb128 0x1b
 3804 017a 2E       		.uleb128 0x2e
 3805 017b 01       		.byte	0x1
 3806 017c 3F       		.uleb128 0x3f
 3807 017d 19       		.uleb128 0x19
 3808 017e 03       		.uleb128 0x3
 3809 017f 0E       		.uleb128 0xe
 3810 0180 3A       		.uleb128 0x3a
 3811 0181 0B       		.uleb128 0xb
 3812 0182 3B       		.uleb128 0x3b
 3813 0183 05       		.uleb128 0x5
 3814 0184 27       		.uleb128 0x27
 3815 0185 19       		.uleb128 0x19
 3816 0186 49       		.uleb128 0x49
 3817 0187 13       		.uleb128 0x13
 3818 0188 11       		.uleb128 0x11
 3819 0189 01       		.uleb128 0x1
 3820 018a 12       		.uleb128 0x12
 3821 018b 06       		.uleb128 0x6
 3822 018c 40       		.uleb128 0x40
 3823 018d 18       		.uleb128 0x18
 3824 018e 9742     		.uleb128 0x2117
 3825 0190 19       		.uleb128 0x19
 3826 0191 01       		.uleb128 0x1
 3827 0192 13       		.uleb128 0x13
 3828 0193 00       		.byte	0
 3829 0194 00       		.byte	0
 3830 0195 1C       		.uleb128 0x1c
 3831 0196 34       		.uleb128 0x34
 3832 0197 00       		.byte	0
 3833 0198 03       		.uleb128 0x3
 3834 0199 0E       		.uleb128 0xe
 3835 019a 3A       		.uleb128 0x3a
 3836 019b 0B       		.uleb128 0xb
 3837 019c 3B       		.uleb128 0x3b
 3838 019d 05       		.uleb128 0x5
 3839 019e 49       		.uleb128 0x49
 3840 019f 13       		.uleb128 0x13
 3841 01a0 02       		.uleb128 0x2
 3842 01a1 18       		.uleb128 0x18
 3843 01a2 00       		.byte	0
 3844 01a3 00       		.byte	0
 3845 01a4 1D       		.uleb128 0x1d
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 127


 3846 01a5 1D       		.uleb128 0x1d
 3847 01a6 01       		.byte	0x1
 3848 01a7 31       		.uleb128 0x31
 3849 01a8 13       		.uleb128 0x13
 3850 01a9 11       		.uleb128 0x11
 3851 01aa 01       		.uleb128 0x1
 3852 01ab 12       		.uleb128 0x12
 3853 01ac 06       		.uleb128 0x6
 3854 01ad 58       		.uleb128 0x58
 3855 01ae 0B       		.uleb128 0xb
 3856 01af 59       		.uleb128 0x59
 3857 01b0 05       		.uleb128 0x5
 3858 01b1 01       		.uleb128 0x1
 3859 01b2 13       		.uleb128 0x13
 3860 01b3 00       		.byte	0
 3861 01b4 00       		.byte	0
 3862 01b5 1E       		.uleb128 0x1e
 3863 01b6 05       		.uleb128 0x5
 3864 01b7 00       		.byte	0
 3865 01b8 31       		.uleb128 0x31
 3866 01b9 13       		.uleb128 0x13
 3867 01ba 02       		.uleb128 0x2
 3868 01bb 17       		.uleb128 0x17
 3869 01bc 00       		.byte	0
 3870 01bd 00       		.byte	0
 3871 01be 1F       		.uleb128 0x1f
 3872 01bf 898201   		.uleb128 0x4109
 3873 01c2 01       		.byte	0x1
 3874 01c3 11       		.uleb128 0x11
 3875 01c4 01       		.uleb128 0x1
 3876 01c5 31       		.uleb128 0x31
 3877 01c6 13       		.uleb128 0x13
 3878 01c7 01       		.uleb128 0x1
 3879 01c8 13       		.uleb128 0x13
 3880 01c9 00       		.byte	0
 3881 01ca 00       		.byte	0
 3882 01cb 20       		.uleb128 0x20
 3883 01cc 8A8201   		.uleb128 0x410a
 3884 01cf 00       		.byte	0
 3885 01d0 02       		.uleb128 0x2
 3886 01d1 18       		.uleb128 0x18
 3887 01d2 9142     		.uleb128 0x2111
 3888 01d4 18       		.uleb128 0x18
 3889 01d5 00       		.byte	0
 3890 01d6 00       		.byte	0
 3891 01d7 21       		.uleb128 0x21
 3892 01d8 898201   		.uleb128 0x4109
 3893 01db 01       		.byte	0x1
 3894 01dc 11       		.uleb128 0x11
 3895 01dd 01       		.uleb128 0x1
 3896 01de 31       		.uleb128 0x31
 3897 01df 13       		.uleb128 0x13
 3898 01e0 00       		.byte	0
 3899 01e1 00       		.byte	0
 3900 01e2 22       		.uleb128 0x22
 3901 01e3 2E       		.uleb128 0x2e
 3902 01e4 01       		.byte	0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 128


 3903 01e5 31       		.uleb128 0x31
 3904 01e6 13       		.uleb128 0x13
 3905 01e7 11       		.uleb128 0x11
 3906 01e8 01       		.uleb128 0x1
 3907 01e9 12       		.uleb128 0x12
 3908 01ea 06       		.uleb128 0x6
 3909 01eb 40       		.uleb128 0x40
 3910 01ec 18       		.uleb128 0x18
 3911 01ed 9742     		.uleb128 0x2117
 3912 01ef 19       		.uleb128 0x19
 3913 01f0 01       		.uleb128 0x1
 3914 01f1 13       		.uleb128 0x13
 3915 01f2 00       		.byte	0
 3916 01f3 00       		.byte	0
 3917 01f4 23       		.uleb128 0x23
 3918 01f5 05       		.uleb128 0x5
 3919 01f6 00       		.byte	0
 3920 01f7 31       		.uleb128 0x31
 3921 01f8 13       		.uleb128 0x13
 3922 01f9 02       		.uleb128 0x2
 3923 01fa 18       		.uleb128 0x18
 3924 01fb 00       		.byte	0
 3925 01fc 00       		.byte	0
 3926 01fd 24       		.uleb128 0x24
 3927 01fe 34       		.uleb128 0x34
 3928 01ff 00       		.byte	0
 3929 0200 31       		.uleb128 0x31
 3930 0201 13       		.uleb128 0x13
 3931 0202 02       		.uleb128 0x2
 3932 0203 18       		.uleb128 0x18
 3933 0204 00       		.byte	0
 3934 0205 00       		.byte	0
 3935 0206 25       		.uleb128 0x25
 3936 0207 34       		.uleb128 0x34
 3937 0208 00       		.byte	0
 3938 0209 31       		.uleb128 0x31
 3939 020a 13       		.uleb128 0x13
 3940 020b 1C       		.uleb128 0x1c
 3941 020c 06       		.uleb128 0x6
 3942 020d 00       		.byte	0
 3943 020e 00       		.byte	0
 3944 020f 26       		.uleb128 0x26
 3945 0210 1D       		.uleb128 0x1d
 3946 0211 01       		.byte	0x1
 3947 0212 31       		.uleb128 0x31
 3948 0213 13       		.uleb128 0x13
 3949 0214 11       		.uleb128 0x11
 3950 0215 01       		.uleb128 0x1
 3951 0216 12       		.uleb128 0x12
 3952 0217 06       		.uleb128 0x6
 3953 0218 58       		.uleb128 0x58
 3954 0219 0B       		.uleb128 0xb
 3955 021a 59       		.uleb128 0x59
 3956 021b 05       		.uleb128 0x5
 3957 021c 00       		.byte	0
 3958 021d 00       		.byte	0
 3959 021e 27       		.uleb128 0x27
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 129


 3960 021f 34       		.uleb128 0x34
 3961 0220 00       		.byte	0
 3962 0221 03       		.uleb128 0x3
 3963 0222 0E       		.uleb128 0xe
 3964 0223 3A       		.uleb128 0x3a
 3965 0224 0B       		.uleb128 0xb
 3966 0225 3B       		.uleb128 0x3b
 3967 0226 05       		.uleb128 0x5
 3968 0227 49       		.uleb128 0x49
 3969 0228 13       		.uleb128 0x13
 3970 0229 1C       		.uleb128 0x1c
 3971 022a 06       		.uleb128 0x6
 3972 022b 00       		.byte	0
 3973 022c 00       		.byte	0
 3974 022d 28       		.uleb128 0x28
 3975 022e 2E       		.uleb128 0x2e
 3976 022f 00       		.byte	0
 3977 0230 3F       		.uleb128 0x3f
 3978 0231 19       		.uleb128 0x19
 3979 0232 03       		.uleb128 0x3
 3980 0233 0E       		.uleb128 0xe
 3981 0234 3A       		.uleb128 0x3a
 3982 0235 0B       		.uleb128 0xb
 3983 0236 3B       		.uleb128 0x3b
 3984 0237 05       		.uleb128 0x5
 3985 0238 27       		.uleb128 0x27
 3986 0239 19       		.uleb128 0x19
 3987 023a 11       		.uleb128 0x11
 3988 023b 01       		.uleb128 0x1
 3989 023c 12       		.uleb128 0x12
 3990 023d 06       		.uleb128 0x6
 3991 023e 40       		.uleb128 0x40
 3992 023f 18       		.uleb128 0x18
 3993 0240 9742     		.uleb128 0x2117
 3994 0242 19       		.uleb128 0x19
 3995 0243 00       		.byte	0
 3996 0244 00       		.byte	0
 3997 0245 29       		.uleb128 0x29
 3998 0246 2E       		.uleb128 0x2e
 3999 0247 01       		.byte	0x1
 4000 0248 3F       		.uleb128 0x3f
 4001 0249 19       		.uleb128 0x19
 4002 024a 03       		.uleb128 0x3
 4003 024b 0E       		.uleb128 0xe
 4004 024c 3A       		.uleb128 0x3a
 4005 024d 0B       		.uleb128 0xb
 4006 024e 3B       		.uleb128 0x3b
 4007 024f 05       		.uleb128 0x5
 4008 0250 27       		.uleb128 0x27
 4009 0251 19       		.uleb128 0x19
 4010 0252 11       		.uleb128 0x11
 4011 0253 01       		.uleb128 0x1
 4012 0254 12       		.uleb128 0x12
 4013 0255 06       		.uleb128 0x6
 4014 0256 40       		.uleb128 0x40
 4015 0257 18       		.uleb128 0x18
 4016 0258 9642     		.uleb128 0x2116
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 130


 4017 025a 19       		.uleb128 0x19
 4018 025b 01       		.uleb128 0x1
 4019 025c 13       		.uleb128 0x13
 4020 025d 00       		.byte	0
 4021 025e 00       		.byte	0
 4022 025f 2A       		.uleb128 0x2a
 4023 0260 34       		.uleb128 0x34
 4024 0261 00       		.byte	0
 4025 0262 31       		.uleb128 0x31
 4026 0263 13       		.uleb128 0x13
 4027 0264 02       		.uleb128 0x2
 4028 0265 17       		.uleb128 0x17
 4029 0266 00       		.byte	0
 4030 0267 00       		.byte	0
 4031 0268 2B       		.uleb128 0x2b
 4032 0269 1D       		.uleb128 0x1d
 4033 026a 01       		.byte	0x1
 4034 026b 31       		.uleb128 0x31
 4035 026c 13       		.uleb128 0x13
 4036 026d 52       		.uleb128 0x52
 4037 026e 01       		.uleb128 0x1
 4038 026f 55       		.uleb128 0x55
 4039 0270 17       		.uleb128 0x17
 4040 0271 58       		.uleb128 0x58
 4041 0272 0B       		.uleb128 0xb
 4042 0273 59       		.uleb128 0x59
 4043 0274 05       		.uleb128 0x5
 4044 0275 01       		.uleb128 0x1
 4045 0276 13       		.uleb128 0x13
 4046 0277 00       		.byte	0
 4047 0278 00       		.byte	0
 4048 0279 2C       		.uleb128 0x2c
 4049 027a 0B       		.uleb128 0xb
 4050 027b 01       		.byte	0x1
 4051 027c 55       		.uleb128 0x55
 4052 027d 17       		.uleb128 0x17
 4053 027e 00       		.byte	0
 4054 027f 00       		.byte	0
 4055 0280 2D       		.uleb128 0x2d
 4056 0281 1D       		.uleb128 0x1d
 4057 0282 00       		.byte	0
 4058 0283 31       		.uleb128 0x31
 4059 0284 13       		.uleb128 0x13
 4060 0285 11       		.uleb128 0x11
 4061 0286 01       		.uleb128 0x1
 4062 0287 12       		.uleb128 0x12
 4063 0288 06       		.uleb128 0x6
 4064 0289 58       		.uleb128 0x58
 4065 028a 0B       		.uleb128 0xb
 4066 028b 59       		.uleb128 0x59
 4067 028c 05       		.uleb128 0x5
 4068 028d 00       		.byte	0
 4069 028e 00       		.byte	0
 4070 028f 2E       		.uleb128 0x2e
 4071 0290 1D       		.uleb128 0x1d
 4072 0291 01       		.byte	0x1
 4073 0292 31       		.uleb128 0x31
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 131


 4074 0293 13       		.uleb128 0x13
 4075 0294 52       		.uleb128 0x52
 4076 0295 01       		.uleb128 0x1
 4077 0296 55       		.uleb128 0x55
 4078 0297 17       		.uleb128 0x17
 4079 0298 58       		.uleb128 0x58
 4080 0299 0B       		.uleb128 0xb
 4081 029a 59       		.uleb128 0x59
 4082 029b 05       		.uleb128 0x5
 4083 029c 00       		.byte	0
 4084 029d 00       		.byte	0
 4085 029e 2F       		.uleb128 0x2f
 4086 029f 2E       		.uleb128 0x2e
 4087 02a0 00       		.byte	0
 4088 02a1 31       		.uleb128 0x31
 4089 02a2 13       		.uleb128 0x13
 4090 02a3 11       		.uleb128 0x11
 4091 02a4 01       		.uleb128 0x1
 4092 02a5 12       		.uleb128 0x12
 4093 02a6 06       		.uleb128 0x6
 4094 02a7 40       		.uleb128 0x40
 4095 02a8 18       		.uleb128 0x18
 4096 02a9 9742     		.uleb128 0x2117
 4097 02ab 19       		.uleb128 0x19
 4098 02ac 00       		.byte	0
 4099 02ad 00       		.byte	0
 4100 02ae 30       		.uleb128 0x30
 4101 02af 2E       		.uleb128 0x2e
 4102 02b0 00       		.byte	0
 4103 02b1 3F       		.uleb128 0x3f
 4104 02b2 19       		.uleb128 0x19
 4105 02b3 03       		.uleb128 0x3
 4106 02b4 0E       		.uleb128 0xe
 4107 02b5 3A       		.uleb128 0x3a
 4108 02b6 0B       		.uleb128 0xb
 4109 02b7 3B       		.uleb128 0x3b
 4110 02b8 05       		.uleb128 0x5
 4111 02b9 27       		.uleb128 0x27
 4112 02ba 19       		.uleb128 0x19
 4113 02bb 49       		.uleb128 0x49
 4114 02bc 13       		.uleb128 0x13
 4115 02bd 11       		.uleb128 0x11
 4116 02be 01       		.uleb128 0x1
 4117 02bf 12       		.uleb128 0x12
 4118 02c0 06       		.uleb128 0x6
 4119 02c1 40       		.uleb128 0x40
 4120 02c2 18       		.uleb128 0x18
 4121 02c3 9742     		.uleb128 0x2117
 4122 02c5 19       		.uleb128 0x19
 4123 02c6 00       		.byte	0
 4124 02c7 00       		.byte	0
 4125 02c8 31       		.uleb128 0x31
 4126 02c9 01       		.uleb128 0x1
 4127 02ca 01       		.byte	0x1
 4128 02cb 49       		.uleb128 0x49
 4129 02cc 13       		.uleb128 0x13
 4130 02cd 01       		.uleb128 0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 132


 4131 02ce 13       		.uleb128 0x13
 4132 02cf 00       		.byte	0
 4133 02d0 00       		.byte	0
 4134 02d1 32       		.uleb128 0x32
 4135 02d2 21       		.uleb128 0x21
 4136 02d3 00       		.byte	0
 4137 02d4 49       		.uleb128 0x49
 4138 02d5 13       		.uleb128 0x13
 4139 02d6 2F       		.uleb128 0x2f
 4140 02d7 0B       		.uleb128 0xb
 4141 02d8 00       		.byte	0
 4142 02d9 00       		.byte	0
 4143 02da 33       		.uleb128 0x33
 4144 02db 34       		.uleb128 0x34
 4145 02dc 00       		.byte	0
 4146 02dd 03       		.uleb128 0x3
 4147 02de 0E       		.uleb128 0xe
 4148 02df 3A       		.uleb128 0x3a
 4149 02e0 0B       		.uleb128 0xb
 4150 02e1 3B       		.uleb128 0x3b
 4151 02e2 0B       		.uleb128 0xb
 4152 02e3 49       		.uleb128 0x49
 4153 02e4 13       		.uleb128 0x13
 4154 02e5 02       		.uleb128 0x2
 4155 02e6 18       		.uleb128 0x18
 4156 02e7 00       		.byte	0
 4157 02e8 00       		.byte	0
 4158 02e9 34       		.uleb128 0x34
 4159 02ea 34       		.uleb128 0x34
 4160 02eb 00       		.byte	0
 4161 02ec 03       		.uleb128 0x3
 4162 02ed 0E       		.uleb128 0xe
 4163 02ee 3A       		.uleb128 0x3a
 4164 02ef 0B       		.uleb128 0xb
 4165 02f0 3B       		.uleb128 0x3b
 4166 02f1 0B       		.uleb128 0xb
 4167 02f2 49       		.uleb128 0x49
 4168 02f3 13       		.uleb128 0x13
 4169 02f4 3F       		.uleb128 0x3f
 4170 02f5 19       		.uleb128 0x19
 4171 02f6 02       		.uleb128 0x2
 4172 02f7 18       		.uleb128 0x18
 4173 02f8 00       		.byte	0
 4174 02f9 00       		.byte	0
 4175 02fa 35       		.uleb128 0x35
 4176 02fb 2E       		.uleb128 0x2e
 4177 02fc 00       		.byte	0
 4178 02fd 3F       		.uleb128 0x3f
 4179 02fe 19       		.uleb128 0x19
 4180 02ff 3C       		.uleb128 0x3c
 4181 0300 19       		.uleb128 0x19
 4182 0301 6E       		.uleb128 0x6e
 4183 0302 0E       		.uleb128 0xe
 4184 0303 03       		.uleb128 0x3
 4185 0304 0E       		.uleb128 0xe
 4186 0305 3A       		.uleb128 0x3a
 4187 0306 0B       		.uleb128 0xb
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 133


 4188 0307 3B       		.uleb128 0x3b
 4189 0308 0B       		.uleb128 0xb
 4190 0309 00       		.byte	0
 4191 030a 00       		.byte	0
 4192 030b 00       		.byte	0
 4193              		.section	.debug_loc,"",%progbits
 4194              	.Ldebug_loc0:
 4195              	.LLST0:
 4196 0000 00000000 		.4byte	.LVL1
 4197 0004 07000000 		.4byte	.LVL2-1
 4198 0008 0100     		.2byte	0x1
 4199 000a 50       		.byte	0x50
 4200 000b 07000000 		.4byte	.LVL2-1
 4201 000f 1A000000 		.4byte	.LVL6
 4202 0013 0100     		.2byte	0x1
 4203 0015 54       		.byte	0x54
 4204 0016 1A000000 		.4byte	.LVL6
 4205 001a 20000000 		.4byte	.LFE2
 4206 001e 0400     		.2byte	0x4
 4207 0020 F3       		.byte	0xf3
 4208 0021 01       		.uleb128 0x1
 4209 0022 50       		.byte	0x50
 4210 0023 9F       		.byte	0x9f
 4211 0024 00000000 		.4byte	0
 4212 0028 00000000 		.4byte	0
 4213              	.LLST1:
 4214 002c 08000000 		.4byte	.LVL2
 4215 0030 19000000 		.4byte	.LVL5-1
 4216 0034 0100     		.2byte	0x1
 4217 0036 50       		.byte	0x50
 4218 0037 00000000 		.4byte	0
 4219 003b 00000000 		.4byte	0
 4220              	.LLST2:
 4221 003f 10000000 		.4byte	.LVL3
 4222 0043 14000000 		.4byte	.LVL4
 4223 0047 0100     		.2byte	0x1
 4224 0049 52       		.byte	0x52
 4225 004a 14000000 		.4byte	.LVL4
 4226 004e 19000000 		.4byte	.LVL5-1
 4227 0052 0100     		.2byte	0x1
 4228 0054 53       		.byte	0x53
 4229 0055 00000000 		.4byte	0
 4230 0059 00000000 		.4byte	0
 4231              	.LLST3:
 4232 005d 06000000 		.4byte	.LVL8
 4233 0061 0D000000 		.4byte	.LVL10-1
 4234 0065 0100     		.2byte	0x1
 4235 0067 50       		.byte	0x50
 4236 0068 00000000 		.4byte	0
 4237 006c 00000000 		.4byte	0
 4238              	.LLST4:
 4239 0070 0A000000 		.4byte	.LVL9
 4240 0074 12000000 		.4byte	.LVL11
 4241 0078 0500     		.2byte	0x5
 4242 007a 74       		.byte	0x74
 4243 007b 00       		.sleb128 0
 4244 007c 33       		.byte	0x33
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 134


 4245 007d 1A       		.byte	0x1a
 4246 007e 9F       		.byte	0x9f
 4247 007f 12000000 		.4byte	.LVL11
 4248 0083 18000000 		.4byte	.LFE4
 4249 0087 0100     		.2byte	0x1
 4250 0089 50       		.byte	0x50
 4251 008a 00000000 		.4byte	0
 4252 008e 00000000 		.4byte	0
 4253              	.LLST5:
 4254 0092 00000000 		.4byte	.LVL12
 4255 0096 07000000 		.4byte	.LVL13-1
 4256 009a 0100     		.2byte	0x1
 4257 009c 50       		.byte	0x50
 4258 009d 07000000 		.4byte	.LVL13-1
 4259 00a1 0C000000 		.4byte	.LVL14
 4260 00a5 0100     		.2byte	0x1
 4261 00a7 54       		.byte	0x54
 4262 00a8 0C000000 		.4byte	.LVL14
 4263 00ac 24000000 		.4byte	.LFE5
 4264 00b0 0400     		.2byte	0x4
 4265 00b2 F3       		.byte	0xf3
 4266 00b3 01       		.uleb128 0x1
 4267 00b4 50       		.byte	0x50
 4268 00b5 9F       		.byte	0x9f
 4269 00b6 00000000 		.4byte	0
 4270 00ba 00000000 		.4byte	0
 4271              	.LLST6:
 4272 00be 08000000 		.4byte	.LVL13
 4273 00c2 1D000000 		.4byte	.LVL15-1
 4274 00c6 0100     		.2byte	0x1
 4275 00c8 50       		.byte	0x50
 4276 00c9 00000000 		.4byte	0
 4277 00cd 00000000 		.4byte	0
 4278              	.LLST7:
 4279 00d1 00000000 		.4byte	.LVL16
 4280 00d5 14000000 		.4byte	.LVL18
 4281 00d9 0100     		.2byte	0x1
 4282 00db 50       		.byte	0x50
 4283 00dc 14000000 		.4byte	.LVL18
 4284 00e0 16000000 		.4byte	.LVL19
 4285 00e4 0400     		.2byte	0x4
 4286 00e6 F3       		.byte	0xf3
 4287 00e7 01       		.uleb128 0x1
 4288 00e8 50       		.byte	0x50
 4289 00e9 9F       		.byte	0x9f
 4290 00ea 16000000 		.4byte	.LVL19
 4291 00ee 1B000000 		.4byte	.LVL20-1
 4292 00f2 0100     		.2byte	0x1
 4293 00f4 50       		.byte	0x50
 4294 00f5 1B000000 		.4byte	.LVL20-1
 4295 00f9 78000000 		.4byte	.LVL28
 4296 00fd 0100     		.2byte	0x1
 4297 00ff 54       		.byte	0x54
 4298 0100 78000000 		.4byte	.LVL28
 4299 0104 7C000000 		.4byte	.LVL29
 4300 0108 0300     		.2byte	0x3
 4301 010a 74       		.byte	0x74
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 135


 4302 010b 18       		.sleb128 24
 4303 010c 9F       		.byte	0x9f
 4304 010d 7C000000 		.4byte	.LVL29
 4305 0111 A4000000 		.4byte	.LFE6
 4306 0115 0400     		.2byte	0x4
 4307 0117 F3       		.byte	0xf3
 4308 0118 01       		.uleb128 0x1
 4309 0119 50       		.byte	0x50
 4310 011a 9F       		.byte	0x9f
 4311 011b 00000000 		.4byte	0
 4312 011f 00000000 		.4byte	0
 4313              	.LLST8:
 4314 0123 32000000 		.4byte	.LVL22
 4315 0127 38000000 		.4byte	.LVL23
 4316 012b 0100     		.2byte	0x1
 4317 012d 53       		.byte	0x53
 4318 012e 38000000 		.4byte	.LVL23
 4319 0132 3C000000 		.4byte	.LVL24
 4320 0136 0700     		.2byte	0x7
 4321 0138 0C       		.byte	0xc
 4322 0139 0C0F0340 		.4byte	0x40030f0c
 4323 013d 06       		.byte	0x6
 4324 013e 9F       		.byte	0x9f
 4325 013f 00000000 		.4byte	0
 4326 0143 00000000 		.4byte	0
 4327              	.LLST9:
 4328 0147 12000000 		.4byte	.LVL17
 4329 014b 14000000 		.4byte	.LVL18
 4330 014f 0200     		.2byte	0x2
 4331 0151 30       		.byte	0x30
 4332 0152 9F       		.byte	0x9f
 4333 0153 00000000 		.4byte	0
 4334 0157 00000000 		.4byte	0
 4335              	.LLST10:
 4336 015b 00000000 		.4byte	.LVL31
 4337 015f 07000000 		.4byte	.LVL32-1
 4338 0163 0100     		.2byte	0x1
 4339 0165 50       		.byte	0x50
 4340 0166 07000000 		.4byte	.LVL32-1
 4341 016a 0C000000 		.4byte	.LVL33
 4342 016e 0100     		.2byte	0x1
 4343 0170 54       		.byte	0x54
 4344 0171 0C000000 		.4byte	.LVL33
 4345 0175 24000000 		.4byte	.LFE7
 4346 0179 0400     		.2byte	0x4
 4347 017b F3       		.byte	0xf3
 4348 017c 01       		.uleb128 0x1
 4349 017d 50       		.byte	0x50
 4350 017e 9F       		.byte	0x9f
 4351 017f 00000000 		.4byte	0
 4352 0183 00000000 		.4byte	0
 4353              	.LLST11:
 4354 0187 08000000 		.4byte	.LVL32
 4355 018b 1B000000 		.4byte	.LVL34-1
 4356 018f 0100     		.2byte	0x1
 4357 0191 50       		.byte	0x50
 4358 0192 00000000 		.4byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 136


 4359 0196 00000000 		.4byte	0
 4360              	.LLST12:
 4361 019a 00000000 		.4byte	.LVL35
 4362 019e 04000000 		.4byte	.LVL36
 4363 01a2 0100     		.2byte	0x1
 4364 01a4 50       		.byte	0x50
 4365 01a5 04000000 		.4byte	.LVL36
 4366 01a9 14000000 		.4byte	.LFE8
 4367 01ad 0100     		.2byte	0x1
 4368 01af 52       		.byte	0x52
 4369 01b0 00000000 		.4byte	0
 4370 01b4 00000000 		.4byte	0
 4371              	.LLST13:
 4372 01b8 0A000000 		.4byte	.LVL38
 4373 01bc 0C000000 		.4byte	.LVL39
 4374 01c0 0500     		.2byte	0x5
 4375 01c2 73       		.byte	0x73
 4376 01c3 00       		.sleb128 0
 4377 01c4 49       		.byte	0x49
 4378 01c5 1A       		.byte	0x1a
 4379 01c6 9F       		.byte	0x9f
 4380 01c7 0C000000 		.4byte	.LVL39
 4381 01cb 14000000 		.4byte	.LFE8
 4382 01cf 0100     		.2byte	0x1
 4383 01d1 50       		.byte	0x50
 4384 01d2 00000000 		.4byte	0
 4385 01d6 00000000 		.4byte	0
 4386              	.LLST14:
 4387 01da 00000000 		.4byte	.LVL42
 4388 01de 0A000000 		.4byte	.LVL45
 4389 01e2 0100     		.2byte	0x1
 4390 01e4 50       		.byte	0x50
 4391 01e5 0A000000 		.4byte	.LVL45
 4392 01e9 14000000 		.4byte	.LFE11
 4393 01ed 0400     		.2byte	0x4
 4394 01ef F3       		.byte	0xf3
 4395 01f0 01       		.uleb128 0x1
 4396 01f1 50       		.byte	0x50
 4397 01f2 9F       		.byte	0x9f
 4398 01f3 00000000 		.4byte	0
 4399 01f7 00000000 		.4byte	0
 4400              	.LLST15:
 4401 01fb 04000000 		.4byte	.LVL43
 4402 01ff 06000000 		.4byte	.LVL44
 4403 0203 0200     		.2byte	0x2
 4404 0205 30       		.byte	0x30
 4405 0206 9F       		.byte	0x9f
 4406 0207 00000000 		.4byte	0
 4407 020b 00000000 		.4byte	0
 4408              	.LLST16:
 4409 020f 00000000 		.4byte	.LVL47
 4410 0213 0E000000 		.4byte	.LVL50
 4411 0217 0100     		.2byte	0x1
 4412 0219 50       		.byte	0x50
 4413 021a 0E000000 		.4byte	.LVL50
 4414 021e 14000000 		.4byte	.LFE12
 4415 0222 0400     		.2byte	0x4
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 137


 4416 0224 F3       		.byte	0xf3
 4417 0225 01       		.uleb128 0x1
 4418 0226 50       		.byte	0x50
 4419 0227 9F       		.byte	0x9f
 4420 0228 00000000 		.4byte	0
 4421 022c 00000000 		.4byte	0
 4422              	.LLST17:
 4423 0230 04000000 		.4byte	.LVL48
 4424 0234 06000000 		.4byte	.LVL49
 4425 0238 0200     		.2byte	0x2
 4426 023a 30       		.byte	0x30
 4427 023b 9F       		.byte	0x9f
 4428 023c 00000000 		.4byte	0
 4429 0240 00000000 		.4byte	0
 4430              	.LLST18:
 4431 0244 00000000 		.4byte	.LVL51
 4432 0248 0A000000 		.4byte	.LVL54
 4433 024c 0100     		.2byte	0x1
 4434 024e 50       		.byte	0x50
 4435 024f 0A000000 		.4byte	.LVL54
 4436 0253 18000000 		.4byte	.LFE13
 4437 0257 0400     		.2byte	0x4
 4438 0259 F3       		.byte	0xf3
 4439 025a 01       		.uleb128 0x1
 4440 025b 50       		.byte	0x50
 4441 025c 9F       		.byte	0x9f
 4442 025d 00000000 		.4byte	0
 4443 0261 00000000 		.4byte	0
 4444              	.LLST19:
 4445 0265 04000000 		.4byte	.LVL52
 4446 0269 06000000 		.4byte	.LVL53
 4447 026d 0200     		.2byte	0x2
 4448 026f 30       		.byte	0x30
 4449 0270 9F       		.byte	0x9f
 4450 0271 00000000 		.4byte	0
 4451 0275 00000000 		.4byte	0
 4452              	.LLST20:
 4453 0279 00000000 		.4byte	.LVL56
 4454 027d 0A000000 		.4byte	.LVL59
 4455 0281 0100     		.2byte	0x1
 4456 0283 50       		.byte	0x50
 4457 0284 0A000000 		.4byte	.LVL59
 4458 0288 18000000 		.4byte	.LFE14
 4459 028c 0400     		.2byte	0x4
 4460 028e F3       		.byte	0xf3
 4461 028f 01       		.uleb128 0x1
 4462 0290 50       		.byte	0x50
 4463 0291 9F       		.byte	0x9f
 4464 0292 00000000 		.4byte	0
 4465 0296 00000000 		.4byte	0
 4466              	.LLST21:
 4467 029a 04000000 		.4byte	.LVL57
 4468 029e 06000000 		.4byte	.LVL58
 4469 02a2 0200     		.2byte	0x2
 4470 02a4 30       		.byte	0x30
 4471 02a5 9F       		.byte	0x9f
 4472 02a6 00000000 		.4byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 138


 4473 02aa 00000000 		.4byte	0
 4474              	.LLST22:
 4475 02ae 00000000 		.4byte	.LVL60
 4476 02b2 17000000 		.4byte	.LVL65-1
 4477 02b6 0100     		.2byte	0x1
 4478 02b8 50       		.byte	0x50
 4479 02b9 17000000 		.4byte	.LVL65-1
 4480 02bd 44000000 		.4byte	.LFE15
 4481 02c1 0400     		.2byte	0x4
 4482 02c3 F3       		.byte	0xf3
 4483 02c4 01       		.uleb128 0x1
 4484 02c5 50       		.byte	0x50
 4485 02c6 9F       		.byte	0x9f
 4486 02c7 00000000 		.4byte	0
 4487 02cb 00000000 		.4byte	0
 4488              	.LLST23:
 4489 02cf 00000000 		.4byte	.LVL60
 4490 02d3 17000000 		.4byte	.LVL65-1
 4491 02d7 0100     		.2byte	0x1
 4492 02d9 51       		.byte	0x51
 4493 02da 17000000 		.4byte	.LVL65-1
 4494 02de 44000000 		.4byte	.LFE15
 4495 02e2 0400     		.2byte	0x4
 4496 02e4 F3       		.byte	0xf3
 4497 02e5 01       		.uleb128 0x1
 4498 02e6 51       		.byte	0x51
 4499 02e7 9F       		.byte	0x9f
 4500 02e8 00000000 		.4byte	0
 4501 02ec 00000000 		.4byte	0
 4502              	.LLST24:
 4503 02f0 30000000 		.4byte	.LVL66
 4504 02f4 3D000000 		.4byte	.LVL69-1
 4505 02f8 0100     		.2byte	0x1
 4506 02fa 50       		.byte	0x50
 4507 02fb 00000000 		.4byte	0
 4508 02ff 00000000 		.4byte	0
 4509              	.LLST25:
 4510 0303 30000000 		.4byte	.LVL66
 4511 0307 3E000000 		.4byte	.LVL70
 4512 030b 0100     		.2byte	0x1
 4513 030d 55       		.byte	0x55
 4514 030e 00000000 		.4byte	0
 4515 0312 00000000 		.4byte	0
 4516              	.LLST26:
 4517 0316 36000000 		.4byte	.LVL67
 4518 031a 38000000 		.4byte	.LVL68
 4519 031e 0100     		.2byte	0x1
 4520 0320 53       		.byte	0x53
 4521 0321 38000000 		.4byte	.LVL68
 4522 0325 3D000000 		.4byte	.LVL69-1
 4523 0329 0100     		.2byte	0x1
 4524 032b 51       		.byte	0x51
 4525 032c 00000000 		.4byte	0
 4526 0330 00000000 		.4byte	0
 4527              	.LLST27:
 4528 0334 0A000000 		.4byte	.LVL61
 4529 0338 0C000000 		.4byte	.LVL62
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 139


 4530 033c 0200     		.2byte	0x2
 4531 033e 30       		.byte	0x30
 4532 033f 9F       		.byte	0x9f
 4533 0340 00000000 		.4byte	0
 4534 0344 00000000 		.4byte	0
 4535              	.LLST28:
 4536 0348 10000000 		.4byte	.LVL63
 4537 034c 12000000 		.4byte	.LVL64
 4538 0350 0200     		.2byte	0x2
 4539 0352 30       		.byte	0x30
 4540 0353 9F       		.byte	0x9f
 4541 0354 00000000 		.4byte	0
 4542 0358 00000000 		.4byte	0
 4543              	.LLST29:
 4544 035c 00000000 		.4byte	.LVL71
 4545 0360 20000000 		.4byte	.LVL76
 4546 0364 0100     		.2byte	0x1
 4547 0366 50       		.byte	0x50
 4548 0367 20000000 		.4byte	.LVL76
 4549 036b 28000000 		.4byte	.LFE16
 4550 036f 0400     		.2byte	0x4
 4551 0371 F3       		.byte	0xf3
 4552 0372 01       		.uleb128 0x1
 4553 0373 50       		.byte	0x50
 4554 0374 9F       		.byte	0x9f
 4555 0375 00000000 		.4byte	0
 4556 0379 00000000 		.4byte	0
 4557              	.LLST30:
 4558 037d 12000000 		.4byte	.LVL74
 4559 0381 1E000000 		.4byte	.LVL75
 4560 0385 0F00     		.2byte	0xf
 4561 0387 72       		.byte	0x72
 4562 0388 00       		.sleb128 0
 4563 0389 70       		.byte	0x70
 4564 038a 00       		.sleb128 0
 4565 038b 33       		.byte	0x33
 4566 038c 1A       		.byte	0x1a
 4567 038d 08       		.byte	0x8
 4568 038e FF       		.byte	0xff
 4569 038f 1A       		.byte	0x1a
 4570 0390 33       		.byte	0x33
 4571 0391 24       		.byte	0x24
 4572 0392 23       		.byte	0x23
 4573 0393 06       		.uleb128 0x6
 4574 0394 25       		.byte	0x25
 4575 0395 9F       		.byte	0x9f
 4576 0396 00000000 		.4byte	0
 4577 039a 00000000 		.4byte	0
 4578              	.LLST31:
 4579 039e 04000000 		.4byte	.LVL72
 4580 03a2 06000000 		.4byte	.LVL73
 4581 03a6 0200     		.2byte	0x2
 4582 03a8 30       		.byte	0x30
 4583 03a9 9F       		.byte	0x9f
 4584 03aa 00000000 		.4byte	0
 4585 03ae 00000000 		.4byte	0
 4586              	.LLST32:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 140


 4587 03b2 00000000 		.4byte	.LVL77
 4588 03b6 04000000 		.4byte	.LVL78
 4589 03ba 0100     		.2byte	0x1
 4590 03bc 50       		.byte	0x50
 4591 03bd 04000000 		.4byte	.LVL78
 4592 03c1 14000000 		.4byte	.LFE17
 4593 03c5 0400     		.2byte	0x4
 4594 03c7 F3       		.byte	0xf3
 4595 03c8 01       		.uleb128 0x1
 4596 03c9 50       		.byte	0x50
 4597 03ca 9F       		.byte	0x9f
 4598 03cb 00000000 		.4byte	0
 4599 03cf 00000000 		.4byte	0
 4600              	.LLST33:
 4601 03d3 00000000 		.4byte	.LVL79
 4602 03d7 06000000 		.4byte	.LVL80
 4603 03db 0100     		.2byte	0x1
 4604 03dd 50       		.byte	0x50
 4605 03de 06000000 		.4byte	.LVL80
 4606 03e2 18000000 		.4byte	.LFE18
 4607 03e6 0400     		.2byte	0x4
 4608 03e8 F3       		.byte	0xf3
 4609 03e9 01       		.uleb128 0x1
 4610 03ea 50       		.byte	0x50
 4611 03eb 9F       		.byte	0x9f
 4612 03ec 00000000 		.4byte	0
 4613 03f0 00000000 		.4byte	0
 4614              	.LLST34:
 4615 03f4 00000000 		.4byte	.LVL81
 4616 03f8 04000000 		.4byte	.LVL82
 4617 03fc 0100     		.2byte	0x1
 4618 03fe 50       		.byte	0x50
 4619 03ff 04000000 		.4byte	.LVL82
 4620 0403 14000000 		.4byte	.LFE19
 4621 0407 0400     		.2byte	0x4
 4622 0409 F3       		.byte	0xf3
 4623 040a 01       		.uleb128 0x1
 4624 040b 50       		.byte	0x50
 4625 040c 9F       		.byte	0x9f
 4626 040d 00000000 		.4byte	0
 4627 0411 00000000 		.4byte	0
 4628              	.LLST35:
 4629 0415 00000000 		.4byte	.LVL83
 4630 0419 04000000 		.4byte	.LVL84
 4631 041d 0100     		.2byte	0x1
 4632 041f 50       		.byte	0x50
 4633 0420 04000000 		.4byte	.LVL84
 4634 0424 14000000 		.4byte	.LFE20
 4635 0428 0400     		.2byte	0x4
 4636 042a F3       		.byte	0xf3
 4637 042b 01       		.uleb128 0x1
 4638 042c 50       		.byte	0x50
 4639 042d 9F       		.byte	0x9f
 4640 042e 00000000 		.4byte	0
 4641 0432 00000000 		.4byte	0
 4642              	.LLST36:
 4643 0436 00000000 		.4byte	.LVL85
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 141


 4644 043a 04000000 		.4byte	.LVL86
 4645 043e 0100     		.2byte	0x1
 4646 0440 50       		.byte	0x50
 4647 0441 04000000 		.4byte	.LVL86
 4648 0445 14000000 		.4byte	.LFE21
 4649 0449 0400     		.2byte	0x4
 4650 044b F3       		.byte	0xf3
 4651 044c 01       		.uleb128 0x1
 4652 044d 50       		.byte	0x50
 4653 044e 9F       		.byte	0x9f
 4654 044f 00000000 		.4byte	0
 4655 0453 00000000 		.4byte	0
 4656              	.LLST37:
 4657 0457 00000000 		.4byte	.LVL88
 4658 045b 10000000 		.4byte	.LVL89
 4659 045f 0100     		.2byte	0x1
 4660 0461 50       		.byte	0x50
 4661 0462 10000000 		.4byte	.LVL89
 4662 0466 2C000000 		.4byte	.LVL92
 4663 046a 0100     		.2byte	0x1
 4664 046c 54       		.byte	0x54
 4665 046d 36000000 		.4byte	.LVL94
 4666 0471 48000000 		.4byte	.LFE24
 4667 0475 0100     		.2byte	0x1
 4668 0477 50       		.byte	0x50
 4669 0478 00000000 		.4byte	0
 4670 047c 00000000 		.4byte	0
 4671              	.LLST38:
 4672 0480 00000000 		.4byte	.LVL95
 4673 0484 08000000 		.4byte	.LVL96
 4674 0488 0100     		.2byte	0x1
 4675 048a 50       		.byte	0x50
 4676 048b 08000000 		.4byte	.LVL96
 4677 048f 14000000 		.4byte	.LFE25
 4678 0493 0400     		.2byte	0x4
 4679 0495 F3       		.byte	0xf3
 4680 0496 01       		.uleb128 0x1
 4681 0497 50       		.byte	0x50
 4682 0498 9F       		.byte	0x9f
 4683 0499 00000000 		.4byte	0
 4684 049d 00000000 		.4byte	0
 4685              	.LLST39:
 4686 04a1 00000000 		.4byte	.LVL98
 4687 04a5 0C000000 		.4byte	.LVL99
 4688 04a9 0100     		.2byte	0x1
 4689 04ab 50       		.byte	0x50
 4690 04ac 0C000000 		.4byte	.LVL99
 4691 04b0 0E000000 		.4byte	.LVL100
 4692 04b4 0100     		.2byte	0x1
 4693 04b6 54       		.byte	0x54
 4694 04b7 0E000000 		.4byte	.LVL100
 4695 04bb 1A000000 		.4byte	.LVL101
 4696 04bf 0400     		.2byte	0x4
 4697 04c1 F3       		.byte	0xf3
 4698 04c2 01       		.uleb128 0x1
 4699 04c3 50       		.byte	0x50
 4700 04c4 9F       		.byte	0x9f
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 142


 4701 04c5 1A000000 		.4byte	.LVL101
 4702 04c9 20000000 		.4byte	.LVL102
 4703 04cd 0100     		.2byte	0x1
 4704 04cf 50       		.byte	0x50
 4705 04d0 20000000 		.4byte	.LVL102
 4706 04d4 54000000 		.4byte	.LFE26
 4707 04d8 0100     		.2byte	0x1
 4708 04da 54       		.byte	0x54
 4709 04db 00000000 		.4byte	0
 4710 04df 00000000 		.4byte	0
 4711              	.LLST40:
 4712 04e3 0A000000 		.4byte	.LVL105
 4713 04e7 12000000 		.4byte	.LVL106
 4714 04eb 0200     		.2byte	0x2
 4715 04ed 30       		.byte	0x30
 4716 04ee 9F       		.byte	0x9f
 4717 04ef 12000000 		.4byte	.LVL106
 4718 04f3 14000000 		.4byte	.LVL107
 4719 04f7 0200     		.2byte	0x2
 4720 04f9 31       		.byte	0x31
 4721 04fa 9F       		.byte	0x9f
 4722 04fb 14000000 		.4byte	.LVL107
 4723 04ff 16000000 		.4byte	.LVL108
 4724 0503 0200     		.2byte	0x2
 4725 0505 32       		.byte	0x32
 4726 0506 9F       		.byte	0x9f
 4727 0507 16000000 		.4byte	.LVL108
 4728 050b 18000000 		.4byte	.LVL109
 4729 050f 0200     		.2byte	0x2
 4730 0511 33       		.byte	0x33
 4731 0512 9F       		.byte	0x9f
 4732 0513 18000000 		.4byte	.LVL109
 4733 0517 1A000000 		.4byte	.LVL110
 4734 051b 0200     		.2byte	0x2
 4735 051d 34       		.byte	0x34
 4736 051e 9F       		.byte	0x9f
 4737 051f 1A000000 		.4byte	.LVL110
 4738 0523 2E000000 		.4byte	.LVL114
 4739 0527 0200     		.2byte	0x2
 4740 0529 35       		.byte	0x35
 4741 052a 9F       		.byte	0x9f
 4742 052b 00000000 		.4byte	0
 4743 052f 00000000 		.4byte	0
 4744              	.LLST41:
 4745 0533 1A000000 		.4byte	.LVL110
 4746 0537 1C000000 		.4byte	.LVL111
 4747 053b 0600     		.2byte	0x6
 4748 053d 03       		.byte	0x3
 4749 053e 00000000 		.4byte	CySysTickServiceCallbacks
 4750 0542 9F       		.byte	0x9f
 4751 0543 00000000 		.4byte	0
 4752 0547 00000000 		.4byte	0
 4753              	.LLST42:
 4754 054b 1A000000 		.4byte	.LVL110
 4755 054f 1C000000 		.4byte	.LVL111
 4756 0553 0200     		.2byte	0x2
 4757 0555 3F       		.byte	0x3f
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 143


 4758 0556 9F       		.byte	0x9f
 4759 0557 00000000 		.4byte	0
 4760 055b 00000000 		.4byte	0
 4761              	.LLST43:
 4762 055f 1A000000 		.4byte	.LVL110
 4763 0563 1C000000 		.4byte	.LVL111
 4764 0567 0200     		.2byte	0x2
 4765 0569 73       		.byte	0x73
 4766 056a 00       		.sleb128 0
 4767 056b 00000000 		.4byte	0
 4768 056f 00000000 		.4byte	0
 4769              	.LLST44:
 4770 0573 1A000000 		.4byte	.LVL110
 4771 0577 32000000 		.4byte	.LVL115
 4772 057b 0400     		.2byte	0x4
 4773 057d 40       		.byte	0x40
 4774 057e 49       		.byte	0x49
 4775 057f 24       		.byte	0x24
 4776 0580 9F       		.byte	0x9f
 4777 0581 00000000 		.4byte	0
 4778 0585 00000000 		.4byte	0
 4779              	.LLST45:
 4780 0589 26000000 		.4byte	.LVL112
 4781 058d 2A000000 		.4byte	.LVL113
 4782 0591 0100     		.2byte	0x1
 4783 0593 50       		.byte	0x50
 4784 0594 00000000 		.4byte	0
 4785 0598 00000000 		.4byte	0
 4786              	.LLST46:
 4787 059c 00000000 		.4byte	.LVL116
 4788 05a0 0C000000 		.4byte	.LVL117
 4789 05a4 0200     		.2byte	0x2
 4790 05a6 30       		.byte	0x30
 4791 05a7 9F       		.byte	0x9f
 4792 05a8 0C000000 		.4byte	.LVL117
 4793 05ac 10000000 		.4byte	.LVL118
 4794 05b0 0200     		.2byte	0x2
 4795 05b2 31       		.byte	0x31
 4796 05b3 9F       		.byte	0x9f
 4797 05b4 10000000 		.4byte	.LVL118
 4798 05b8 12000000 		.4byte	.LVL119
 4799 05bc 0200     		.2byte	0x2
 4800 05be 32       		.byte	0x32
 4801 05bf 9F       		.byte	0x9f
 4802 05c0 12000000 		.4byte	.LVL119
 4803 05c4 14000000 		.4byte	.LVL120
 4804 05c8 0200     		.2byte	0x2
 4805 05ca 33       		.byte	0x33
 4806 05cb 9F       		.byte	0x9f
 4807 05cc 14000000 		.4byte	.LVL120
 4808 05d0 44000000 		.4byte	.LFE28
 4809 05d4 0200     		.2byte	0x2
 4810 05d6 35       		.byte	0x35
 4811 05d7 9F       		.byte	0x9f
 4812 05d8 00000000 		.4byte	0
 4813 05dc 00000000 		.4byte	0
 4814              	.LLST47:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 144


 4815 05e0 14000000 		.4byte	.LVL120
 4816 05e4 1A000000 		.4byte	.LVL122
 4817 05e8 0600     		.2byte	0x6
 4818 05ea 03       		.byte	0x3
 4819 05eb 00000000 		.4byte	CySysTickServiceCallbacks
 4820 05ef 9F       		.byte	0x9f
 4821 05f0 00000000 		.4byte	0
 4822 05f4 00000000 		.4byte	0
 4823              	.LLST48:
 4824 05f8 14000000 		.4byte	.LVL120
 4825 05fc 1A000000 		.4byte	.LVL122
 4826 0600 0200     		.2byte	0x2
 4827 0602 3F       		.byte	0x3f
 4828 0603 9F       		.byte	0x9f
 4829 0604 00000000 		.4byte	0
 4830 0608 00000000 		.4byte	0
 4831              	.LLST49:
 4832 060c 14000000 		.4byte	.LVL120
 4833 0610 16000000 		.4byte	.LVL121
 4834 0614 0500     		.2byte	0x5
 4835 0616 0C       		.byte	0xc
 4836 0617 3C000020 		.4byte	0x2000003c
 4837 061b 16000000 		.4byte	.LVL121
 4838 061f 1A000000 		.4byte	.LVL122
 4839 0623 0200     		.2byte	0x2
 4840 0625 73       		.byte	0x73
 4841 0626 00       		.sleb128 0
 4842 0627 00000000 		.4byte	0
 4843 062b 00000000 		.4byte	0
 4844              	.LLST50:
 4845 062f 22000000 		.4byte	.LVL123
 4846 0633 26000000 		.4byte	.LVL124
 4847 0637 0100     		.2byte	0x1
 4848 0639 50       		.byte	0x50
 4849 063a 00000000 		.4byte	0
 4850 063e 00000000 		.4byte	0
 4851              	.LLST51:
 4852 0642 00000000 		.4byte	.LVL125
 4853 0646 04000000 		.4byte	.LVL126
 4854 064a 0100     		.2byte	0x1
 4855 064c 50       		.byte	0x50
 4856 064d 04000000 		.4byte	.LVL126
 4857 0651 10000000 		.4byte	.LFE33
 4858 0655 0400     		.2byte	0x4
 4859 0657 F3       		.byte	0xf3
 4860 0658 01       		.uleb128 0x1
 4861 0659 50       		.byte	0x50
 4862 065a 9F       		.byte	0x9f
 4863 065b 00000000 		.4byte	0
 4864 065f 00000000 		.4byte	0
 4865              	.LLST52:
 4866 0663 00000000 		.4byte	.LVL127
 4867 0667 06000000 		.4byte	.LVL128
 4868 066b 0100     		.2byte	0x1
 4869 066d 50       		.byte	0x50
 4870 066e 06000000 		.4byte	.LVL128
 4871 0672 10000000 		.4byte	.LFE38
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 145


 4872 0676 0400     		.2byte	0x4
 4873 0678 F3       		.byte	0xf3
 4874 0679 01       		.uleb128 0x1
 4875 067a 50       		.byte	0x50
 4876 067b 9F       		.byte	0x9f
 4877 067c 00000000 		.4byte	0
 4878 0680 00000000 		.4byte	0
 4879              	.LLST53:
 4880 0684 00000000 		.4byte	.LVL129
 4881 0688 04000000 		.4byte	.LVL130
 4882 068c 0100     		.2byte	0x1
 4883 068e 50       		.byte	0x50
 4884 068f 04000000 		.4byte	.LVL130
 4885 0693 0C000000 		.4byte	.LFE39
 4886 0697 0400     		.2byte	0x4
 4887 0699 F3       		.byte	0xf3
 4888 069a 01       		.uleb128 0x1
 4889 069b 50       		.byte	0x50
 4890 069c 9F       		.byte	0x9f
 4891 069d 00000000 		.4byte	0
 4892 06a1 00000000 		.4byte	0
 4893              		.section	.debug_aranges,"",%progbits
 4894 0000 64010000 		.4byte	0x164
 4895 0004 0200     		.2byte	0x2
 4896 0006 00000000 		.4byte	.Ldebug_info0
 4897 000a 04       		.byte	0x4
 4898 000b 00       		.byte	0
 4899 000c 0000     		.2byte	0
 4900 000e 0000     		.2byte	0
 4901 0010 00000000 		.4byte	.LFB40
 4902 0014 28000000 		.4byte	.LFE40-.LFB40
 4903 0018 00000000 		.4byte	.LFB0
 4904 001c 14000000 		.4byte	.LFE0-.LFB0
 4905 0020 00000000 		.4byte	.LFB1
 4906 0024 10000000 		.4byte	.LFE1-.LFB1
 4907 0028 00000000 		.4byte	.LFB2
 4908 002c 20000000 		.4byte	.LFE2-.LFB2
 4909 0030 00000000 		.4byte	.LFB3
 4910 0034 34000000 		.4byte	.LFE3-.LFB3
 4911 0038 00000000 		.4byte	.LFB4
 4912 003c 18000000 		.4byte	.LFE4-.LFB4
 4913 0040 00000000 		.4byte	.LFB5
 4914 0044 24000000 		.4byte	.LFE5-.LFB5
 4915 0048 00000000 		.4byte	.LFB6
 4916 004c A4000000 		.4byte	.LFE6-.LFB6
 4917 0050 00000000 		.4byte	.LFB7
 4918 0054 24000000 		.4byte	.LFE7-.LFB7
 4919 0058 00000000 		.4byte	.LFB8
 4920 005c 14000000 		.4byte	.LFE8-.LFB8
 4921 0060 00000000 		.4byte	.LFB9
 4922 0064 10000000 		.4byte	.LFE9-.LFB9
 4923 0068 00000000 		.4byte	.LFB10
 4924 006c 0C000000 		.4byte	.LFE10-.LFB10
 4925 0070 00000000 		.4byte	.LFB11
 4926 0074 14000000 		.4byte	.LFE11-.LFB11
 4927 0078 00000000 		.4byte	.LFB12
 4928 007c 14000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 146


 4929 0080 00000000 		.4byte	.LFB13
 4930 0084 18000000 		.4byte	.LFE13-.LFB13
 4931 0088 00000000 		.4byte	.LFB14
 4932 008c 18000000 		.4byte	.LFE14-.LFB14
 4933 0090 00000000 		.4byte	.LFB15
 4934 0094 44000000 		.4byte	.LFE15-.LFB15
 4935 0098 00000000 		.4byte	.LFB16
 4936 009c 28000000 		.4byte	.LFE16-.LFB16
 4937 00a0 00000000 		.4byte	.LFB17
 4938 00a4 14000000 		.4byte	.LFE17-.LFB17
 4939 00a8 00000000 		.4byte	.LFB18
 4940 00ac 18000000 		.4byte	.LFE18-.LFB18
 4941 00b0 00000000 		.4byte	.LFB19
 4942 00b4 14000000 		.4byte	.LFE19-.LFB19
 4943 00b8 00000000 		.4byte	.LFB20
 4944 00bc 14000000 		.4byte	.LFE20-.LFB20
 4945 00c0 00000000 		.4byte	.LFB21
 4946 00c4 14000000 		.4byte	.LFE21-.LFB21
 4947 00c8 00000000 		.4byte	.LFB22
 4948 00cc 04000000 		.4byte	.LFE22-.LFB22
 4949 00d0 00000000 		.4byte	.LFB23
 4950 00d4 18000000 		.4byte	.LFE23-.LFB23
 4951 00d8 00000000 		.4byte	.LFB24
 4952 00dc 48000000 		.4byte	.LFE24-.LFB24
 4953 00e0 00000000 		.4byte	.LFB25
 4954 00e4 14000000 		.4byte	.LFE25-.LFB25
 4955 00e8 00000000 		.4byte	.LFB26
 4956 00ec 54000000 		.4byte	.LFE26-.LFB26
 4957 00f0 00000000 		.4byte	.LFB27
 4958 00f4 64000000 		.4byte	.LFE27-.LFB27
 4959 00f8 00000000 		.4byte	.LFB28
 4960 00fc 44000000 		.4byte	.LFE28-.LFB28
 4961 0100 00000000 		.4byte	.LFB29
 4962 0104 18000000 		.4byte	.LFE29-.LFB29
 4963 0108 00000000 		.4byte	.LFB30
 4964 010c 10000000 		.4byte	.LFE30-.LFB30
 4965 0110 00000000 		.4byte	.LFB31
 4966 0114 10000000 		.4byte	.LFE31-.LFB31
 4967 0118 00000000 		.4byte	.LFB32
 4968 011c 10000000 		.4byte	.LFE32-.LFB32
 4969 0120 00000000 		.4byte	.LFB33
 4970 0124 10000000 		.4byte	.LFE33-.LFB33
 4971 0128 00000000 		.4byte	.LFB34
 4972 012c 10000000 		.4byte	.LFE34-.LFB34
 4973 0130 00000000 		.4byte	.LFB35
 4974 0134 10000000 		.4byte	.LFE35-.LFB35
 4975 0138 00000000 		.4byte	.LFB36
 4976 013c 10000000 		.4byte	.LFE36-.LFB36
 4977 0140 00000000 		.4byte	.LFB37
 4978 0144 0C000000 		.4byte	.LFE37-.LFB37
 4979 0148 00000000 		.4byte	.LFB38
 4980 014c 10000000 		.4byte	.LFE38-.LFB38
 4981 0150 00000000 		.4byte	.LFB39
 4982 0154 0C000000 		.4byte	.LFE39-.LFB39
 4983 0158 00000000 		.4byte	.LFB41
 4984 015c 74000000 		.4byte	.LFE41-.LFB41
 4985 0160 00000000 		.4byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 147


 4986 0164 00000000 		.4byte	0
 4987              		.section	.debug_ranges,"",%progbits
 4988              	.Ldebug_ranges0:
 4989 0000 00000000 		.4byte	.LBB50
 4990 0004 02000000 		.4byte	.LBE50
 4991 0008 04000000 		.4byte	.LBB53
 4992 000c 06000000 		.4byte	.LBE53
 4993 0010 00000000 		.4byte	0
 4994 0014 00000000 		.4byte	0
 4995 0018 0C000000 		.4byte	.LBB73
 4996 001c 10000000 		.4byte	.LBE73
 4997 0020 1A000000 		.4byte	.LBB76
 4998 0024 1C000000 		.4byte	.LBE76
 4999 0028 00000000 		.4byte	0
 5000 002c 00000000 		.4byte	0
 5001 0030 32000000 		.4byte	.LBB81
 5002 0034 36000000 		.4byte	.LBE81
 5003 0038 36000000 		.4byte	.LBB88
 5004 003c 44000000 		.4byte	.LBE88
 5005 0040 00000000 		.4byte	0
 5006 0044 00000000 		.4byte	0
 5007 0048 32000000 		.4byte	.LBB83
 5008 004c 36000000 		.4byte	.LBE83
 5009 0050 36000000 		.4byte	.LBB86
 5010 0054 3C000000 		.4byte	.LBE86
 5011 0058 00000000 		.4byte	0
 5012 005c 00000000 		.4byte	0
 5013 0060 08000000 		.4byte	.LBB89
 5014 0064 0A000000 		.4byte	.LBE89
 5015 0068 14000000 		.4byte	.LBB93
 5016 006c 16000000 		.4byte	.LBE93
 5017 0070 18000000 		.4byte	.LBB94
 5018 0074 1A000000 		.4byte	.LBE94
 5019 0078 00000000 		.4byte	0
 5020 007c 00000000 		.4byte	0
 5021 0080 00000000 		.4byte	.LBB99
 5022 0084 04000000 		.4byte	.LBE99
 5023 0088 04000000 		.4byte	.LBB102
 5024 008c 0A000000 		.4byte	.LBE102
 5025 0090 00000000 		.4byte	0
 5026 0094 00000000 		.4byte	0
 5027 0098 00000000 		.4byte	.LFB40
 5028 009c 28000000 		.4byte	.LFE40
 5029 00a0 00000000 		.4byte	.LFB0
 5030 00a4 14000000 		.4byte	.LFE0
 5031 00a8 00000000 		.4byte	.LFB1
 5032 00ac 10000000 		.4byte	.LFE1
 5033 00b0 00000000 		.4byte	.LFB2
 5034 00b4 20000000 		.4byte	.LFE2
 5035 00b8 00000000 		.4byte	.LFB3
 5036 00bc 34000000 		.4byte	.LFE3
 5037 00c0 00000000 		.4byte	.LFB4
 5038 00c4 18000000 		.4byte	.LFE4
 5039 00c8 00000000 		.4byte	.LFB5
 5040 00cc 24000000 		.4byte	.LFE5
 5041 00d0 00000000 		.4byte	.LFB6
 5042 00d4 A4000000 		.4byte	.LFE6
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 148


 5043 00d8 00000000 		.4byte	.LFB7
 5044 00dc 24000000 		.4byte	.LFE7
 5045 00e0 00000000 		.4byte	.LFB8
 5046 00e4 14000000 		.4byte	.LFE8
 5047 00e8 00000000 		.4byte	.LFB9
 5048 00ec 10000000 		.4byte	.LFE9
 5049 00f0 00000000 		.4byte	.LFB10
 5050 00f4 0C000000 		.4byte	.LFE10
 5051 00f8 00000000 		.4byte	.LFB11
 5052 00fc 14000000 		.4byte	.LFE11
 5053 0100 00000000 		.4byte	.LFB12
 5054 0104 14000000 		.4byte	.LFE12
 5055 0108 00000000 		.4byte	.LFB13
 5056 010c 18000000 		.4byte	.LFE13
 5057 0110 00000000 		.4byte	.LFB14
 5058 0114 18000000 		.4byte	.LFE14
 5059 0118 00000000 		.4byte	.LFB15
 5060 011c 44000000 		.4byte	.LFE15
 5061 0120 00000000 		.4byte	.LFB16
 5062 0124 28000000 		.4byte	.LFE16
 5063 0128 00000000 		.4byte	.LFB17
 5064 012c 14000000 		.4byte	.LFE17
 5065 0130 00000000 		.4byte	.LFB18
 5066 0134 18000000 		.4byte	.LFE18
 5067 0138 00000000 		.4byte	.LFB19
 5068 013c 14000000 		.4byte	.LFE19
 5069 0140 00000000 		.4byte	.LFB20
 5070 0144 14000000 		.4byte	.LFE20
 5071 0148 00000000 		.4byte	.LFB21
 5072 014c 14000000 		.4byte	.LFE21
 5073 0150 00000000 		.4byte	.LFB22
 5074 0154 04000000 		.4byte	.LFE22
 5075 0158 00000000 		.4byte	.LFB23
 5076 015c 18000000 		.4byte	.LFE23
 5077 0160 00000000 		.4byte	.LFB24
 5078 0164 48000000 		.4byte	.LFE24
 5079 0168 00000000 		.4byte	.LFB25
 5080 016c 14000000 		.4byte	.LFE25
 5081 0170 00000000 		.4byte	.LFB26
 5082 0174 54000000 		.4byte	.LFE26
 5083 0178 00000000 		.4byte	.LFB27
 5084 017c 64000000 		.4byte	.LFE27
 5085 0180 00000000 		.4byte	.LFB28
 5086 0184 44000000 		.4byte	.LFE28
 5087 0188 00000000 		.4byte	.LFB29
 5088 018c 18000000 		.4byte	.LFE29
 5089 0190 00000000 		.4byte	.LFB30
 5090 0194 10000000 		.4byte	.LFE30
 5091 0198 00000000 		.4byte	.LFB31
 5092 019c 10000000 		.4byte	.LFE31
 5093 01a0 00000000 		.4byte	.LFB32
 5094 01a4 10000000 		.4byte	.LFE32
 5095 01a8 00000000 		.4byte	.LFB33
 5096 01ac 10000000 		.4byte	.LFE33
 5097 01b0 00000000 		.4byte	.LFB34
 5098 01b4 10000000 		.4byte	.LFE34
 5099 01b8 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 149


 5100 01bc 10000000 		.4byte	.LFE35
 5101 01c0 00000000 		.4byte	.LFB36
 5102 01c4 10000000 		.4byte	.LFE36
 5103 01c8 00000000 		.4byte	.LFB37
 5104 01cc 0C000000 		.4byte	.LFE37
 5105 01d0 00000000 		.4byte	.LFB38
 5106 01d4 10000000 		.4byte	.LFE38
 5107 01d8 00000000 		.4byte	.LFB39
 5108 01dc 0C000000 		.4byte	.LFE39
 5109 01e0 00000000 		.4byte	.LFB41
 5110 01e4 74000000 		.4byte	.LFE41
 5111 01e8 00000000 		.4byte	0
 5112 01ec 00000000 		.4byte	0
 5113              		.section	.debug_line,"",%progbits
 5114              	.Ldebug_line0:
 5115 0000 E9040000 		.section	.debug_str,"MS",%progbits,1
 5115      02004D00 
 5115      00000201 
 5115      FB0E0D00 
 5115      01010101 
 5116              	.LASF30:
 5117 0000 72616D56 		.ascii	"ramVectorTable\000"
 5117      6563746F 
 5117      72546162 
 5117      6C6500
 5118              	.LASF10:
 5119 000f 75696E74 		.ascii	"uint16\000"
 5119      313600
 5120              	.LASF52:
 5121 0016 696E7453 		.ascii	"intState\000"
 5121      74617465 
 5121      00
 5122              	.LASF37:
 5123 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5123      73436C6B 
 5123      57726974 
 5123      65486663 
 5123      6C6B4469 
 5124              	.LASF90:
 5125 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 5125      73436C6B 
 5125      50756D70 
 5125      436F6E66 
 5125      696700
 5126              	.LASF29:
 5127 004b 6F6C6449 		.ascii	"oldIsr\000"
 5127      737200
 5128              	.LASF80:
 5129 0052 72657456 		.ascii	"retVal\000"
 5129      616C00
 5130              	.LASF51:
 5131 0059 43794469 		.ascii	"CyDisableInts\000"
 5131      7361626C 
 5131      65496E74 
 5131      7300
 5132              	.LASF7:
 5133 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 150


 5133      206C6F6E 
 5133      6720756E 
 5133      7369676E 
 5133      65642069 
 5134              	.LASF89:
 5135 007e 43795379 		.ascii	"CySysTickInitVar\000"
 5135      73546963 
 5135      6B496E69 
 5135      74566172 
 5135      00
 5136              	.LASF53:
 5137 008f 4379456E 		.ascii	"CyEnableInts\000"
 5137      61626C65 
 5137      496E7473 
 5137      00
 5138              	.LASF67:
 5139 009c 4379536F 		.ascii	"CySoftwareReset\000"
 5139      66747761 
 5139      72655265 
 5139      73657400 
 5140              	.LASF21:
 5141 00ac 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5141      73546963 
 5141      6B456E61 
 5141      626C6549 
 5141      6E746572 
 5142              	.LASF63:
 5143 00c5 4379496E 		.ascii	"CyIntGetState\000"
 5143      74476574 
 5143      53746174 
 5143      6500
 5144              	.LASF94:
 5145 00d3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5145      43313120 
 5145      352E342E 
 5145      31203230 
 5145      31363036 
 5146 0106 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5146      20726576 
 5146      6973696F 
 5146      6E203233 
 5146      37373135 
 5147 0139 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 5147      66756E63 
 5147      74696F6E 
 5147      2D736563 
 5147      74696F6E 
 5148              	.LASF6:
 5149 0161 6C6F6E67 		.ascii	"long long int\000"
 5149      206C6F6E 
 5149      6720696E 
 5149      7400
 5150              	.LASF0:
 5151 016f 7369676E 		.ascii	"signed char\000"
 5151      65642063 
 5151      68617200 
 5152              	.LASF45:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 151


 5153 017b 66726571 		.ascii	"freq\000"
 5153      00
 5154              	.LASF72:
 5155 0180 43794465 		.ascii	"CyDelayFreq\000"
 5155      6C617946 
 5155      72657100 
 5156              	.LASF35:
 5157 018c 696E7465 		.ascii	"interruptState\000"
 5157      72727570 
 5157      74537461 
 5157      746500
 5158              	.LASF76:
 5159 019b 43795379 		.ascii	"CySysTickGetReload\000"
 5159      73546963 
 5159      6B476574 
 5159      52656C6F 
 5159      616400
 5160              	.LASF4:
 5161 01ae 6C6F6E67 		.ascii	"long int\000"
 5161      20696E74 
 5161      00
 5162              	.LASF64:
 5163 01b7 4379496E 		.ascii	"CyIntDisable\000"
 5163      74446973 
 5163      61626C65 
 5163      00
 5164              	.LASF81:
 5165 01c4 43795379 		.ascii	"CySysTickGetCallback\000"
 5165      73546963 
 5165      6B476574 
 5165      43616C6C 
 5165      6261636B 
 5166              	.LASF9:
 5167 01d9 75696E74 		.ascii	"uint8\000"
 5167      3800
 5168              	.LASF86:
 5169 01df 63796465 		.ascii	"cydelayFreqKhz\000"
 5169      6C617946 
 5169      7265714B 
 5169      687A00
 5170              	.LASF40:
 5171 01ee 656E6162 		.ascii	"enable\000"
 5171      6C6500
 5172              	.LASF13:
 5173 01f5 646F7562 		.ascii	"double\000"
 5173      6C6500
 5174              	.LASF60:
 5175 01fc 73686966 		.ascii	"shift\000"
 5175      7400
 5176              	.LASF11:
 5177 0202 75696E74 		.ascii	"uint32\000"
 5177      333200
 5178              	.LASF54:
 5179 0209 6D61736B 		.ascii	"mask\000"
 5179      00
 5180              	.LASF48:
 5181 020e 43795379 		.ascii	"CySysClkGetSysclkSource\000"
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 152


 5181      73436C6B 
 5181      47657453 
 5181      7973636C 
 5181      6B536F75 
 5182              	.LASF61:
 5183 0226 4379496E 		.ascii	"CyIntGetPriority\000"
 5183      74476574 
 5183      5072696F 
 5183      72697479 
 5183      00
 5184              	.LASF88:
 5185 0237 63796465 		.ascii	"cydelay32kMs\000"
 5185      6C617933 
 5185      326B4D73 
 5185      00
 5186              	.LASF31:
 5187 0244 43795379 		.ascii	"CySysTickInit\000"
 5187      73546963 
 5187      6B496E69 
 5187      7400
 5188              	.LASF26:
 5189 0252 76616C75 		.ascii	"value\000"
 5189      6500
 5190              	.LASF82:
 5191 0258 43794765 		.ascii	"CyGetUniqueId\000"
 5191      74556E69 
 5191      71756549 
 5191      6400
 5192              	.LASF97:
 5193 0266 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5193      73546963 
 5193      6B476574 
 5193      436F756E 
 5193      74466C61 
 5194              	.LASF8:
 5195 027c 756E7369 		.ascii	"unsigned int\000"
 5195      676E6564 
 5195      20696E74 
 5195      00
 5196              	.LASF22:
 5197 0289 43795379 		.ascii	"CySysTickClear\000"
 5197      73546963 
 5197      6B436C65 
 5197      617200
 5198              	.LASF5:
 5199 0298 6C6F6E67 		.ascii	"long unsigned int\000"
 5199      20756E73 
 5199      69676E65 
 5199      6420696E 
 5199      7400
 5200              	.LASF34:
 5201 02aa 43795379 		.ascii	"CySysClkImoStop\000"
 5201      73436C6B 
 5201      496D6F53 
 5201      746F7000 
 5202              	.LASF91:
 5203 02ba 4379456E 		.ascii	"CyEnterCriticalSection\000"
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 153


 5203      74657243 
 5203      72697469 
 5203      63616C53 
 5203      65637469 
 5204              	.LASF65:
 5205 02d1 4379496E 		.ascii	"CyIntSetPending\000"
 5205      74536574 
 5205      50656E64 
 5205      696E6700 
 5206              	.LASF49:
 5207 02e1 43795379 		.ascii	"CySysGetResetReason\000"
 5207      73476574 
 5207      52657365 
 5207      74526561 
 5207      736F6E00 
 5208              	.LASF3:
 5209 02f5 73686F72 		.ascii	"short unsigned int\000"
 5209      7420756E 
 5209      7369676E 
 5209      65642069 
 5209      6E7400
 5210              	.LASF56:
 5211 0308 4379496E 		.ascii	"CyIntSetVector\000"
 5211      74536574 
 5211      56656374 
 5211      6F7200
 5212              	.LASF27:
 5213 0317 6E756D62 		.ascii	"number\000"
 5213      657200
 5214              	.LASF59:
 5215 031e 7072696F 		.ascii	"priority\000"
 5215      72697479 
 5215      00
 5216              	.LASF44:
 5217 0327 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5217      73436C6B 
 5217      57726974 
 5217      65496D6F 
 5217      46726571 
 5218              	.LASF99:
 5219 033c 4379496E 		.ascii	"CyIntSetSysVector\000"
 5219      74536574 
 5219      53797356 
 5219      6563746F 
 5219      7200
 5220              	.LASF38:
 5221 034e 43795379 		.ascii	"CySysEnablePumpClock\000"
 5221      73456E61 
 5221      626C6550 
 5221      756D7043 
 5221      6C6F636B 
 5222              	.LASF16:
 5223 0363 72656733 		.ascii	"reg32\000"
 5223      3200
 5224              	.LASF73:
 5225 0369 43795379 		.ascii	"CySysTickStart\000"
 5225      73546963 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 154


 5225      6B537461 
 5225      727400
 5226              	.LASF50:
 5227 0378 72657475 		.ascii	"returnStatus\000"
 5227      726E5374 
 5227      61747573 
 5227      00
 5228              	.LASF19:
 5229 0385 73697A65 		.ascii	"sizetype\000"
 5229      74797065 
 5229      00
 5230              	.LASF66:
 5231 038e 4379496E 		.ascii	"CyIntClearPending\000"
 5231      74436C65 
 5231      61725065 
 5231      6E64696E 
 5231      6700
 5232              	.LASF18:
 5233 03a0 6C6F6E67 		.ascii	"long double\000"
 5233      20646F75 
 5233      626C6500 
 5234              	.LASF96:
 5235 03ac 433A5C55 		.ascii	"C:\\Users\\Public\\touch\\(NowC302)A1_Global_Multi_"
 5235      73657273 
 5235      5C507562 
 5235      6C69635C 
 5235      746F7563 
 5236 03db 43726561 		.ascii	"Creator4.1_hawkeye\\CapSense_CSD_P4_Example_WithTun"
 5236      746F7234 
 5236      2E315F68 
 5236      61776B65 
 5236      79655C43 
 5237 040d 65723031 		.ascii	"er01.cydsn\000"
 5237      2E637964 
 5237      736E00
 5238              	.LASF28:
 5239 0418 61646472 		.ascii	"address\000"
 5239      65737300 
 5240              	.LASF41:
 5241 0420 73797363 		.ascii	"sysclkSource\000"
 5241      6C6B536F 
 5241      75726365 
 5241      00
 5242              	.LASF79:
 5243 042d 66756E63 		.ascii	"function\000"
 5243      74696F6E 
 5243      00
 5244              	.LASF77:
 5245 0436 43795379 		.ascii	"CySysTickGetValue\000"
 5245      73546963 
 5245      6B476574 
 5245      56616C75 
 5245      6500
 5246              	.LASF85:
 5247 0448 63796465 		.ascii	"cydelayFreqHz\000"
 5247      6C617946 
 5247      72657148 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 155


 5247      7A00
 5248              	.LASF58:
 5249 0456 4379496E 		.ascii	"CyIntSetPriority\000"
 5249      74536574 
 5249      5072696F 
 5249      72697479 
 5249      00
 5250              	.LASF12:
 5251 0467 666C6F61 		.ascii	"float\000"
 5251      7400
 5252              	.LASF92:
 5253 046d 43794578 		.ascii	"CyExitCriticalSection\000"
 5253      69744372 
 5253      69746963 
 5253      616C5365 
 5253      6374696F 
 5254              	.LASF20:
 5255 0483 63795379 		.ascii	"cySysTickCallback\000"
 5255      73546963 
 5255      6B43616C 
 5255      6C626163 
 5255      6B00
 5256              	.LASF57:
 5257 0495 4379496E 		.ascii	"CyIntGetVector\000"
 5257      74476574 
 5257      56656374 
 5257      6F7200
 5258              	.LASF69:
 5259 04a4 6D696C6C 		.ascii	"milliseconds\000"
 5259      69736563 
 5259      6F6E6473 
 5259      00
 5260              	.LASF93:
 5261 04b1 43794465 		.ascii	"CyDelayCycles\000"
 5261      6C617943 
 5261      79636C65 
 5261      7300
 5262              	.LASF15:
 5263 04bf 72656738 		.ascii	"reg8\000"
 5263      00
 5264              	.LASF23:
 5265 04c4 43794861 		.ascii	"CyHalt\000"
 5265      6C7400
 5266              	.LASF1:
 5267 04cb 756E7369 		.ascii	"unsigned char\000"
 5267      676E6564 
 5267      20636861 
 5267      7200
 5268              	.LASF2:
 5269 04d9 73686F72 		.ascii	"short int\000"
 5269      7420696E 
 5269      7400
 5270              	.LASF62:
 5271 04e3 4379496E 		.ascii	"CyIntEnable\000"
 5271      74456E61 
 5271      626C6500 
 5272              	.LASF55:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 156


 5273 04ef 4379496E 		.ascii	"CyIntGetSysVector\000"
 5273      74476574 
 5273      53797356 
 5273      6563746F 
 5273      7200
 5274              	.LASF39:
 5275 0501 636C6B53 		.ascii	"clkSelect\000"
 5275      656C6563 
 5275      7400
 5276              	.LASF70:
 5277 050b 43794465 		.ascii	"CyDelayUs\000"
 5277      6C617955 
 5277      7300
 5278              	.LASF25:
 5279 0515 72656173 		.ascii	"reason\000"
 5279      6F6E00
 5280              	.LASF14:
 5281 051c 63686172 		.ascii	"char\000"
 5281      00
 5282              	.LASF17:
 5283 0521 63796973 		.ascii	"cyisraddress\000"
 5283      72616464 
 5283      72657373 
 5283      00
 5284              	.LASF32:
 5285 052e 43795379 		.ascii	"CySysTickEnable\000"
 5285      73546963 
 5285      6B456E61 
 5285      626C6500 
 5286              	.LASF47:
 5287 053e 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 5287      73436C6B 
 5287      57726974 
 5287      65486663 
 5287      6C6B4469 
 5288              	.LASF42:
 5289 0554 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5289      73436C6B 
 5289      57726974 
 5289      65537973 
 5289      636C6B44 
 5290              	.LASF78:
 5291 056b 43795379 		.ascii	"CySysTickSetCallback\000"
 5291      73546963 
 5291      6B536574 
 5291      43616C6C 
 5291      6261636B 
 5292              	.LASF84:
 5293 0580 43795379 		.ascii	"CySysTickCallbacks\000"
 5293      73546963 
 5293      6B43616C 
 5293      6C626163 
 5293      6B7300
 5294              	.LASF46:
 5295 0593 696D6F54 		.ascii	"imoTrim1Value\000"
 5295      72696D31 
 5295      56616C75 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 157


 5295      6500
 5296              	.LASF83:
 5297 05a1 756E6971 		.ascii	"uniqueId\000"
 5297      75654964 
 5297      00
 5298              	.LASF68:
 5299 05aa 43794465 		.ascii	"CyDelay\000"
 5299      6C617900 
 5300              	.LASF75:
 5301 05b2 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5301      73546963 
 5301      6B446973 
 5301      61626C65 
 5301      496E7465 
 5302              	.LASF87:
 5303 05cc 63796465 		.ascii	"cydelayFreqMhz\000"
 5303      6C617946 
 5303      7265714D 
 5303      687A00
 5304              	.LASF74:
 5305 05db 43795379 		.ascii	"CySysTickStop\000"
 5305      73546963 
 5305      6B53746F 
 5305      7000
 5306              	.LASF43:
 5307 05e9 64697669 		.ascii	"divider\000"
 5307      64657200 
 5308              	.LASF33:
 5309 05f1 43795379 		.ascii	"CySysClkImoStart\000"
 5309      73436C6B 
 5309      496D6F53 
 5309      74617274 
 5309      00
 5310              	.LASF95:
 5311 0602 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5311      72617465 
 5311      645F536F 
 5311      75726365 
 5311      5C50536F 
 5312              	.LASF71:
 5313 0621 6D696372 		.ascii	"microseconds\000"
 5313      6F736563 
 5313      6F6E6473 
 5313      00
 5314              	.LASF36:
 5315 062e 746D7052 		.ascii	"tmpReg\000"
 5315      656700
 5316              	.LASF24:
 5317 0635 43795379 		.ascii	"CySysTickSetReload\000"
 5317      73546963 
 5317      6B536574 
 5317      52656C6F 
 5317      616400
 5318              	.LASF98:
 5319 0648 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5319      73546963 
 5319      6B536572 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccMtCK7m.s 			page 158


 5319      76696365 
 5319      43616C6C 
 5320              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
