ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.InterruptHandler,"ax",%progbits
  20              		.align	2
  21              		.global	InterruptHandler
  22              		.code	16
  23              		.thumb_func
  24              		.type	InterruptHandler, %function
  25              	InterruptHandler:
  26              	.LFB32:
  27              		.file 1 "main.c"
   1:main.c        ****  /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** // /* unit8 widget is in Widgets constants definition of CapSense_CSHL.h */
  13:main.c        **** 
  14:main.c        **** //<A1_Global_Multi>
  15:main.c        **** 
  16:main.c        **** #include <project.h>
  17:main.c        **** #include <header.h>
  18:main.c        **** #include "CapSense_CSHL.h"
  19:main.c        **** 
  20:main.c        **** #define Debug
  21:main.c        **** 
  22:main.c        **** #ifdef Debug
  23:main.c        **** #define hawkeye
  24:main.c        **** //#define CYDebug
  25:main.c        **** #endif
  26:main.c        **** 
  27:main.c        **** #ifdef hawkeye
  28:main.c        ****    extern void report_debug_data( void );
  29:main.c        ****    unsigned char d = 0;
  30:main.c        **** #endif
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 2


  31:main.c        **** extern uint16 CapSense_SensorSignal[6u];
  32:main.c        **** //extern uint16 CapSense_SensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  33:main.c        **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  34:main.c        **** extern uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  35:main.c        **** //extern uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  36:main.c        **** extern uint8 CapSense_sensorOnMask[1u];
  37:main.c        **** /* Cypress Functions */
  38:main.c        **** CY_ISR_PROTO (WDT_ISR);
  39:main.c        **** uint32 ILODelayCycles_0 = 0;
  40:main.c        **** uint32 ILODelayCycles_1 = 0;
  41:main.c        **** 
  42:main.c        **** //------------------------ User Value & Function ------------------------//
  43:main.c        **** 
  44:main.c        **** /* Initialize Baseline for filter with specific sensing count */
  45:main.c        **** void CapSense_CSD_InitializeAllBaselines_Filtered(uint8 Repeat);
  46:main.c        **** void CapSense_CSD_InitializeSensorBaseline_Filtered(uint32 sensor);
  47:main.c        **** void CapSense_CSD_BaseInit_Filtered(uint32 sensor);
  48:main.c        **** #define BaselineUpdateCount 16u
  49:main.c        **** extern uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  50:main.c        **** 
  51:main.c        **** /* WDT */
  52:main.c        **** #define wdt_ms 40u
  53:main.c        **** void WDT_Clear(void);
  54:main.c        **** void Clear_WDT_With_Flag(void);
  55:main.c        **** void Set_WDT_Clear_Flag(uint8 value);
  56:main.c        **** //void WDT_Init(uint16 WDTResetTime, uint16 WDTSleepTime);
  57:main.c        **** void WDT_Init(uint8 IgnoreBit, uint16 Match);
  58:main.c        **** void WDT_Match_Init(uint8 IgnoreBit, uint16 Match);
  59:main.c        **** void Force_WDT_Reset(void);
  60:main.c        **** uint8 WDT_Clear_Flag = 0u;
  61:main.c        **** uint16 WDT_Ignore;  
  62:main.c        **** uint16 WDT_Match;
  63:main.c        **** 
  64:main.c        **** /* SleepMode */
  65:main.c        **** //#define WDT_RESET_TIME 2000u * 32 /* WDT reset time */    
  66:main.c        **** //#define WDT_INTERRUPT_TIME 100 * 32  /* WDT Interrupt for sleep */
  67:main.c        **** #define WDT_RESET_TIME 1 /* WDT reset time */    
  68:main.c        **** #define WDT_INTERRUPT_TIME 20  /* WDT Interrupt for sleep */
  69:main.c        **** 
  70:main.c        **** unsigned char key_scan_count;
  71:main.c        **** extern unsigned int temp[CapSense_TOTAL_SENSOR_COUNT];
  72:main.c        **** 
  73:main.c        **** #ifdef Debug
  74:main.c        **** void CapSense_UpdateEnabledBaselines_Filter(void);
  75:main.c        **** void CapSense_UpdateSensorBaseline_Filter(uint32 sensor);
  76:main.c        **** void CapSense_UpdateBaselineNoThreshold_Filter(uint32 sensor);
  77:main.c        **** uint16 Capsense_FilteredRawData[CapSense_TOTAL_SENSOR_COUNT];
  78:main.c        **** uint16 Sub_Buff[CapSense_TOTAL_SENSOR_COUNT];
  79:main.c        **** uint8 SignalBit_Debug = 0;
  80:main.c        **** #endif
  81:main.c        **** /*******************************************************************************
  82:main.c        **** * Define Interrupt service routine and allocate an vector to the Interrupt
  83:main.c        **** ********************************************************************************/
  84:main.c        **** CY_ISR(InterruptHandler)        //SimpleUX   Timer ISR 설정
  85:main.c        **** {
  28              		.loc 1 85 0
  29              		.cfi_startproc
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 3


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  86:main.c        ****     Timer_1_ClearInterrupt(Timer_1_INTR_MASK_CC_MATCH);
  36              		.loc 1 86 0
  37 0002 0220     		movs	r0, #2
  38 0004 FFF7FEFF 		bl	Timer_1_ClearInterrupt
  39              	.LVL0:
  40              	.LBB10:
  41              	.LBB11:
  87:main.c        ****     
  88:main.c        ****     Set_WDT_Clear_Flag(1);
  89:main.c        **** }
  90:main.c        **** 
  91:main.c        **** void FirstSensingData(void);
  92:main.c        **** 
  93:main.c        **** #ifdef CYDebug
  94:main.c        **** #define SW_UART_PORT        (3u)
  95:main.c        **** #define SW_UART_PIN         (0u)
  96:main.c        **** #endif
  97:main.c        **** 
  98:main.c        **** int main(void)
  99:main.c        **** {
 100:main.c        **** 	/* Enable global interrupt */
 101:main.c        **** 	CyGlobalIntEnable;
 102:main.c        ****     
 103:main.c        ****     UnUsedPin_16_Write(0);
 104:main.c        ****     UnUsedPin_9_Write(0);
 105:main.c        ****     UnUsedPin_18_Write(0);
 106:main.c        ****     UnUsedPin_10_Write(0);
 107:main.c        ****     UnUsedPin_14_Write(0);
 108:main.c        ****     UnUsedPin_15_Write(0);
 109:main.c        ****     #ifndef CYDebug
 110:main.c        ****     hawkeye_clk_Write(0);
 111:main.c        ****     hawkeye_data_Write(0);
 112:main.c        ****     #endif
 113:main.c        ****         
 114:main.c        ****     Clock_1_Enable();                           //SimpleUX
 115:main.c        ****     
 116:main.c        ****     /* Enable the Interrupt component connected to interrupt */
 117:main.c        ****     TC_CC_ISR_StartEx(InterruptHandler);        //SimpleUX
 118:main.c        **** 
 119:main.c        **** 	/* Start the components */
 120:main.c        ****     Timer_1_Start();                            //SimpleUX
 121:main.c        ****     
 122:main.c        ****     #ifdef CYDebug
 123:main.c        ****     uint8 buff[46];
 124:main.c        ****     /* Configure SW_Tx_UART to use port and pin from defines above */
 125:main.c        ****     SW_Tx_UART_StartEx(SW_UART_PORT, SW_UART_PIN);
 126:main.c        ****     #endif
 127:main.c        ****     
 128:main.c        ****     //WDT_Init(WDT_RESET_TIME, WDT_INTERRUPT_TIME);   /* Initialize WDT Interval */
 129:main.c        ****     
 130:main.c        ****     CyDelay(20u);
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 4


 131:main.c        ****     CyDelay(20u);
 132:main.c        ****     
 133:main.c        **** 	/* Initialize and start the CapSense component */
 134:main.c        **** 	CapSense_Start();			
 135:main.c        ****     
 136:main.c        ****     FirstSensingData();
 137:main.c        ****     
 138:main.c        **** 	/* Initialize Baseline using Adapted filter */
 139:main.c        ****     CapSense_CSD_InitializeAllBaselines_Filtered(BaselineUpdateCount);
 140:main.c        ****     
 141:main.c        ****     
 142:main.c        **** 	while(1)	/* Sensor Scanning Loop */
 143:main.c        **** 	{      
 144:main.c        **** 		/* Start scanning all enabled sensors */
 145:main.c        **** 		CapSense_ScanEnabledWidgets();
 146:main.c        **** 		
 147:main.c        ****         /* Wait for scanning to complete */
 148:main.c        **** 		while(CapSense_IsBusy() != 0)
 149:main.c        ****         {
 150:main.c        ****         }
 151:main.c        ****         
 152:main.c        **** 		/* Update all baselines */
 153:main.c        ****         #ifdef Debug
 154:main.c        ****         CapSense_UpdateEnabledBaselines_Filter();
 155:main.c        ****         #else
 156:main.c        ****         CapSense_UpdateEnabledBaselines();    
 157:main.c        ****         #endif
 158:main.c        ****         
 159:main.c        ****         /* Is any sensor active? */
 160:main.c        ****         CapSense_CheckIsAnyWidgetActive();
 161:main.c        ****         
 162:main.c        ****         #ifdef CYDebug
 163:main.c        ****         //Fill in output buffer by the sinValue
 164:main.c        ****         buff[0]  = 0x0D;
 165:main.c        ****         buff[1]  = 0x0a;
 166:main.c        ****         #if 1
 167:main.c        ****         buff[2]  = CapSense_SensorOnMask[0];
 168:main.c        ****         buff[3]  = CapSense_SensorOnMask[1];
 169:main.c        ****         
 170:main.c        ****         for(SignalBit_Debug = 0; SignalBit_Debug < CapSense_TOTAL_SENSOR_COUNT; SignalBit_Debug++)
 171:main.c        ****         {
 172:main.c        ****             Sub_Buff[SignalBit_Debug] = (Capsense_FilteredRawData[SignalBit_Debug] > CapSense_Senso
 173:main.c        ****         }
 174:main.c        ****         
 175:main.c        ****         for(SignalBit_Debug = 0; SignalBit_Debug < CapSense_TOTAL_SENSOR_COUNT; SignalBit_Debug++)
 176:main.c        ****         {
 177:main.c        ****             buff[(SignalBit_Debug*2)+4] = Sub_Buff[SignalBit_Debug];
 178:main.c        ****             buff[(SignalBit_Debug*2)+5] = Sub_Buff[SignalBit_Debug]>>8;
 179:main.c        ****         }
 180:main.c        ****         //Send data to host
 181:main.c        ****         SW_Tx_UART_PutArray(buff, 27);
 182:main.c        ****         #endif
 183:main.c        ****         #if 0
 184:main.c        ****         for(SignalBit_Debug = 0; SignalBit_Debug < CapSense_TOTAL_SENSOR_COUNT; SignalBit_Debug++)
 185:main.c        ****         {
 186:main.c        ****             //buff[(SignalBit_Debug*2)+2] = CapSense_SensorRaw[SignalBit_Debug];
 187:main.c        ****             //buff[(SignalBit_Debug*2)+3] = CapSense_SensorRaw[SignalBit_Debug]>>8;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 5


 188:main.c        ****             buff[(SignalBit_Debug*2)+2] = Capsense_FilteredRawData[SignalBit_Debug];
 189:main.c        ****             buff[(SignalBit_Debug*2)+3] = Capsense_FilteredRawData[SignalBit_Debug]>>8;
 190:main.c        ****         }
 191:main.c        ****         for(SignalBit_Debug = 0; SignalBit_Debug < CapSense_TOTAL_SENSOR_COUNT; SignalBit_Debug++)
 192:main.c        ****         {
 193:main.c        ****             buff[(SignalBit_Debug*2)+24] = CapSense_SensorBaseline[SignalBit_Debug];
 194:main.c        ****             buff[(SignalBit_Debug*2)+25] = CapSense_SensorBaseline[SignalBit_Debug]>>8;
 195:main.c        ****         }
 196:main.c        ****         //Send data to host
 197:main.c        ****         SW_Tx_UART_PutArray(buff, 46);
 198:main.c        ****         /*
 199:main.c        ****         if(debugflag == 1)
 200:main.c        ****         {
 201:main.c        ****             debugcnt = 0;
 202:main.c        ****             debugflag = 0;
 203:main.c        ****         }
 204:main.c        ****         */
 205:main.c        ****         #endif
 206:main.c        ****         #endif
 207:main.c        ****         
 208:main.c        ****         #ifdef hawkeye
 209:main.c        ****             for(SignalBit_Debug = 0; SignalBit_Debug < CapSense_TOTAL_SENSOR_COUNT; SignalBit_Debug
 210:main.c        ****             {
 211:main.c        ****                 Sub_Buff[SignalBit_Debug] = (Capsense_FilteredRawData[SignalBit_Debug] > CapSense_S
 212:main.c        ****             }
 213:main.c        ****             //temp[0] = sleep_flag;
 214:main.c        ****             //temp[0] = CapSense_GetModulationIDAC(0);
 215:main.c        ****             //temp[0] = CapSense_GetDebounce(25);
 216:main.c        ****             //temp[0] = comm_err_flag;
 217:main.c        ****             if(d < 2)
 218:main.c        ****             {
 219:main.c        ****                 d++;
 220:main.c        ****             }
 221:main.c        ****             else
 222:main.c        ****             {
 223:main.c        ****                 report_debug_data();       
 224:main.c        ****                 d = 0;
 225:main.c        ****             }
 226:main.c        ****         #endif
 227:main.c        **** 	}
 228:main.c        **** }
 229:main.c        **** #if 0
 230:main.c        **** void Long_key_detect(void)
 231:main.c        **** {
 232:main.c        ****     unsigned char i = 0;
 233:main.c        ****     uint8 flag = 0;
 234:main.c        ****     
 235:main.c        ****     for( i = 0; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 236:main.c        ****     {
 237:main.c        ****         if(CapSense_SensorSignal[i] > CapSense_noiseThreshold[i])
 238:main.c        ****         {
 239:main.c        ****             flag = 1;
 240:main.c        ****             break;
 241:main.c        ****         }
 242:main.c        ****         else
 243:main.c        ****         {
 244:main.c        ****         }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 6


 245:main.c        ****     }
 246:main.c        ****     
 247:main.c        ****     
 248:main.c        ****     long_key_start = flag;
 249:main.c        **** }
 250:main.c        **** 
 251:main.c        **** void Abnormal_Capsense_Detect(void)
 252:main.c        **** {
 253:main.c        ****     uint8 i = 0;
 254:main.c        ****     
 255:main.c        ****     for(i = 0; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 256:main.c        ****     {
 257:main.c        ****         if((CapSense_SensorRaw[i] <= (uint16)(((uint32)Resolution_Max[i]*Abnormal_Capsense_detect_L
 258:main.c        ****            (CapSense_SensorRaw[i] >= (uint16)(((uint32)Resolution_Max[i]*Abnormal_Capsense_detect_H
 259:main.c        ****         {
 260:main.c        ****             Abnormal_Capsense_Flag = 1;
 261:main.c        ****             break;
 262:main.c        ****         }
 263:main.c        ****         else
 264:main.c        ****         {
 265:main.c        ****             Abnormal_Capsense_Flag = 0;
 266:main.c        ****         }
 267:main.c        ****     }
 268:main.c        **** }
 269:main.c        **** 
 270:main.c        **** void baseline_check(void)
 271:main.c        **** {
 272:main.c        ****     unsigned char i = 0;
 273:main.c        ****     for( i = 0; i < CapSense_TOTAL_SENSOR_COUNT ; i++)
 274:main.c        ****     {
 275:main.c        ****         if( (CapSense_sensorBaseline[i] > ((default_baseline[i]*12)/10)) && (CapSense_GetModulation
 276:main.c        ****         {
 277:main.c        ****             CapSense_SetModulationIDAC(i,( (IDAC_val[i]*135)/100));
 278:main.c        ****             CapSense_SetFingerThreshold(i,((F_thersholds[i]*85)/100));
 279:main.c        ****             CapSense_SetNoiseThreshold(i, (((F_thersholds[i]*85)/100) - (CapSense_GetFingerHysteres
 280:main.c        ****             CapSense_InitializeSensorBaseline(i);
 281:main.c        ****             CyDelay(5u);
 282:main.c        ****         }
 283:main.c        ****         else if( (CapSense_sensorBaseline[i] < ((default_baseline[i]*8)/10)) && (CapSense_GetModula
 284:main.c        ****         {
 285:main.c        ****             CapSense_SetModulationIDAC(i,IDAC_val[i]);
 286:main.c        ****             CapSense_SetFingerThreshold(i,F_thersholds[i]);
 287:main.c        ****             CapSense_SetNoiseThreshold(i, (F_thersholds[i] - (CapSense_GetFingerHysteresis(i)) - 1)
 288:main.c        ****             CapSense_InitializeSensorBaseline(i);
 289:main.c        ****             CyDelay(5u);
 290:main.c        ****         }  
 291:main.c        ****         #ifdef hawkeye
 292:main.c        ****             //temp[i] = CapSense_GetModulationIDAC(i);
 293:main.c        ****             //temp[i] = CapSense_GetFingerThreshold(i);
 294:main.c        ****         #endif
 295:main.c        ****     }
 296:main.c        **** }
 297:main.c        **** 
 298:main.c        **** void multikey_check(void)
 299:main.c        **** {
 300:main.c        ****     #if 1
 301:main.c        ****     unsigned char i, a, count_multi_key = 0;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 7


 302:main.c        ****     
 303:main.c        ****     //multikey_flag = 0;
 304:main.c        ****     
 305:main.c        ****     if(CapSense_SensorOnMask[1] & 0x04)
 306:main.c        ****     {
 307:main.c        ****         count_multi_key++;
 308:main.c        ****     }
 309:main.c        ****     
 310:main.c        ****     for(i = 0 ; i < 2 ; i++)
 311:main.c        ****     {
 312:main.c        ****         a = (0x01 << i);
 313:main.c        ****         if( (CapSense_SensorOnMask[0] & a) )
 314:main.c        ****         {
 315:main.c        ****             count_multi_key++;
 316:main.c        ****         }
 317:main.c        ****     }
 318:main.c        ****     
 319:main.c        ****     if( count_multi_key >= 2 )
 320:main.c        ****     {        
 321:main.c        ****         multikey_flag = 1;
 322:main.c        ****     }
 323:main.c        ****     
 324:main.c        ****     if( (CapSense_SensorOnMask[0] == 0x00) && (CapSense_SensorOnMask[1] == 0x00) )
 325:main.c        ****     {
 326:main.c        ****         multikey_flag = 0;
 327:main.c        ****     }
 328:main.c        ****     #endif
 329:main.c        **** }
 330:main.c        **** 
 331:main.c        **** void Power_key_control(void)
 332:main.c        **** {
 333:main.c        ****     //if(PowerKeyCnt < 40)    //Power key가 100ms 미만으로 눌림
 334:main.c        ****     if(PowerKeyCnt < 80)    //Power key가 200ms 미만으로 눌림
 335:main.c        ****     {
 336:main.c        ****         Pin_Power_Write(1);
 337:main.c        ****             
 338:main.c        ****         if( (CapSense_SensorOnMask[1] & 0x04) && (multikey_flag == 0))
 339:main.c        ****             PowerKeyFlag = 1;
 340:main.c        ****         else
 341:main.c        ****             PowerKeyFlag = 0;
 342:main.c        ****     }
 343:main.c        ****     //else if(PowerKeyCnt < 80) //Power key가 100ms 이상으로 눌림, 100ms 동안 LOW 유지
 344:main.c        ****     else if(PowerKeyCnt < 120) //Power key가 100ms 이상으로 눌림, 100ms 동안 LOW 유지
 345:main.c        ****     {        
 346:main.c        ****         Pin_Power_Write(0);
 347:main.c        ****     }
 348:main.c        ****     else //Power key 가 100ms 눌린 후 Pin_Power_Write(0) 출력 하며 100ms 이상이 지남
 349:main.c        ****     {
 350:main.c        ****         if(CapSense_SensorOnMask[1] & 0x04)
 351:main.c        ****             Pin_Power_Write(0); 
 352:main.c        ****         else
 353:main.c        ****         {
 354:main.c        ****             Pin_Power_Write(1);             
 355:main.c        ****             PowerKeyFlag = 0;
 356:main.c        ****         }
 357:main.c        ****     }
 358:main.c        **** }
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 8


 359:main.c        **** 
 360:main.c        **** void SensorEnable(void)
 361:main.c        **** {
 362:main.c        ****     uint8 i = 0;
 363:main.c        ****     
 364:main.c        ****     /* Scan only the Button 10 sensor */
 365:main.c        ****     CapSense_ScanSensor(CapSense_BUTTON10__BTN);
 366:main.c        ****     /* Wait for scanning to complete */
 367:main.c        ****     while(CapSense_IsBusy() != 0);
 368:main.c        ****     /* Update the baseline of only the Button 10 sensor*/
 369:main.c        ****    	CapSense_UpdateSensorBaseline(CapSense_BUTTON10__BTN);
 370:main.c        ****     /* Check if the Button 10 sensor is active */
 371:main.c        ****     bButtonTouchOnOffStatus = CapSense_CheckIsWidgetActive(CapSense_BUTTON10__BTN);
 372:main.c        ****     
 373:main.c        ****     
 374:main.c        ****     for(i = 0; i < 10; i++)
 375:main.c        ****     {
 376:main.c        ****         CapSense_ScanSensor(i);
 377:main.c        ****         while(CapSense_IsBusy() != 0);
 378:main.c        ****         CapSense_UpdateSensorBaseline(i);
 379:main.c        ****         CapSense_CheckIsWidgetActive(i);
 380:main.c        ****     }
 381:main.c        **** }
 382:main.c        **** #endif
 383:main.c        **** 
 384:main.c        **** void WDT_Clear(void)
 385:main.c        **** {
 386:main.c        ****     //CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
 387:main.c        ****     /* Watchdog Clear */
 388:main.c        ****     CySysWdtClearInterrupt();   
 389:main.c        **** }
 390:main.c        **** 
 391:main.c        **** void Clear_WDT_With_Flag(void)
 392:main.c        **** {    
 393:main.c        ****     if(WDT_Clear_Flag == 1)
 394:main.c        ****     {
 395:main.c        ****         WDT_Clear();
 396:main.c        ****         WDT_Clear_Flag = 0;
 397:main.c        ****     }
 398:main.c        **** }
 399:main.c        **** 
 400:main.c        **** void Set_WDT_Clear_Flag(uint8 value)
 401:main.c        **** {
 402:main.c        ****     WDT_Clear_Flag = value;
  42              		.loc 1 402 0
  43 0008 0122     		movs	r2, #1
  44 000a 014B     		ldr	r3, .L2
  45              	.LBE11:
  46              	.LBE10:
  89:main.c        **** 
  47              		.loc 1 89 0
  48              		@ sp needed
  49              	.LBB13:
  50              	.LBB12:
  51              		.loc 1 402 0
  52 000c 1A70     		strb	r2, [r3]
  53              	.LVL1:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 9


  54              	.LBE12:
  55              	.LBE13:
  89:main.c        **** 
  56              		.loc 1 89 0
  57 000e 10BD     		pop	{r4, pc}
  58              	.L3:
  59              		.align	2
  60              	.L2:
  61 0010 00000000 		.word	.LANCHOR0
  62              		.cfi_endproc
  63              	.LFE32:
  64              		.size	InterruptHandler, .-InterruptHandler
  65              		.section	.text.WDT_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	WDT_ISR
  68              		.code	16
  69              		.thumb_func
  70              		.type	WDT_ISR, %function
  71              	WDT_ISR:
  72              	.LFB47:
 403:main.c        **** }
 404:main.c        **** 
 405:main.c        **** /***********************************************************************/
 406:main.c        **** /* For void CapSense_CSD_InitializeAllBaselines_Filtered(uint8 Repeat) */
 407:main.c        **** /***********************************************************************/
 408:main.c        **** /* Baseline Calibration using Filter */
 409:main.c        **** void CapSense_CSD_InitializeAllBaselines_Filtered(uint8 Repeat)
 410:main.c        **** {
 411:main.c        ****     uint32 i;
 412:main.c        ****     uint8 j;
 413:main.c        ****     
 414:main.c        ****     for(j=0u;j<Repeat;j++)    /* Repeat N Times */
 415:main.c        ****     {
 416:main.c        ****         for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 417:main.c        ****         {
 418:main.c        ****             CapSense_CSD_InitializeSensorBaseline_Filtered(i);
 419:main.c        ****  
 420:main.c        ****         }
 421:main.c        ****     }
 422:main.c        **** }
 423:main.c        **** 
 424:main.c        **** /* IIR 필터 사용 하기 위하여 RawCount를 측정 */
 425:main.c        **** void CapSense_CSD_InitializeSensorBaseline_Filtered(uint32 sensor)
 426:main.c        **** {
 427:main.c        ****     /* Scan sensor */
 428:main.c        **** #if 1
 429:main.c        ****     CapSense_ScanSensor(sensor);
 430:main.c        ****     while(CapSense_IsBusy() != 0u)
 431:main.c        ****     { 
 432:main.c        ****         /* Wait while sensor is busy */
 433:main.c        ****     }
 434:main.c        **** #endif
 435:main.c        **** 
 436:main.c        ****     /* Initialize Baseline, Signal and debounce counters */
 437:main.c        ****     CapSense_CSD_BaseInit_Filtered(sensor);
 438:main.c        **** }
 439:main.c        **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 10


 440:main.c        **** /* 필터를 거친 값을 Baseline에 저장 */
 441:main.c        **** void CapSense_CSD_BaseInit_Filtered(uint32 sensor)
 442:main.c        **** {    
 443:main.c        ****     uint16 filteredRawData;        
 444:main.c        ****     
 445:main.c        ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 446:main.c        ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 447:main.c        ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 448:main.c        ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 449:main.c        **** 
 450:main.c        ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 451:main.c        ****         uint8 debounceIndex;
 452:main.c        ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 453:main.c        **** 
 454:main.c        ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 455:main.c        ****         /* Exclude generic widget */
 456:main.c        ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 457:main.c        ****         {
 458:main.c        ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 459:main.c        ****     
 460:main.c        ****     /* Filtered RawCount */
 461:main.c        ****     filteredRawData = CapSense_sensorRaw[sensor];
 462:main.c        ****     
 463:main.c        ****     filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 464:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 465:main.c        **** 
 466:main.c        ****     
 467:main.c        ****     /* Initialize Baseline */    
 468:main.c        ****     CapSense_sensorBaseline[sensor] = CapSense_rawFilterData1[sensor];
 469:main.c        ****     CapSense_sensorBaselineLow[sensor] = 0u;
 470:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 471:main.c        **** 
 472:main.c        ****     //CapSense_CSD_debounceCounter0[widget] =  OnDebounce[widget];
 473:main.c        ****     //CapSense_CSD_debounceCounter1[widget] =  OffDebounce[widget];
 474:main.c        ****     
 475:main.c        **** }
 476:main.c        ****         
 477:main.c        **** void FirstSensingData(void)
 478:main.c        **** {
 479:main.c        ****     uint32 i;
 480:main.c        ****     
 481:main.c        ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 482:main.c        ****     {
 483:main.c        ****         CapSense_ScanSensor(i);
 484:main.c        ****         
 485:main.c        ****         while(CapSense_IsBusy() != 0u)
 486:main.c        ****         { 
 487:main.c        ****             /* Wait while sensor is busy */
 488:main.c        ****         }
 489:main.c        ****         
 490:main.c        ****         CapSense_rawFilterData1[i] = CapSense_sensorRaw[i];
 491:main.c        ****     }
 492:main.c        **** }
 493:main.c        **** 
 494:main.c        **** #ifdef Debug
 495:main.c        **** /***********************************************************************/
 496:main.c        **** /* For void CapSense_UpdateEnabledBaselines_Filter */
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 11


 497:main.c        **** /***********************************************************************/
 498:main.c        **** void CapSense_UpdateEnabledBaselines_Filter(void)
 499:main.c        **** {
 500:main.c        ****     uint32 i;
 501:main.c        ****     uint32 isSensorEnabled;
 502:main.c        **** 
 503:main.c        ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 504:main.c        ****     {
 505:main.c        ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 506:main.c        **** 
 507:main.c        ****         if(0u != isSensorEnabled)
 508:main.c        ****         {
 509:main.c        ****             //CapSense_UpdateSensorBaseline(i);
 510:main.c        ****             CapSense_UpdateSensorBaseline_Filter(i);
 511:main.c        ****         }
 512:main.c        ****     }
 513:main.c        **** }
 514:main.c        **** 
 515:main.c        ****  void CapSense_UpdateSensorBaseline_Filter(uint32 sensor)
 516:main.c        **** {
 517:main.c        ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 518:main.c        ****         uint32 widget;
 519:main.c        **** 
 520:main.c        ****         widget = CapSense_widgetNumber[sensor];
 521:main.c        **** 
 522:main.c        ****         /* Exclude generic widget */
 523:main.c        ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 524:main.c        ****         {
 525:main.c        ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 526:main.c        **** 
 527:main.c        ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 528:main.c        ****         CapSense_UpdateThresholds(sensor);
 529:main.c        ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 530:main.c        **** 
 531:main.c        ****     //CapSense_UpdateBaselineNoThreshold(sensor);
 532:main.c        ****     CapSense_UpdateBaselineNoThreshold_Filter(sensor);
 533:main.c        **** 
 534:main.c        ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 535:main.c        ****         /* Exclude generic widget */
 536:main.c        ****         }
 537:main.c        ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 538:main.c        **** }
 539:main.c        **** 
 540:main.c        **** void CapSense_UpdateBaselineNoThreshold_Filter(uint32 sensor)
 541:main.c        **** {
 542:main.c        ****     uint32 calc;
 543:main.c        ****     uint32 sign;
 544:main.c        ****     uint16 tempRaw;
 545:main.c        ****     uint16 AveragetempRaw;
 546:main.c        ****     uint16 filteredRawData;
 547:main.c        ****     uint8 widget = CapSense_widgetNumber[sensor];
 548:main.c        ****     uint16 noiseThreshold;
 549:main.c        **** 
 550:main.c        ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 551:main.c        ****         /* Exclude generic widget */
 552:main.c        ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 553:main.c        ****         {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 12


 554:main.c        ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 555:main.c        **** 
 556:main.c        ****     noiseThreshold = CapSense_noiseThreshold[widget];
 557:main.c        ****     filteredRawData = CapSense_sensorRaw[sensor];
 558:main.c        **** 
 559:main.c        ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 560:main.c        ****     //if(CapSense_enableRawFilters != 0u)
 561:main.c        ****     {
 562:main.c        ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 563:main.c        ****             tempRaw = filteredRawData;
 564:main.c        ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 565:main.c        ****                                                             CapSense_rawFilterData2[sensor]);
 566:main.c        ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 567:main.c        ****             CapSense_rawFilterData1[sensor] = tempRaw;
 568:main.c        **** 
 569:main.c        ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 570:main.c        ****             tempRaw = filteredRawData;
 571:main.c        ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 572:main.c        ****                                                                CapSense_rawFilterData2[sensor]);
 573:main.c        ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 574:main.c        ****             CapSense_rawFilterData1[sensor] = tempRaw;
 575:main.c        **** 
 576:main.c        ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 577:main.c        ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 578:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 579:main.c        **** 
 580:main.c        ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 581:main.c        ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 582:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 583:main.c        ****             Capsense_FilteredRawData[sensor] = filteredRawData;
 584:main.c        ****                     
 585:main.c        ****             #if 0
 586:main.c        ****             /* Add AverageFilter */
 587:main.c        ****             AveragetempRaw = filteredRawData;
 588:main.c        ****             filteredRawData = CapSense_USER_AverageFilter(filteredRawData, CapSense_Aver_rawFilterD
 589:main.c        ****             CapSense_Aver_rawFilterData2[sensor] = CapSense_Aver_rawFilterData1[sensor];
 590:main.c        ****             CapSense_Aver_rawFilterData1[sensor] = AveragetempRaw;
 591:main.c        ****             /* Add AverageFilter */
 592:main.c        **** 
 593:main.c        ****             /* Add MedianFilter */
 594:main.c        ****             tempRaw = filteredRawData;
 595:main.c        ****             filteredRawData = CapSense_USER_MEDIANFilter(filteredRawData, CapSense_rawFilterData1[s
 596:main.c        ****                                                      CapSense_rawFilterData3[sensor], CapSense_rawF
 597:main.c        ****             
 598:main.c        ****             //CapSense_rawFilterData6[sensor] = CapSense_rawFilterData5[sensor];
 599:main.c        ****             //CapSense_rawFilterData5[sensor] = CapSense_rawFilterData4[sensor];
 600:main.c        ****             CapSense_rawFilterData4[sensor] = CapSense_rawFilterData3[sensor];
 601:main.c        ****             CapSense_rawFilterData3[sensor] = CapSense_rawFilterData2[sensor];
 602:main.c        ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 603:main.c        ****             CapSense_rawFilterData1[sensor] = tempRaw;
 604:main.c        ****             /* Add MedianFilter */     
 605:main.c        ****             #endif
 606:main.c        ****             
 607:main.c        ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 608:main.c        ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 609:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 610:main.c        **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 13


 611:main.c        ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 612:main.c        ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 613:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 614:main.c        **** 
 615:main.c        ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 616:main.c        ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 617:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 618:main.c        **** 
 619:main.c        ****         #else
 620:main.c        ****             /* No Raw filters */
 621:main.c        ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 622:main.c        ****     }
 623:main.c        ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 624:main.c        **** 
 625:main.c        ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 626:main.c        ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 627:main.c        ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 628:main.c        **** 
 629:main.c        ****     /* Baseline calculation */
 630:main.c        ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 631:main.c        ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 632:main.c        ****     {
 633:main.c        ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 634:main.c        ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 635:main.c        ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 636:main.c        ****     }
 637:main.c        ****     else
 638:main.c        ****     {
 639:main.c        ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 640:main.c        ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 641:main.c        ****     }
 642:main.c        **** 
 643:main.c        ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 644:main.c        ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 645:main.c        ****     #else
 646:main.c        ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 647:main.c        ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 648:main.c        ****     {
 649:main.c        ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 650:main.c        ****         {
 651:main.c        ****             CapSense_BaseInit(sensor);
 652:main.c        ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 653:main.c        ****         }
 654:main.c        ****         else
 655:main.c        ****         {
 656:main.c        ****             CapSense_lowBaselineResetCnt[sensor]++;
 657:main.c        ****         }
 658:main.c        ****     }
 659:main.c        ****     else
 660:main.c        ****     {
 661:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 662:main.c        ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 663:main.c        ****             /* Update Baseline if lower than noiseThreshold */
 664:main.c        ****             if ( (tempRaw <= noiseThreshold) ||
 665:main.c        ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 666:main.c        ****                && (sign == 0u)))
 667:main.c        ****             {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 14


 668:main.c        ****         #else
 669:main.c        ****             /* Update Baseline if lower than noiseThreshold */
 670:main.c        ****             if ( (tempRaw <= noiseThreshold) ||
 671:main.c        ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 672:main.c        ****                    && (sign == 0u)))
 673:main.c        ****             {
 674:main.c        ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 675:main.c        ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 676:main.c        ****                 /* Make full Baseline 23 bits */
 677:main.c        ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 678:main.c        ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 679:main.c        **** 
 680:main.c        ****                 /* Add Raw Data to Baseline */
 681:main.c        ****                 calc += filteredRawData;
 682:main.c        **** 
 683:main.c        ****                 /* Sub the high Baseline */
 684:main.c        ****                 calc -= CapSense_sensorBaseline[sensor];
 685:main.c        **** 
 686:main.c        ****                 /* Put Baseline and BaselineLow */
 687:main.c        ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 688:main.c        ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 689:main.c        **** 
 690:main.c        ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 691:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 692:main.c        ****             }
 693:main.c        ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 694:main.c        ****     }
 695:main.c        **** 
 696:main.c        ****     /* Calculate Signal if positive difference > noiseThreshold */
 697:main.c        ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 698:main.c        ****     {
 699:main.c        ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 700:main.c        ****             /* Over flow defence for uint8 */
 701:main.c        ****             if (tempRaw > 0xFFu)
 702:main.c        ****             {
 703:main.c        ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 704:main.c        ****             }
 705:main.c        ****             else
 706:main.c        ****             {
 707:main.c        ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 708:main.c        ****             }
 709:main.c        ****         #else
 710:main.c        ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 711:main.c        ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 712:main.c        ****     }
 713:main.c        ****     else
 714:main.c        ****     {
 715:main.c        ****         /* Signal is zero */
 716:main.c        ****         CapSense_sensorSignal[sensor] = 0u;
 717:main.c        ****     }
 718:main.c        **** 
 719:main.c        ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 720:main.c        ****         /* Exclude generic widget */
 721:main.c        ****         }
 722:main.c        ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 723:main.c        **** }
 724:main.c        **** #endif
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 15


 725:main.c        **** /********************************************************************************************/
 726:main.c        **** /* WDT Initialize */
 727:main.c        **** /********************************************************************************************/
 728:main.c        **** void WDT_Init(uint8 IgnoreBit, uint16 Match_ms)
 729:main.c        **** {
 730:main.c        ****     WDT_Ignore = IgnoreBit; /* for Reset mode */
 731:main.c        ****     WDT_Match = Match_ms;  /* for Match mode */
 732:main.c        ****     
 733:main.c        ****     /* Configure WDT ISR */
 734:main.c        ****     isr_WDT_Stop();
 735:main.c        ****     
 736:main.c        ****     /* Once watchdog counter reaches match value interrupt is generated  */
 737:main.c        ****     CySysWdtWriteMatch(65535);    
 738:main.c        **** 
 739:main.c        ****     /* Configure WDT to be 16-bit wraparound up-counter - 1 MSb is ignored */
 740:main.c        ****     /* 0 = 4.91, 1 = 2.45, 2 = 1.225, 3 = 0.612, 4 = 0.306, 5 = 0.153 */
 741:main.c        ****     
 742:main.c        ****     CySysWdtWriteIgnoreBits(IgnoreBit);    // ILO = 40khz -50%~100% accuracy, IgnoreBit = 0 : 65535
 743:main.c        **** 
 744:main.c        ****     /* Start the WDT */
 745:main.c        ****     CySysWdtEnable();
 746:main.c        **** 
 747:main.c        ****     /* Make sure that interrupt is forwarded to the CPU */
 748:main.c        ****     CySysWdtUnmaskInterrupt();   
 749:main.c        **** }
 750:main.c        **** 
 751:main.c        **** /********************************************************************************************/
 752:main.c        **** /* WDT Match Interrupt initialize */
 753:main.c        **** /********************************************************************************************/
 754:main.c        **** 
 755:main.c        **** void WDT_Match_Init(uint8 IgnoreBit, uint16 Match_ms)
 756:main.c        **** {
 757:main.c        ****     WDT_Ignore = IgnoreBit;
 758:main.c        ****     WDT_Match = Match_ms;
 759:main.c        ****     
 760:main.c        ****     /* Configure WDT ISR */
 761:main.c        ****     isr_WDT_StartEx(WDT_ISR);
 762:main.c        ****     
 763:main.c        ****     /* Once watchdog counter reaches match value interrupt is generated  */
 764:main.c        ****     //50 = 1.04ms interval
 765:main.c        ****     CySysWdtWriteMatch(CySysWdtReadMatch() + WDT_Match*wdt_ms);
 766:main.c        ****     
 767:main.c        ****     /* Configure WDT to be 16-bit wraparound up-counter - 1 MSb is ignored */
 768:main.c        ****     /* 0 = 4.91, 1 = 2.45, 2 = 1.225, 3 = 0.612, 4 = 0.306, 5 = 0.153 */
 769:main.c        ****     
 770:main.c        ****     CySysWdtWriteIgnoreBits(IgnoreBit);    /* 1.63*3 = 4.91ms, 2.45 ~ 9.82ms */
 771:main.c        **** 
 772:main.c        ****     /* Start the WDT */
 773:main.c        ****     CySysWdtEnable();
 774:main.c        **** 
 775:main.c        ****     /* Make sure that interrupt is forwarded to the CPU */
 776:main.c        ****     CySysWdtUnmaskInterrupt();  
 777:main.c        **** }
 778:main.c        **** /********************************************************************************************/
 779:main.c        **** /* Force WDT Reset */
 780:main.c        **** /********************************************************************************************/
 781:main.c        **** void Force_WDT_Reset(void)
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 16


 782:main.c        **** {
 783:main.c        ****     WDT_Init(5, WDT_INTERRUPT_TIME);   /* Initialize WDT Interval */
 784:main.c        ****     
 785:main.c        ****     while(1)
 786:main.c        ****     {
 787:main.c        ****     }
 788:main.c        **** }
 789:main.c        **** 
 790:main.c        **** 
 791:main.c        **** /******************************************************************************
 792:main.c        **** * Function Name: WDT_ISR_Handler
 793:main.c        **** *******************************************************************************
 794:main.c        **** *
 795:main.c        **** * Summary:
 796:main.c        **** * Interrupt Service Routine for the watchdog timer interrupt. The periodicity 
 797:main.c        **** * of the interrupt is depended on the match value written into the counter 
 798:main.c        **** * register using API - CySysWdtWriteMatch().
 799:main.c        **** *
 800:main.c        **** ******************************************************************************/
 801:main.c        **** CY_ISR(WDT_ISR)
 802:main.c        **** {
  73              		.loc 1 802 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 10B5     		push	{r4, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 4, -8
  80              		.cfi_offset 14, -4
 803:main.c        **** 	/* Clear WDT interrupt */ 
 804:main.c        ****     CySysWdtClearInterrupt();
  81              		.loc 1 804 0
  82 0002 FFF7FEFF 		bl	CySysWdtClearInterrupt
  83              	.LVL2:
 805:main.c        ****     isr_WDT_ClearPending();
  84              		.loc 1 805 0
  85 0006 FFF7FEFF 		bl	isr_WDT_ClearPending
  86              	.LVL3:
 806:main.c        ****     /* WDT match value is updated in order to obtain periodic interrupts. */
 807:main.c        ****     CySysWdtWriteMatch(CySysWdtReadMatch() + WDT_Match*wdt_ms); // ILO = 40Khz, 1000 means 25ms, bu
  87              		.loc 1 807 0
  88 000a FFF7FEFF 		bl	CySysWdtGetMatch
  89              	.LVL4:
  90 000e 044B     		ldr	r3, .L5
 808:main.c        **** }
  91              		.loc 1 808 0
  92              		@ sp needed
 807:main.c        **** }
  93              		.loc 1 807 0
  94 0010 1B88     		ldrh	r3, [r3]
  95 0012 9A00     		lsls	r2, r3, #2
  96 0014 D318     		adds	r3, r2, r3
  97 0016 DB00     		lsls	r3, r3, #3
  98 0018 1818     		adds	r0, r3, r0
  99 001a FFF7FEFF 		bl	CySysWdtSetMatch
 100              	.LVL5:
 101              		.loc 1 808 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 17


 102 001e 10BD     		pop	{r4, pc}
 103              	.L6:
 104              		.align	2
 105              	.L5:
 106 0020 00000000 		.word	WDT_Match
 107              		.cfi_endproc
 108              	.LFE47:
 109              		.size	WDT_ISR, .-WDT_ISR
 110              		.section	.text.WDT_Clear,"ax",%progbits
 111              		.align	2
 112              		.global	WDT_Clear
 113              		.code	16
 114              		.thumb_func
 115              		.type	WDT_Clear, %function
 116              	WDT_Clear:
 117              	.LFB34:
 385:main.c        ****     //CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
 118              		.loc 1 385 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 10B5     		push	{r4, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 388:main.c        **** }
 126              		.loc 1 388 0
 127 0002 FFF7FEFF 		bl	CySysWdtClearInterrupt
 128              	.LVL6:
 389:main.c        **** 
 129              		.loc 1 389 0
 130              		@ sp needed
 131 0006 10BD     		pop	{r4, pc}
 132              		.cfi_endproc
 133              	.LFE34:
 134              		.size	WDT_Clear, .-WDT_Clear
 135              		.section	.text.Clear_WDT_With_Flag,"ax",%progbits
 136              		.align	2
 137              		.global	Clear_WDT_With_Flag
 138              		.code	16
 139              		.thumb_func
 140              		.type	Clear_WDT_With_Flag, %function
 141              	Clear_WDT_With_Flag:
 142              	.LFB35:
 392:main.c        ****     if(WDT_Clear_Flag == 1)
 143              		.loc 1 392 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 10B5     		push	{r4, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 393:main.c        ****     {
 151              		.loc 1 393 0
 152 0002 054C     		ldr	r4, .L12
 153 0004 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 18


 154 0006 012B     		cmp	r3, #1
 155 0008 00D0     		beq	.L11
 156              	.L8:
 398:main.c        **** 
 157              		.loc 1 398 0
 158              		@ sp needed
 159 000a 10BD     		pop	{r4, pc}
 160              	.L11:
 161              	.LBB14:
 162              	.LBB15:
 388:main.c        **** }
 163              		.loc 1 388 0
 164 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 165              	.LVL7:
 166              	.LBE15:
 167              	.LBE14:
 396:main.c        ****     }
 168              		.loc 1 396 0
 169 0010 0023     		movs	r3, #0
 170 0012 2370     		strb	r3, [r4]
 398:main.c        **** 
 171              		.loc 1 398 0
 172 0014 F9E7     		b	.L8
 173              	.L13:
 174 0016 C046     		.align	2
 175              	.L12:
 176 0018 00000000 		.word	.LANCHOR0
 177              		.cfi_endproc
 178              	.LFE35:
 179              		.size	Clear_WDT_With_Flag, .-Clear_WDT_With_Flag
 180              		.section	.text.Set_WDT_Clear_Flag,"ax",%progbits
 181              		.align	2
 182              		.global	Set_WDT_Clear_Flag
 183              		.code	16
 184              		.thumb_func
 185              		.type	Set_WDT_Clear_Flag, %function
 186              	Set_WDT_Clear_Flag:
 187              	.LFB36:
 401:main.c        ****     WDT_Clear_Flag = value;
 188              		.loc 1 401 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL8:
 402:main.c        **** }
 194              		.loc 1 402 0
 195 0000 014B     		ldr	r3, .L15
 403:main.c        **** 
 196              		.loc 1 403 0
 197              		@ sp needed
 402:main.c        **** }
 198              		.loc 1 402 0
 199 0002 1870     		strb	r0, [r3]
 403:main.c        **** 
 200              		.loc 1 403 0
 201 0004 7047     		bx	lr
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 19


 202              	.L16:
 203 0006 C046     		.align	2
 204              	.L15:
 205 0008 00000000 		.word	.LANCHOR0
 206              		.cfi_endproc
 207              	.LFE36:
 208              		.size	Set_WDT_Clear_Flag, .-Set_WDT_Clear_Flag
 209              		.section	.text.CapSense_CSD_InitializeAllBaselines_Filtered,"ax",%progbits
 210              		.align	2
 211              		.global	CapSense_CSD_InitializeAllBaselines_Filtered
 212              		.code	16
 213              		.thumb_func
 214              		.type	CapSense_CSD_InitializeAllBaselines_Filtered, %function
 215              	CapSense_CSD_InitializeAllBaselines_Filtered:
 216              	.LFB37:
 410:main.c        ****     uint32 i;
 217              		.loc 1 410 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL9:
 222 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 223              		.cfi_def_cfa_offset 20
 224              		.cfi_offset 4, -20
 225              		.cfi_offset 5, -16
 226              		.cfi_offset 6, -12
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 5F46     		mov	r7, fp
 230 0004 5646     		mov	r6, r10
 231 0006 4D46     		mov	r5, r9
 232 0008 4446     		mov	r4, r8
 233 000a F0B4     		push	{r4, r5, r6, r7}
 234              		.cfi_def_cfa_offset 36
 235              		.cfi_offset 8, -36
 236              		.cfi_offset 9, -32
 237              		.cfi_offset 10, -28
 238              		.cfi_offset 11, -24
 239 000c 83B0     		sub	sp, sp, #12
 240              		.cfi_def_cfa_offset 48
 410:main.c        ****     uint32 i;
 241              		.loc 1 410 0
 242 000e 0190     		str	r0, [sp, #4]
 414:main.c        ****     {
 243              		.loc 1 414 0
 244 0010 0028     		cmp	r0, #0
 245 0012 2CD0     		beq	.L17
 246 0014 0023     		movs	r3, #0
 247 0016 0093     		str	r3, [sp]
 248 0018 184B     		ldr	r3, .L26
 249 001a 9B46     		mov	fp, r3
 250 001c 184B     		ldr	r3, .L26+4
 251 001e 9A46     		mov	r10, r3
 252 0020 184B     		ldr	r3, .L26+8
 253 0022 9946     		mov	r9, r3
 254 0024 184B     		ldr	r3, .L26+12
 255 0026 9846     		mov	r8, r3
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 20


 256              	.LVL10:
 257              	.L21:
 258 0028 0025     		movs	r5, #0
 259 002a 0026     		movs	r6, #0
 260              	.L20:
 261              	.LVL11:
 262              	.LBB20:
 263              	.LBB21:
 429:main.c        ****     while(CapSense_IsBusy() != 0u)
 264              		.loc 1 429 0
 265 002c 3000     		movs	r0, r6
 266 002e FFF7FEFF 		bl	CapSense_ScanSensor
 267              	.LVL12:
 268              	.L19:
 430:main.c        ****     { 
 269              		.loc 1 430 0
 270 0032 FFF7FEFF 		bl	CapSense_IsBusy
 271              	.LVL13:
 272 0036 0028     		cmp	r0, #0
 273 0038 FBD1     		bne	.L19
 274              	.LBB22:
 275              	.LBB23:
 461:main.c        ****     
 276              		.loc 1 461 0
 277 003a 5B46     		mov	r3, fp
 278 003c 0400     		movs	r4, r0
 279              	.LVL14:
 280 003e 585B     		ldrh	r0, [r3, r5]
 281              	.LVL15:
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 282              		.loc 1 463 0
 283 0040 5346     		mov	r3, r10
 284 0042 5F19     		adds	r7, r3, r5
 285 0044 3988     		ldrh	r1, [r7]
 286 0046 FFF7FEFF 		bl	CapSense_IIR4Filter
 287              	.LVL16:
 468:main.c        ****     CapSense_sensorBaselineLow[sensor] = 0u;
 288              		.loc 1 468 0
 289 004a 4B46     		mov	r3, r9
 290 004c 5853     		strh	r0, [r3, r5]
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 291              		.loc 1 469 0
 292 004e 4346     		mov	r3, r8
 293 0050 9C55     		strb	r4, [r3, r6]
 470:main.c        **** 
 294              		.loc 1 470 0
 295 0052 0E4B     		ldr	r3, .L26+16
 296              	.LBE23:
 297              	.LBE22:
 298              	.LBE21:
 299              	.LBE20:
 416:main.c        ****         {
 300              		.loc 1 416 0
 301 0054 0136     		adds	r6, r6, #1
 302              	.LVL17:
 303              	.LBB27:
 304              	.LBB26:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 21


 305              	.LBB25:
 306              	.LBB24:
 470:main.c        **** 
 307              		.loc 1 470 0
 308 0056 5C53     		strh	r4, [r3, r5]
 309              	.LVL18:
 464:main.c        **** 
 310              		.loc 1 464 0
 311 0058 3880     		strh	r0, [r7]
 312 005a 0235     		adds	r5, r5, #2
 313              	.LBE24:
 314              	.LBE25:
 315              	.LBE26:
 316              	.LBE27:
 416:main.c        ****         {
 317              		.loc 1 416 0
 318 005c 062E     		cmp	r6, #6
 319 005e E5D1     		bne	.L20
 414:main.c        ****     {
 320              		.loc 1 414 0 discriminator 2
 321 0060 009B     		ldr	r3, [sp]
 322 0062 019A     		ldr	r2, [sp, #4]
 323 0064 0133     		adds	r3, r3, #1
 324 0066 DBB2     		uxtb	r3, r3
 325 0068 0093     		str	r3, [sp]
 326              	.LVL19:
 327 006a 9A42     		cmp	r2, r3
 328 006c DCD1     		bne	.L21
 329              	.LVL20:
 330              	.L17:
 422:main.c        **** 
 331              		.loc 1 422 0
 332 006e 03B0     		add	sp, sp, #12
 333              		@ sp needed
 334 0070 3CBC     		pop	{r2, r3, r4, r5}
 335 0072 9046     		mov	r8, r2
 336 0074 9946     		mov	r9, r3
 337 0076 A246     		mov	r10, r4
 338 0078 AB46     		mov	fp, r5
 339 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 340              	.L27:
 341              		.align	2
 342              	.L26:
 343 007c 00000000 		.word	CapSense_sensorRaw
 344 0080 00000000 		.word	CapSense_rawFilterData1
 345 0084 00000000 		.word	CapSense_sensorBaseline
 346 0088 00000000 		.word	CapSense_sensorBaselineLow
 347 008c 00000000 		.word	CapSense_sensorSignal
 348              		.cfi_endproc
 349              	.LFE37:
 350              		.size	CapSense_CSD_InitializeAllBaselines_Filtered, .-CapSense_CSD_InitializeAllBaselines_Filtered
 351              		.section	.text.CapSense_CSD_InitializeSensorBaseline_Filtered,"ax",%progbits
 352              		.align	2
 353              		.global	CapSense_CSD_InitializeSensorBaseline_Filtered
 354              		.code	16
 355              		.thumb_func
 356              		.type	CapSense_CSD_InitializeSensorBaseline_Filtered, %function
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 22


 357              	CapSense_CSD_InitializeSensorBaseline_Filtered:
 358              	.LFB38:
 426:main.c        ****     /* Scan sensor */
 359              		.loc 1 426 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              	.LVL21:
 364 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 365              		.cfi_def_cfa_offset 24
 366              		.cfi_offset 3, -24
 367              		.cfi_offset 4, -20
 368              		.cfi_offset 5, -16
 369              		.cfi_offset 6, -12
 370              		.cfi_offset 7, -8
 371              		.cfi_offset 14, -4
 426:main.c        ****     /* Scan sensor */
 372              		.loc 1 426 0
 373 0002 0600     		movs	r6, r0
 429:main.c        ****     while(CapSense_IsBusy() != 0u)
 374              		.loc 1 429 0
 375 0004 FFF7FEFF 		bl	CapSense_ScanSensor
 376              	.LVL22:
 377              	.L29:
 430:main.c        ****     { 
 378              		.loc 1 430 0 discriminator 1
 379 0008 FFF7FEFF 		bl	CapSense_IsBusy
 380              	.LVL23:
 381 000c 041E     		subs	r4, r0, #0
 382 000e FBD1     		bne	.L29
 383              	.LVL24:
 384              	.LBB30:
 385              	.LBB31:
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 386              		.loc 1 463 0
 387 0010 074F     		ldr	r7, .L31
 461:main.c        ****     
 388              		.loc 1 461 0
 389 0012 084B     		ldr	r3, .L31+4
 390 0014 7500     		lsls	r5, r6, #1
 391 0016 E85A     		ldrh	r0, [r5, r3]
 392              	.LVL25:
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 393              		.loc 1 463 0
 394 0018 E95B     		ldrh	r1, [r5, r7]
 395 001a FFF7FEFF 		bl	CapSense_IIR4Filter
 396              	.LVL26:
 468:main.c        ****     CapSense_sensorBaselineLow[sensor] = 0u;
 397              		.loc 1 468 0
 398 001e 064B     		ldr	r3, .L31+8
 464:main.c        **** 
 399              		.loc 1 464 0
 400 0020 E853     		strh	r0, [r5, r7]
 468:main.c        ****     CapSense_sensorBaselineLow[sensor] = 0u;
 401              		.loc 1 468 0
 402 0022 E852     		strh	r0, [r5, r3]
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 23


 403              		.loc 1 469 0
 404 0024 054B     		ldr	r3, .L31+12
 405              	.LBE31:
 406              	.LBE30:
 438:main.c        **** 
 407              		.loc 1 438 0
 408              		@ sp needed
 409              	.LBB33:
 410              	.LBB32:
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 411              		.loc 1 469 0
 412 0026 9C55     		strb	r4, [r3, r6]
 470:main.c        **** 
 413              		.loc 1 470 0
 414 0028 054B     		ldr	r3, .L31+16
 415 002a EC52     		strh	r4, [r5, r3]
 416              	.LVL27:
 417              	.LVL28:
 418              	.LBE32:
 419              	.LBE33:
 438:main.c        **** 
 420              		.loc 1 438 0
 421 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 422              	.L32:
 423 002e C046     		.align	2
 424              	.L31:
 425 0030 00000000 		.word	CapSense_rawFilterData1
 426 0034 00000000 		.word	CapSense_sensorRaw
 427 0038 00000000 		.word	CapSense_sensorBaseline
 428 003c 00000000 		.word	CapSense_sensorBaselineLow
 429 0040 00000000 		.word	CapSense_sensorSignal
 430              		.cfi_endproc
 431              	.LFE38:
 432              		.size	CapSense_CSD_InitializeSensorBaseline_Filtered, .-CapSense_CSD_InitializeSensorBaseline_Filt
 433              		.section	.text.CapSense_CSD_BaseInit_Filtered,"ax",%progbits
 434              		.align	2
 435              		.global	CapSense_CSD_BaseInit_Filtered
 436              		.code	16
 437              		.thumb_func
 438              		.type	CapSense_CSD_BaseInit_Filtered, %function
 439              	CapSense_CSD_BaseInit_Filtered:
 440              	.LFB39:
 442:main.c        ****     uint16 filteredRawData;        
 441              		.loc 1 442 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              	.LVL29:
 446 0000 70B5     		push	{r4, r5, r6, lr}
 447              		.cfi_def_cfa_offset 16
 448              		.cfi_offset 4, -16
 449              		.cfi_offset 5, -12
 450              		.cfi_offset 6, -8
 451              		.cfi_offset 14, -4
 461:main.c        ****     
 452              		.loc 1 461 0
 453 0002 084B     		ldr	r3, .L34
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 24


 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 454              		.loc 1 463 0
 455 0004 084E     		ldr	r6, .L34+4
 461:main.c        ****     
 456              		.loc 1 461 0
 457 0006 4400     		lsls	r4, r0, #1
 442:main.c        ****     uint16 filteredRawData;        
 458              		.loc 1 442 0
 459 0008 0500     		movs	r5, r0
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 460              		.loc 1 463 0
 461 000a A15B     		ldrh	r1, [r4, r6]
 461:main.c        ****     
 462              		.loc 1 461 0
 463 000c E05A     		ldrh	r0, [r4, r3]
 464              	.LVL30:
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 465              		.loc 1 463 0
 466 000e FFF7FEFF 		bl	CapSense_IIR4Filter
 467              	.LVL31:
 468:main.c        ****     CapSense_sensorBaselineLow[sensor] = 0u;
 468              		.loc 1 468 0
 469 0012 064B     		ldr	r3, .L34+8
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 470              		.loc 1 469 0
 471 0014 064A     		ldr	r2, .L34+12
 468:main.c        ****     CapSense_sensorBaselineLow[sensor] = 0u;
 472              		.loc 1 468 0
 473 0016 E052     		strh	r0, [r4, r3]
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 474              		.loc 1 469 0
 475 0018 0023     		movs	r3, #0
 476 001a 5355     		strb	r3, [r2, r5]
 470:main.c        **** 
 477              		.loc 1 470 0
 478 001c 054A     		ldr	r2, .L34+16
 464:main.c        **** 
 479              		.loc 1 464 0
 480 001e A053     		strh	r0, [r4, r6]
 470:main.c        **** 
 481              		.loc 1 470 0
 482 0020 A352     		strh	r3, [r4, r2]
 475:main.c        ****         
 483              		.loc 1 475 0
 484              		@ sp needed
 485              	.LVL32:
 486 0022 70BD     		pop	{r4, r5, r6, pc}
 487              	.L35:
 488              		.align	2
 489              	.L34:
 490 0024 00000000 		.word	CapSense_sensorRaw
 491 0028 00000000 		.word	CapSense_rawFilterData1
 492 002c 00000000 		.word	CapSense_sensorBaseline
 493 0030 00000000 		.word	CapSense_sensorBaselineLow
 494 0034 00000000 		.word	CapSense_sensorSignal
 495              		.cfi_endproc
 496              	.LFE39:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 25


 497              		.size	CapSense_CSD_BaseInit_Filtered, .-CapSense_CSD_BaseInit_Filtered
 498              		.section	.text.FirstSensingData,"ax",%progbits
 499              		.align	2
 500              		.global	FirstSensingData
 501              		.code	16
 502              		.thumb_func
 503              		.type	FirstSensingData, %function
 504              	FirstSensingData:
 505              	.LFB40:
 478:main.c        ****     uint32 i;
 506              		.loc 1 478 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              	.LVL33:
 511 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 512              		.cfi_def_cfa_offset 24
 513              		.cfi_offset 3, -24
 514              		.cfi_offset 4, -20
 515              		.cfi_offset 5, -16
 516              		.cfi_offset 6, -12
 517              		.cfi_offset 7, -8
 518              		.cfi_offset 14, -4
 478:main.c        ****     uint32 i;
 519              		.loc 1 478 0
 520 0002 0025     		movs	r5, #0
 481:main.c        ****     {
 521              		.loc 1 481 0
 522 0004 0024     		movs	r4, #0
 523 0006 084F     		ldr	r7, .L41
 524 0008 084E     		ldr	r6, .L41+4
 525              	.LVL34:
 526              	.L38:
 483:main.c        ****         
 527              		.loc 1 483 0
 528 000a 2000     		movs	r0, r4
 529 000c FFF7FEFF 		bl	CapSense_ScanSensor
 530              	.LVL35:
 531              	.L37:
 485:main.c        ****         { 
 532              		.loc 1 485 0 discriminator 1
 533 0010 FFF7FEFF 		bl	CapSense_IsBusy
 534              	.LVL36:
 535 0014 0028     		cmp	r0, #0
 536 0016 FBD1     		bne	.L37
 490:main.c        ****     }
 537              		.loc 1 490 0 discriminator 2
 538 0018 735B     		ldrh	r3, [r6, r5]
 481:main.c        ****     {
 539              		.loc 1 481 0 discriminator 2
 540 001a 0134     		adds	r4, r4, #1
 541              	.LVL37:
 490:main.c        ****     }
 542              		.loc 1 490 0 discriminator 2
 543 001c 7B53     		strh	r3, [r7, r5]
 544 001e 0235     		adds	r5, r5, #2
 481:main.c        ****     {
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 26


 545              		.loc 1 481 0 discriminator 2
 546 0020 062C     		cmp	r4, #6
 547 0022 F2D1     		bne	.L38
 492:main.c        **** 
 548              		.loc 1 492 0
 549              		@ sp needed
 550              	.LVL38:
 551 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 552              	.L42:
 553 0026 C046     		.align	2
 554              	.L41:
 555 0028 00000000 		.word	CapSense_rawFilterData1
 556 002c 00000000 		.word	CapSense_sensorRaw
 557              		.cfi_endproc
 558              	.LFE40:
 559              		.size	FirstSensingData, .-FirstSensingData
 560              		.section	.text.CapSense_UpdateEnabledBaselines_Filter,"ax",%progbits
 561              		.align	2
 562              		.global	CapSense_UpdateEnabledBaselines_Filter
 563              		.code	16
 564              		.thumb_func
 565              		.type	CapSense_UpdateEnabledBaselines_Filter, %function
 566              	CapSense_UpdateEnabledBaselines_Filter:
 567              	.LFB41:
 499:main.c        ****     uint32 i;
 568              		.loc 1 499 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              	.LVL39:
 573 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 574              		.cfi_def_cfa_offset 20
 575              		.cfi_offset 4, -20
 576              		.cfi_offset 5, -16
 577              		.cfi_offset 6, -12
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 5F46     		mov	r7, fp
 581 0004 5646     		mov	r6, r10
 582 0006 4D46     		mov	r5, r9
 583 0008 4446     		mov	r4, r8
 584 000a F0B4     		push	{r4, r5, r6, r7}
 585              		.cfi_def_cfa_offset 36
 586              		.cfi_offset 8, -36
 587              		.cfi_offset 9, -32
 588              		.cfi_offset 10, -28
 589              		.cfi_offset 11, -24
 590              	.LBB40:
 591              	.LBB41:
 592              	.LBB42:
 557:main.c        **** 
 593              		.loc 1 557 0
 594 000c 464B     		ldr	r3, .L67
 595              	.LBE42:
 596              	.LBE41:
 597              	.LBE40:
 499:main.c        ****     uint32 i;
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 27


 598              		.loc 1 499 0
 599 000e 83B0     		sub	sp, sp, #12
 600              		.cfi_def_cfa_offset 48
 601 0010 464E     		ldr	r6, .L67+4
 499:main.c        ****     uint32 i;
 602              		.loc 1 499 0
 603 0012 0025     		movs	r5, #0
 503:main.c        ****     {
 604              		.loc 1 503 0
 605 0014 0024     		movs	r4, #0
 606 0016 464F     		ldr	r7, .L67+8
 607              	.LBB49:
 608              	.LBB46:
 609              	.LBB43:
 557:main.c        **** 
 610              		.loc 1 557 0
 611 0018 9B46     		mov	fp, r3
 612 001a 04E0     		b	.L53
 613              	.LVL40:
 614              	.L44:
 615              	.LBE43:
 616              	.LBE46:
 617              	.LBE49:
 503:main.c        ****     {
 618              		.loc 1 503 0 discriminator 2
 619 001c 0134     		adds	r4, r4, #1
 620              	.LVL41:
 621 001e 0235     		adds	r5, r5, #2
 622 0020 0136     		adds	r6, r6, #1
 623 0022 062C     		cmp	r4, #6
 624 0024 4DD0     		beq	.L64
 625              	.LVL42:
 626              	.L53:
 505:main.c        **** 
 627              		.loc 1 505 0
 628 0026 2100     		movs	r1, r4
 629 0028 3800     		movs	r0, r7
 630 002a FFF7FEFF 		bl	CapSense_GetBitValue
 631              	.LVL43:
 507:main.c        ****         {
 632              		.loc 1 507 0
 633 002e 0028     		cmp	r0, #0
 634 0030 F4D0     		beq	.L44
 635              	.LVL44:
 636              	.LBB50:
 637              	.LBB47:
 638              	.LBB44:
 556:main.c        ****     filteredRawData = CapSense_sensorRaw[sensor];
 639              		.loc 1 556 0
 640 0032 404B     		ldr	r3, .L67+12
 641 0034 1B5D     		ldrb	r3, [r3, r4]
 642 0036 5B00     		lsls	r3, r3, #1
 643 0038 9946     		mov	r9, r3
 644 003a 4A46     		mov	r2, r9
 645 003c 3E4B     		ldr	r3, .L67+16
 646 003e 9B5A     		ldrh	r3, [r3, r2]
 647 0040 9A46     		mov	r10, r3
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 28


 648              	.LVL45:
 557:main.c        **** 
 649              		.loc 1 557 0
 650 0042 5B46     		mov	r3, fp
 651 0044 585B     		ldrh	r0, [r3, r5]
 652              	.LVL46:
 581:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 653              		.loc 1 581 0
 654 0046 3D4B     		ldr	r3, .L67+20
 655 0048 9846     		mov	r8, r3
 656 004a A844     		add	r8, r8, r5
 657 004c 4346     		mov	r3, r8
 658 004e 1988     		ldrh	r1, [r3]
 659 0050 FFF7FEFF 		bl	CapSense_IIR4Filter
 660              	.LVL47:
 582:main.c        ****             Capsense_FilteredRawData[sensor] = filteredRawData;
 661              		.loc 1 582 0
 662 0054 4346     		mov	r3, r8
 663 0056 1880     		strh	r0, [r3]
 583:main.c        ****                     
 664              		.loc 1 583 0
 665 0058 394B     		ldr	r3, .L67+24
 666 005a 5853     		strh	r0, [r3, r5]
 631:main.c        ****     {
 667              		.loc 1 631 0
 668 005c 394B     		ldr	r3, .L67+28
 669 005e 595B     		ldrh	r1, [r3, r5]
 670 0060 9C46     		mov	ip, r3
 671 0062 8842     		cmp	r0, r1
 672 0064 3CD3     		bcc	.L45
 633:main.c        ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 673              		.loc 1 633 0
 674 0066 0023     		movs	r3, #0
 635:main.c        ****     }
 675              		.loc 1 635 0
 676 0068 0122     		movs	r2, #1
 633:main.c        ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 677              		.loc 1 633 0
 678 006a 3370     		strb	r3, [r6]
 634:main.c        ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 679              		.loc 1 634 0
 680 006c 431A     		subs	r3, r0, r1
 681 006e 9BB2     		uxth	r3, r3
 682 0070 0093     		str	r3, [sp]
 683              	.LVL48:
 635:main.c        ****     }
 684              		.loc 1 635 0
 685 0072 0192     		str	r2, [sp, #4]
 686              	.LVL49:
 687              	.L46:
 664:main.c        ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 688              		.loc 1 664 0
 689 0074 9A45     		cmp	r10, r3
 690 0076 08D2     		bcs	.L49
 691 0078 4B46     		mov	r3, r9
 665:main.c        ****                && (sign == 0u)))
 692              		.loc 1 665 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 29


 693 007a 334A     		ldr	r2, .L67+32
 664:main.c        ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 694              		.loc 1 664 0
 695 007c D25A     		ldrh	r2, [r2, r3]
 696 007e 009B     		ldr	r3, [sp]
 697 0080 9A42     		cmp	r2, r3
 698 0082 25D9     		bls	.L52
 666:main.c        ****             {
 699              		.loc 1 666 0
 700 0084 019B     		ldr	r3, [sp, #4]
 701 0086 002B     		cmp	r3, #0
 702 0088 25D1     		bne	.L51
 703              	.L49:
 678:main.c        **** 
 704              		.loc 1 678 0
 705 008a 304B     		ldr	r3, .L67+36
 677:main.c        ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 706              		.loc 1 677 0
 707 008c 0A02     		lsls	r2, r1, #8
 708              	.LVL50:
 678:main.c        **** 
 709              		.loc 1 678 0
 710 008e 9846     		mov	r8, r3
 711 0090 A044     		add	r8, r8, r4
 712              	.LVL51:
 713 0092 4346     		mov	r3, r8
 714 0094 1B78     		ldrb	r3, [r3]
 715 0096 1A43     		orrs	r2, r3
 716              	.LVL52:
 687:main.c        ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 717              		.loc 1 687 0
 718 0098 6346     		mov	r3, ip
 719 009a 511A     		subs	r1, r2, r1
 720              	.LVL53:
 684:main.c        **** 
 721              		.loc 1 684 0
 722 009c 4018     		adds	r0, r0, r1
 723              	.LVL54:
 687:main.c        ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 724              		.loc 1 687 0
 725 009e 020A     		lsrs	r2, r0, #8
 726 00a0 5A53     		strh	r2, [r3, r5]
 688:main.c        **** 
 727              		.loc 1 688 0
 728 00a2 4346     		mov	r3, r8
 690:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 729              		.loc 1 690 0
 730 00a4 0022     		movs	r2, #0
 688:main.c        **** 
 731              		.loc 1 688 0
 732 00a6 1870     		strb	r0, [r3]
 697:main.c        ****     {
 733              		.loc 1 697 0
 734 00a8 009B     		ldr	r3, [sp]
 690:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 735              		.loc 1 690 0
 736 00aa 3270     		strb	r2, [r6]
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 30


 697:main.c        ****     {
 737              		.loc 1 697 0
 738 00ac 9A45     		cmp	r10, r3
 739 00ae 0FD3     		bcc	.L52
 740              	.LVL55:
 741              	.L48:
 716:main.c        ****     }
 742              		.loc 1 716 0
 743 00b0 0022     		movs	r2, #0
 744 00b2 274B     		ldr	r3, .L67+40
 745 00b4 EB18     		adds	r3, r5, r3
 746 00b6 1A80     		strh	r2, [r3]
 747              	.LVL56:
 748              	.L66:
 749              	.LBE44:
 750              	.LBE47:
 751              	.LBE50:
 503:main.c        ****     {
 752              		.loc 1 503 0
 753 00b8 0134     		adds	r4, r4, #1
 754              	.LVL57:
 755 00ba 0235     		adds	r5, r5, #2
 756 00bc 0136     		adds	r6, r6, #1
 757 00be 062C     		cmp	r4, #6
 758 00c0 B1D1     		bne	.L53
 759              	.LVL58:
 760              	.L64:
 513:main.c        **** 
 761              		.loc 1 513 0
 762 00c2 03B0     		add	sp, sp, #12
 763              		@ sp needed
 764              	.LVL59:
 765 00c4 3CBC     		pop	{r2, r3, r4, r5}
 766 00c6 9046     		mov	r8, r2
 767 00c8 9946     		mov	r9, r3
 768 00ca A246     		mov	r10, r4
 769 00cc AB46     		mov	fp, r5
 770 00ce F0BD     		pop	{r4, r5, r6, r7, pc}
 771              	.LVL60:
 772              	.L52:
 773              	.LBB51:
 774              	.LBB48:
 775              	.LBB45:
 697:main.c        ****     {
 776              		.loc 1 697 0
 777 00d0 019B     		ldr	r3, [sp, #4]
 778 00d2 002B     		cmp	r3, #0
 779 00d4 ECD0     		beq	.L48
 780              	.L51:
 710:main.c        ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 781              		.loc 1 710 0
 782 00d6 6B46     		mov	r3, sp
 783 00d8 1D4A     		ldr	r2, .L67+40
 784 00da 1B88     		ldrh	r3, [r3]
 785 00dc 5353     		strh	r3, [r2, r5]
 786 00de 9DE7     		b	.L44
 787              	.LVL61:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 31


 788              	.L45:
 639:main.c        ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 789              		.loc 1 639 0
 790 00e0 0B1A     		subs	r3, r1, r0
 791 00e2 9BB2     		uxth	r3, r3
 792 00e4 0093     		str	r3, [sp]
 793              	.LVL62:
 644:main.c        ****     #else
 794              		.loc 1 644 0
 795 00e6 4B46     		mov	r3, r9
 796 00e8 174A     		ldr	r2, .L67+32
 797 00ea D25A     		ldrh	r2, [r2, r3]
 798 00ec 009B     		ldr	r3, [sp]
 799 00ee 9A42     		cmp	r2, r3
 800 00f0 0BD2     		bcs	.L54
 649:main.c        ****         {
 801              		.loc 1 649 0
 802 00f2 184A     		ldr	r2, .L67+44
 803 00f4 3378     		ldrb	r3, [r6]
 804 00f6 125D     		ldrb	r2, [r2, r4]
 805 00f8 9A42     		cmp	r2, r3
 806 00fa 0AD9     		bls	.L65
 716:main.c        ****     }
 807              		.loc 1 716 0
 808 00fc 0022     		movs	r2, #0
 656:main.c        ****         }
 809              		.loc 1 656 0
 810 00fe 0133     		adds	r3, r3, #1
 811 0100 3370     		strb	r3, [r6]
 716:main.c        ****     }
 812              		.loc 1 716 0
 813 0102 134B     		ldr	r3, .L67+40
 814 0104 EB18     		adds	r3, r5, r3
 815 0106 1A80     		strh	r2, [r3]
 816 0108 D6E7     		b	.L66
 817              	.L54:
 640:main.c        ****     }
 818              		.loc 1 640 0
 819 010a 0023     		movs	r3, #0
 820 010c 0193     		str	r3, [sp, #4]
 821 010e 009B     		ldr	r3, [sp]
 822 0110 B0E7     		b	.L46
 823              	.L65:
 651:main.c        ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 824              		.loc 1 651 0
 825 0112 2000     		movs	r0, r4
 826              	.LVL63:
 827 0114 FFF7FEFF 		bl	CapSense_BaseInit
 828              	.LVL64:
 652:main.c        ****         }
 829              		.loc 1 652 0
 830 0118 0023     		movs	r3, #0
 716:main.c        ****     }
 831              		.loc 1 716 0
 832 011a 0022     		movs	r2, #0
 652:main.c        ****         }
 833              		.loc 1 652 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 32


 834 011c 3370     		strb	r3, [r6]
 716:main.c        ****     }
 835              		.loc 1 716 0
 836 011e 0C4B     		ldr	r3, .L67+40
 837 0120 EB18     		adds	r3, r5, r3
 838 0122 1A80     		strh	r2, [r3]
 839 0124 C8E7     		b	.L66
 840              	.L68:
 841 0126 C046     		.align	2
 842              	.L67:
 843 0128 00000000 		.word	CapSense_sensorRaw
 844 012c 00000000 		.word	CapSense_lowBaselineResetCnt
 845 0130 00000000 		.word	CapSense_sensorEnableMask
 846 0134 00000000 		.word	CapSense_widgetNumber
 847 0138 00000000 		.word	CapSense_noiseThreshold
 848 013c 00000000 		.word	CapSense_rawFilterData1
 849 0140 00000000 		.word	Capsense_FilteredRawData
 850 0144 00000000 		.word	CapSense_sensorBaseline
 851 0148 00000000 		.word	CapSense_negativeNoiseThreshold
 852 014c 00000000 		.word	CapSense_sensorBaselineLow
 853 0150 00000000 		.word	CapSense_sensorSignal
 854 0154 00000000 		.word	CapSense_lowBaselineReset
 855              	.LBE45:
 856              	.LBE48:
 857              	.LBE51:
 858              		.cfi_endproc
 859              	.LFE41:
 860              		.size	CapSense_UpdateEnabledBaselines_Filter, .-CapSense_UpdateEnabledBaselines_Filter
 861              		.section	.text.CapSense_UpdateSensorBaseline_Filter,"ax",%progbits
 862              		.align	2
 863              		.global	CapSense_UpdateSensorBaseline_Filter
 864              		.code	16
 865              		.thumb_func
 866              		.type	CapSense_UpdateSensorBaseline_Filter, %function
 867              	CapSense_UpdateSensorBaseline_Filter:
 868              	.LFB42:
 516:main.c        ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 869              		.loc 1 516 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL65:
 874 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 875              		.cfi_def_cfa_offset 20
 876              		.cfi_offset 4, -20
 877              		.cfi_offset 5, -16
 878              		.cfi_offset 6, -12
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 4546     		mov	r5, r8
 882 0004 5746     		mov	r7, r10
 883 0006 4E46     		mov	r6, r9
 884              	.LBB54:
 885              	.LBB55:
 547:main.c        ****     uint16 noiseThreshold;
 886              		.loc 1 547 0
 887 0008 314B     		ldr	r3, .L86
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 33


 888              	.LBE55:
 889              	.LBE54:
 516:main.c        ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 890              		.loc 1 516 0
 891 000a E0B4     		push	{r5, r6, r7}
 892              		.cfi_def_cfa_offset 32
 893              		.cfi_offset 8, -32
 894              		.cfi_offset 9, -28
 895              		.cfi_offset 10, -24
 896              	.LBB59:
 897              	.LBB56:
 556:main.c        ****     filteredRawData = CapSense_sensorRaw[sensor];
 898              		.loc 1 556 0
 899 000c 1E5C     		ldrb	r6, [r3, r0]
 900 000e 314B     		ldr	r3, .L86+4
 901 0010 7600     		lsls	r6, r6, #1
 902 0012 9F5B     		ldrh	r7, [r3, r6]
 903              	.LVL66:
 557:main.c        **** 
 904              		.loc 1 557 0
 905 0014 304B     		ldr	r3, .L86+8
 906 0016 4400     		lsls	r4, r0, #1
 907              	.LBE56:
 908              	.LBE59:
 516:main.c        ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 909              		.loc 1 516 0
 910 0018 0500     		movs	r5, r0
 911              	.LBB60:
 912              	.LBB57:
 557:main.c        **** 
 913              		.loc 1 557 0
 914 001a 185B     		ldrh	r0, [r3, r4]
 915              	.LVL67:
 581:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 916              		.loc 1 581 0
 917 001c 2F4B     		ldr	r3, .L86+12
 918 001e 9846     		mov	r8, r3
 919 0020 195B     		ldrh	r1, [r3, r4]
 920 0022 FFF7FEFF 		bl	CapSense_IIR4Filter
 921              	.LVL68:
 582:main.c        ****             Capsense_FilteredRawData[sensor] = filteredRawData;
 922              		.loc 1 582 0
 923 0026 4346     		mov	r3, r8
 631:main.c        ****     {
 924              		.loc 1 631 0
 925 0028 2D49     		ldr	r1, .L86+16
 582:main.c        ****             Capsense_FilteredRawData[sensor] = filteredRawData;
 926              		.loc 1 582 0
 927 002a 1853     		strh	r0, [r3, r4]
 583:main.c        ****                     
 928              		.loc 1 583 0
 929 002c 2D4B     		ldr	r3, .L86+20
 930 002e 1853     		strh	r0, [r3, r4]
 631:main.c        ****     {
 931              		.loc 1 631 0
 932 0030 0B5B     		ldrh	r3, [r1, r4]
 933 0032 9C46     		mov	ip, r3
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 34


 934 0034 9842     		cmp	r0, r3
 935 0036 25D3     		bcc	.L70
 633:main.c        ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 936              		.loc 1 633 0
 937 0038 0022     		movs	r2, #0
 938 003a 2B4B     		ldr	r3, .L86+24
 939 003c 5A55     		strb	r2, [r3, r5]
 634:main.c        ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 940              		.loc 1 634 0
 941 003e 6346     		mov	r3, ip
 635:main.c        ****     }
 942              		.loc 1 635 0
 943 0040 0132     		adds	r2, r2, #1
 944 0042 9146     		mov	r9, r2
 634:main.c        ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 945              		.loc 1 634 0
 946 0044 C31A     		subs	r3, r0, r3
 947 0046 9BB2     		uxth	r3, r3
 948              	.LVL69:
 949              	.L71:
 664:main.c        ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 950              		.loc 1 664 0
 951 0048 9F42     		cmp	r7, r3
 952 004a 2AD3     		bcc	.L84
 953              	.L74:
 677:main.c        ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 954              		.loc 1 677 0
 955 004c 6246     		mov	r2, ip
 956 004e 1202     		lsls	r2, r2, #8
 957 0050 9046     		mov	r8, r2
 958              	.LVL70:
 959 0052 4646     		mov	r6, r8
 678:main.c        **** 
 960              		.loc 1 678 0
 961 0054 254A     		ldr	r2, .L86+28
 962              	.LVL71:
 963 0056 9246     		mov	r10, r2
 964 0058 525D     		ldrb	r2, [r2, r5]
 965 005a 3243     		orrs	r2, r6
 966 005c 6646     		mov	r6, ip
 967              	.LVL72:
 968 005e 921B     		subs	r2, r2, r6
 684:main.c        **** 
 969              		.loc 1 684 0
 970 0060 8018     		adds	r0, r0, r2
 971              	.LVL73:
 687:main.c        ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 972              		.loc 1 687 0
 973 0062 020A     		lsrs	r2, r0, #8
 974 0064 0A53     		strh	r2, [r1, r4]
 688:main.c        **** 
 975              		.loc 1 688 0
 976 0066 5246     		mov	r2, r10
 690:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 977              		.loc 1 690 0
 978 0068 0021     		movs	r1, #0
 688:main.c        **** 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 35


 979              		.loc 1 688 0
 980 006a 5055     		strb	r0, [r2, r5]
 690:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 981              		.loc 1 690 0
 982 006c 1E4A     		ldr	r2, .L86+24
 983 006e 5155     		strb	r1, [r2, r5]
 697:main.c        ****     {
 984              		.loc 1 697 0
 985 0070 9F42     		cmp	r7, r3
 986 0072 22D3     		bcc	.L78
 987              	.LVL74:
 988              	.L73:
 716:main.c        ****     }
 989              		.loc 1 716 0
 990 0074 0022     		movs	r2, #0
 991              	.L76:
 992 0076 1E4B     		ldr	r3, .L86+32
 993              	.LBE57:
 994              	.LBE60:
 538:main.c        **** 
 995              		.loc 1 538 0
 996              		@ sp needed
 997 0078 1A53     		strh	r2, [r3, r4]
 998              	.LVL75:
 999              	.LVL76:
 1000 007a 1CBC     		pop	{r2, r3, r4}
 1001 007c 9046     		mov	r8, r2
 1002 007e 9946     		mov	r9, r3
 1003 0080 A246     		mov	r10, r4
 1004 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 1005              	.LVL77:
 1006              	.L70:
 1007              	.LBB61:
 1008              	.LBB58:
 644:main.c        ****     #else
 1009              		.loc 1 644 0
 1010 0084 1B4A     		ldr	r2, .L86+36
 639:main.c        ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1011              		.loc 1 639 0
 1012 0086 1B1A     		subs	r3, r3, r0
 644:main.c        ****     #else
 1013              		.loc 1 644 0
 1014 0088 925B     		ldrh	r2, [r2, r6]
 639:main.c        ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1015              		.loc 1 639 0
 1016 008a 9BB2     		uxth	r3, r3
 1017              	.LVL78:
 644:main.c        ****     #else
 1018              		.loc 1 644 0
 1019 008c 9A42     		cmp	r2, r3
 1020 008e 11D2     		bcs	.L79
 649:main.c        ****         {
 1021              		.loc 1 649 0
 1022 0090 154E     		ldr	r6, .L86+24
 1023 0092 194A     		ldr	r2, .L86+40
 1024 0094 735D     		ldrb	r3, [r6, r5]
 1025              	.LVL79:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 36


 1026 0096 525D     		ldrb	r2, [r2, r5]
 1027 0098 9A42     		cmp	r2, r3
 1028 009a 13D9     		bls	.L85
 656:main.c        ****         }
 1029              		.loc 1 656 0
 1030 009c 0133     		adds	r3, r3, #1
 1031 009e 7355     		strb	r3, [r6, r5]
 1032 00a0 E8E7     		b	.L73
 1033              	.LVL80:
 1034              	.L84:
 665:main.c        ****                && (sign == 0u)))
 1035              		.loc 1 665 0
 1036 00a2 144A     		ldr	r2, .L86+36
 664:main.c        ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1037              		.loc 1 664 0
 1038 00a4 925B     		ldrh	r2, [r2, r6]
 1039 00a6 9A42     		cmp	r2, r3
 1040 00a8 07D9     		bls	.L78
 666:main.c        ****             {
 1041              		.loc 1 666 0
 1042 00aa 4E46     		mov	r6, r9
 1043 00ac 1A00     		movs	r2, r3
 1044 00ae 002E     		cmp	r6, #0
 1045 00b0 E1D1     		bne	.L76
 1046 00b2 CBE7     		b	.L74
 1047              	.LVL81:
 1048              	.L79:
 640:main.c        ****     }
 1049              		.loc 1 640 0
 1050 00b4 0022     		movs	r2, #0
 1051 00b6 9146     		mov	r9, r2
 1052 00b8 C6E7     		b	.L71
 1053              	.LVL82:
 1054              	.L78:
 697:main.c        ****     {
 1055              		.loc 1 697 0
 1056 00ba 4A46     		mov	r2, r9
 1057 00bc 002A     		cmp	r2, #0
 1058 00be D9D0     		beq	.L73
 1059 00c0 1A00     		movs	r2, r3
 1060 00c2 D8E7     		b	.L76
 1061              	.LVL83:
 1062              	.L85:
 651:main.c        ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1063              		.loc 1 651 0
 1064 00c4 2800     		movs	r0, r5
 1065              	.LVL84:
 1066 00c6 FFF7FEFF 		bl	CapSense_BaseInit
 1067              	.LVL85:
 652:main.c        ****         }
 1068              		.loc 1 652 0
 1069 00ca 0023     		movs	r3, #0
 1070 00cc 7355     		strb	r3, [r6, r5]
 1071 00ce D1E7     		b	.L73
 1072              	.L87:
 1073              		.align	2
 1074              	.L86:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 37


 1075 00d0 00000000 		.word	CapSense_widgetNumber
 1076 00d4 00000000 		.word	CapSense_noiseThreshold
 1077 00d8 00000000 		.word	CapSense_sensorRaw
 1078 00dc 00000000 		.word	CapSense_rawFilterData1
 1079 00e0 00000000 		.word	CapSense_sensorBaseline
 1080 00e4 00000000 		.word	Capsense_FilteredRawData
 1081 00e8 00000000 		.word	CapSense_lowBaselineResetCnt
 1082 00ec 00000000 		.word	CapSense_sensorBaselineLow
 1083 00f0 00000000 		.word	CapSense_sensorSignal
 1084 00f4 00000000 		.word	CapSense_negativeNoiseThreshold
 1085 00f8 00000000 		.word	CapSense_lowBaselineReset
 1086              	.LBE58:
 1087              	.LBE61:
 1088              		.cfi_endproc
 1089              	.LFE42:
 1090              		.size	CapSense_UpdateSensorBaseline_Filter, .-CapSense_UpdateSensorBaseline_Filter
 1091              		.section	.text.CapSense_UpdateBaselineNoThreshold_Filter,"ax",%progbits
 1092              		.align	2
 1093              		.global	CapSense_UpdateBaselineNoThreshold_Filter
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	CapSense_UpdateBaselineNoThreshold_Filter, %function
 1097              	CapSense_UpdateBaselineNoThreshold_Filter:
 1098              	.LFB43:
 541:main.c        ****     uint32 calc;
 1099              		.loc 1 541 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              	.LVL86:
 1104 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1105              		.cfi_def_cfa_offset 20
 1106              		.cfi_offset 4, -20
 1107              		.cfi_offset 5, -16
 1108              		.cfi_offset 6, -12
 1109              		.cfi_offset 7, -8
 1110              		.cfi_offset 14, -4
 1111 0002 4546     		mov	r5, r8
 1112 0004 5746     		mov	r7, r10
 1113 0006 4E46     		mov	r6, r9
 547:main.c        ****     uint16 noiseThreshold;
 1114              		.loc 1 547 0
 1115 0008 314B     		ldr	r3, .L105
 541:main.c        ****     uint32 calc;
 1116              		.loc 1 541 0
 1117 000a E0B4     		push	{r5, r6, r7}
 1118              		.cfi_def_cfa_offset 32
 1119              		.cfi_offset 8, -32
 1120              		.cfi_offset 9, -28
 1121              		.cfi_offset 10, -24
 556:main.c        ****     filteredRawData = CapSense_sensorRaw[sensor];
 1122              		.loc 1 556 0
 1123 000c 1E5C     		ldrb	r6, [r3, r0]
 1124 000e 314B     		ldr	r3, .L105+4
 1125 0010 7600     		lsls	r6, r6, #1
 1126 0012 9F5B     		ldrh	r7, [r3, r6]
 1127              	.LVL87:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 38


 557:main.c        **** 
 1128              		.loc 1 557 0
 1129 0014 304B     		ldr	r3, .L105+8
 1130 0016 4400     		lsls	r4, r0, #1
 541:main.c        ****     uint32 calc;
 1131              		.loc 1 541 0
 1132 0018 0500     		movs	r5, r0
 557:main.c        **** 
 1133              		.loc 1 557 0
 1134 001a 185B     		ldrh	r0, [r3, r4]
 1135              	.LVL88:
 581:main.c        ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1136              		.loc 1 581 0
 1137 001c 2F4B     		ldr	r3, .L105+12
 1138 001e 9846     		mov	r8, r3
 1139 0020 195B     		ldrh	r1, [r3, r4]
 1140 0022 FFF7FEFF 		bl	CapSense_IIR4Filter
 1141              	.LVL89:
 582:main.c        ****             Capsense_FilteredRawData[sensor] = filteredRawData;
 1142              		.loc 1 582 0
 1143 0026 4346     		mov	r3, r8
 631:main.c        ****     {
 1144              		.loc 1 631 0
 1145 0028 2D49     		ldr	r1, .L105+16
 582:main.c        ****             Capsense_FilteredRawData[sensor] = filteredRawData;
 1146              		.loc 1 582 0
 1147 002a 1853     		strh	r0, [r3, r4]
 583:main.c        ****                     
 1148              		.loc 1 583 0
 1149 002c 2D4B     		ldr	r3, .L105+20
 1150 002e 1853     		strh	r0, [r3, r4]
 631:main.c        ****     {
 1151              		.loc 1 631 0
 1152 0030 0B5B     		ldrh	r3, [r1, r4]
 1153 0032 9C46     		mov	ip, r3
 1154 0034 9842     		cmp	r0, r3
 1155 0036 25D3     		bcc	.L89
 633:main.c        ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1156              		.loc 1 633 0
 1157 0038 0022     		movs	r2, #0
 1158 003a 2B4B     		ldr	r3, .L105+24
 1159 003c 5A55     		strb	r2, [r3, r5]
 634:main.c        ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1160              		.loc 1 634 0
 1161 003e 6346     		mov	r3, ip
 635:main.c        ****     }
 1162              		.loc 1 635 0
 1163 0040 0132     		adds	r2, r2, #1
 1164 0042 9146     		mov	r9, r2
 634:main.c        ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1165              		.loc 1 634 0
 1166 0044 C31A     		subs	r3, r0, r3
 1167 0046 9BB2     		uxth	r3, r3
 1168              	.LVL90:
 1169              	.L90:
 664:main.c        ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1170              		.loc 1 664 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 39


 1171 0048 9F42     		cmp	r7, r3
 1172 004a 2AD3     		bcc	.L103
 1173              	.L93:
 677:main.c        ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1174              		.loc 1 677 0
 1175 004c 6246     		mov	r2, ip
 1176 004e 1202     		lsls	r2, r2, #8
 1177 0050 9046     		mov	r8, r2
 1178              	.LVL91:
 1179 0052 4646     		mov	r6, r8
 678:main.c        **** 
 1180              		.loc 1 678 0
 1181 0054 254A     		ldr	r2, .L105+28
 1182              	.LVL92:
 1183 0056 9246     		mov	r10, r2
 1184 0058 525D     		ldrb	r2, [r2, r5]
 1185 005a 3243     		orrs	r2, r6
 1186 005c 6646     		mov	r6, ip
 1187              	.LVL93:
 1188 005e 921B     		subs	r2, r2, r6
 684:main.c        **** 
 1189              		.loc 1 684 0
 1190 0060 8018     		adds	r0, r0, r2
 1191              	.LVL94:
 687:main.c        ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1192              		.loc 1 687 0
 1193 0062 020A     		lsrs	r2, r0, #8
 1194 0064 0A53     		strh	r2, [r1, r4]
 688:main.c        **** 
 1195              		.loc 1 688 0
 1196 0066 5246     		mov	r2, r10
 690:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1197              		.loc 1 690 0
 1198 0068 0021     		movs	r1, #0
 688:main.c        **** 
 1199              		.loc 1 688 0
 1200 006a 5055     		strb	r0, [r2, r5]
 690:main.c        ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1201              		.loc 1 690 0
 1202 006c 1E4A     		ldr	r2, .L105+24
 1203 006e 5155     		strb	r1, [r2, r5]
 697:main.c        ****     {
 1204              		.loc 1 697 0
 1205 0070 9F42     		cmp	r7, r3
 1206 0072 22D3     		bcc	.L97
 1207              	.LVL95:
 1208              	.L92:
 716:main.c        ****     }
 1209              		.loc 1 716 0
 1210 0074 0022     		movs	r2, #0
 1211              	.L95:
 1212 0076 1E4B     		ldr	r3, .L105+32
 723:main.c        **** #endif
 1213              		.loc 1 723 0
 1214              		@ sp needed
 1215 0078 1A53     		strh	r2, [r3, r4]
 1216              	.LVL96:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 40


 1217              	.LVL97:
 1218 007a 1CBC     		pop	{r2, r3, r4}
 1219 007c 9046     		mov	r8, r2
 1220 007e 9946     		mov	r9, r3
 1221 0080 A246     		mov	r10, r4
 1222 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 1223              	.LVL98:
 1224              	.L89:
 644:main.c        ****     #else
 1225              		.loc 1 644 0
 1226 0084 1B4A     		ldr	r2, .L105+36
 639:main.c        ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1227              		.loc 1 639 0
 1228 0086 1B1A     		subs	r3, r3, r0
 644:main.c        ****     #else
 1229              		.loc 1 644 0
 1230 0088 925B     		ldrh	r2, [r2, r6]
 639:main.c        ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1231              		.loc 1 639 0
 1232 008a 9BB2     		uxth	r3, r3
 1233              	.LVL99:
 644:main.c        ****     #else
 1234              		.loc 1 644 0
 1235 008c 9A42     		cmp	r2, r3
 1236 008e 11D2     		bcs	.L98
 649:main.c        ****         {
 1237              		.loc 1 649 0
 1238 0090 154E     		ldr	r6, .L105+24
 1239 0092 194A     		ldr	r2, .L105+40
 1240 0094 735D     		ldrb	r3, [r6, r5]
 1241              	.LVL100:
 1242 0096 525D     		ldrb	r2, [r2, r5]
 1243 0098 9A42     		cmp	r2, r3
 1244 009a 13D9     		bls	.L104
 656:main.c        ****         }
 1245              		.loc 1 656 0
 1246 009c 0133     		adds	r3, r3, #1
 1247 009e 7355     		strb	r3, [r6, r5]
 1248 00a0 E8E7     		b	.L92
 1249              	.LVL101:
 1250              	.L103:
 665:main.c        ****                && (sign == 0u)))
 1251              		.loc 1 665 0 discriminator 1
 1252 00a2 144A     		ldr	r2, .L105+36
 664:main.c        ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1253              		.loc 1 664 0 discriminator 1
 1254 00a4 925B     		ldrh	r2, [r2, r6]
 1255 00a6 9A42     		cmp	r2, r3
 1256 00a8 07D9     		bls	.L97
 666:main.c        ****             {
 1257              		.loc 1 666 0
 1258 00aa 4E46     		mov	r6, r9
 1259 00ac 1A00     		movs	r2, r3
 1260 00ae 002E     		cmp	r6, #0
 1261 00b0 E1D1     		bne	.L95
 1262 00b2 CBE7     		b	.L93
 1263              	.LVL102:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 41


 1264              	.L98:
 640:main.c        ****     }
 1265              		.loc 1 640 0
 1266 00b4 0022     		movs	r2, #0
 1267 00b6 9146     		mov	r9, r2
 1268 00b8 C6E7     		b	.L90
 1269              	.LVL103:
 1270              	.L97:
 697:main.c        ****     {
 1271              		.loc 1 697 0
 1272 00ba 4A46     		mov	r2, r9
 1273 00bc 002A     		cmp	r2, #0
 1274 00be D9D0     		beq	.L92
 1275 00c0 1A00     		movs	r2, r3
 1276 00c2 D8E7     		b	.L95
 1277              	.LVL104:
 1278              	.L104:
 651:main.c        ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1279              		.loc 1 651 0
 1280 00c4 2800     		movs	r0, r5
 1281              	.LVL105:
 1282 00c6 FFF7FEFF 		bl	CapSense_BaseInit
 1283              	.LVL106:
 652:main.c        ****         }
 1284              		.loc 1 652 0
 1285 00ca 0023     		movs	r3, #0
 1286 00cc 7355     		strb	r3, [r6, r5]
 1287 00ce D1E7     		b	.L92
 1288              	.L106:
 1289              		.align	2
 1290              	.L105:
 1291 00d0 00000000 		.word	CapSense_widgetNumber
 1292 00d4 00000000 		.word	CapSense_noiseThreshold
 1293 00d8 00000000 		.word	CapSense_sensorRaw
 1294 00dc 00000000 		.word	CapSense_rawFilterData1
 1295 00e0 00000000 		.word	CapSense_sensorBaseline
 1296 00e4 00000000 		.word	Capsense_FilteredRawData
 1297 00e8 00000000 		.word	CapSense_lowBaselineResetCnt
 1298 00ec 00000000 		.word	CapSense_sensorBaselineLow
 1299 00f0 00000000 		.word	CapSense_sensorSignal
 1300 00f4 00000000 		.word	CapSense_negativeNoiseThreshold
 1301 00f8 00000000 		.word	CapSense_lowBaselineReset
 1302              		.cfi_endproc
 1303              	.LFE43:
 1304              		.size	CapSense_UpdateBaselineNoThreshold_Filter, .-CapSense_UpdateBaselineNoThreshold_Filter
 1305              		.section	.text.startup.main,"ax",%progbits
 1306              		.align	2
 1307              		.global	main
 1308              		.code	16
 1309              		.thumb_func
 1310              		.type	main, %function
 1311              	main:
 1312              	.LFB33:
  99:main.c        **** 	/* Enable global interrupt */
 1313              		.loc 1 99 0
 1314              		.cfi_startproc
 1315              		@ Volatile: function does not return.
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 42


 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1319              		.cfi_def_cfa_offset 24
 1320              		.cfi_offset 3, -24
 1321              		.cfi_offset 4, -20
 1322              		.cfi_offset 5, -16
 1323              		.cfi_offset 6, -12
 1324              		.cfi_offset 7, -8
 1325              		.cfi_offset 14, -4
 1326 0002 5F46     		mov	r7, fp
 1327 0004 5646     		mov	r6, r10
 1328 0006 4D46     		mov	r5, r9
 1329 0008 4446     		mov	r4, r8
 1330 000a F0B4     		push	{r4, r5, r6, r7}
 1331              		.cfi_def_cfa_offset 40
 1332              		.cfi_offset 8, -40
 1333              		.cfi_offset 9, -36
 1334              		.cfi_offset 10, -32
 1335              		.cfi_offset 11, -28
 101:main.c        ****     
 1336              		.loc 1 101 0
 1337              		.syntax divided
 1338              	@ 101 "main.c" 1
 1339 000c 62B6     		CPSIE   i
 1340              	@ 0 "" 2
 103:main.c        ****     UnUsedPin_9_Write(0);
 1341              		.loc 1 103 0
 1342              		.thumb
 1343              		.syntax unified
 1344 000e 0020     		movs	r0, #0
 1345 0010 FFF7FEFF 		bl	UnUsedPin_16_Write
 1346              	.LVL107:
 104:main.c        ****     UnUsedPin_18_Write(0);
 1347              		.loc 1 104 0
 1348 0014 0020     		movs	r0, #0
 1349 0016 FFF7FEFF 		bl	UnUsedPin_9_Write
 1350              	.LVL108:
 105:main.c        ****     UnUsedPin_10_Write(0);
 1351              		.loc 1 105 0
 1352 001a 0020     		movs	r0, #0
 1353 001c FFF7FEFF 		bl	UnUsedPin_18_Write
 1354              	.LVL109:
 106:main.c        ****     UnUsedPin_14_Write(0);
 1355              		.loc 1 106 0
 1356 0020 0020     		movs	r0, #0
 1357 0022 FFF7FEFF 		bl	UnUsedPin_10_Write
 1358              	.LVL110:
 107:main.c        ****     UnUsedPin_15_Write(0);
 1359              		.loc 1 107 0
 1360 0026 0020     		movs	r0, #0
 1361 0028 FFF7FEFF 		bl	UnUsedPin_14_Write
 1362              	.LVL111:
 108:main.c        ****     #ifndef CYDebug
 1363              		.loc 1 108 0
 1364 002c 0020     		movs	r0, #0
 1365 002e FFF7FEFF 		bl	UnUsedPin_15_Write
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 43


 1366              	.LVL112:
 110:main.c        ****     hawkeye_data_Write(0);
 1367              		.loc 1 110 0
 1368 0032 0020     		movs	r0, #0
 1369 0034 FFF7FEFF 		bl	hawkeye_clk_Write
 1370              	.LVL113:
 111:main.c        ****     #endif
 1371              		.loc 1 111 0
 1372 0038 0020     		movs	r0, #0
 1373 003a FFF7FEFF 		bl	hawkeye_data_Write
 1374              	.LVL114:
 114:main.c        ****     
 1375              		.loc 1 114 0
 1376 003e FF20     		movs	r0, #255
 1377 0040 FFF7FEFF 		bl	Clock_1_StartEx
 1378              	.LVL115:
 117:main.c        **** 
 1379              		.loc 1 117 0
 1380 0044 4B48     		ldr	r0, .L139
 1381 0046 FFF7FEFF 		bl	TC_CC_ISR_StartEx
 1382              	.LVL116:
 120:main.c        ****     
 1383              		.loc 1 120 0
 1384 004a FFF7FEFF 		bl	Timer_1_Start
 1385              	.LVL117:
 130:main.c        ****     CyDelay(20u);
 1386              		.loc 1 130 0
 1387 004e 1420     		movs	r0, #20
 1388 0050 FFF7FEFF 		bl	CyDelay
 1389              	.LVL118:
 131:main.c        ****     
 1390              		.loc 1 131 0
 1391 0054 1420     		movs	r0, #20
 1392 0056 FFF7FEFF 		bl	CyDelay
 1393              	.LVL119:
 134:main.c        ****     
 1394              		.loc 1 134 0
 1395 005a FFF7FEFF 		bl	CapSense_Start
 1396              	.LVL120:
 136:main.c        ****     
 1397              		.loc 1 136 0
 1398 005e FFF7FEFF 		bl	FirstSensingData
 1399              	.LVL121:
 1400 0062 454B     		ldr	r3, .L139+4
 1401 0064 1027     		movs	r7, #16
 1402 0066 9B46     		mov	fp, r3
 1403 0068 444B     		ldr	r3, .L139+8
 1404 006a 454C     		ldr	r4, .L139+12
 1405 006c 9A46     		mov	r10, r3
 1406              	.LVL122:
 1407              	.L108:
  99:main.c        **** 	/* Enable global interrupt */
 1408              		.loc 1 99 0
 1409 006e 0023     		movs	r3, #0
 1410 0070 0026     		movs	r6, #0
 1411 0072 9846     		mov	r8, r3
 1412              	.LVL123:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 44


 1413              	.L110:
 1414              	.LBB72:
 1415              	.LBB73:
 1416              	.LBB74:
 1417              	.LBB75:
 429:main.c        ****     while(CapSense_IsBusy() != 0u)
 1418              		.loc 1 429 0
 1419 0074 4046     		mov	r0, r8
 1420 0076 FFF7FEFF 		bl	CapSense_ScanSensor
 1421              	.LVL124:
 1422              	.L109:
 430:main.c        ****     { 
 1423              		.loc 1 430 0
 1424 007a FFF7FEFF 		bl	CapSense_IsBusy
 1425              	.LVL125:
 1426 007e 051E     		subs	r5, r0, #0
 1427 0080 FBD1     		bne	.L109
 1428              	.LVL126:
 1429              	.LBB76:
 1430              	.LBB77:
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 1431              		.loc 1 463 0
 1432 0082 B146     		mov	r9, r6
 461:main.c        ****     
 1433              		.loc 1 461 0
 1434 0084 5B46     		mov	r3, fp
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 1435              		.loc 1 463 0
 1436 0086 D144     		add	r9, r9, r10
 461:main.c        ****     
 1437              		.loc 1 461 0
 1438 0088 985B     		ldrh	r0, [r3, r6]
 1439              	.LVL127:
 463:main.c        ****     CapSense_rawFilterData1[sensor] = filteredRawData;
 1440              		.loc 1 463 0
 1441 008a 4B46     		mov	r3, r9
 1442 008c 1988     		ldrh	r1, [r3]
 1443 008e FFF7FEFF 		bl	CapSense_IIR4Filter
 1444              	.LVL128:
 464:main.c        **** 
 1445              		.loc 1 464 0
 1446 0092 4B46     		mov	r3, r9
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 1447              		.loc 1 469 0
 1448 0094 4246     		mov	r2, r8
 464:main.c        **** 
 1449              		.loc 1 464 0
 1450 0096 1880     		strh	r0, [r3]
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 1451              		.loc 1 469 0
 1452 0098 3A4B     		ldr	r3, .L139+16
 468:main.c        ****     CapSense_sensorBaselineLow[sensor] = 0u;
 1453              		.loc 1 468 0
 1454 009a A053     		strh	r0, [r4, r6]
 469:main.c        ****     CapSense_sensorSignal[sensor] = 0u;
 1455              		.loc 1 469 0
 1456 009c 9D54     		strb	r5, [r3, r2]
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 45


 470:main.c        **** 
 1457              		.loc 1 470 0
 1458 009e 3A4B     		ldr	r3, .L139+20
 1459 00a0 9D53     		strh	r5, [r3, r6]
 1460              	.LVL129:
 1461              	.LBE77:
 1462              	.LBE76:
 1463              	.LBE75:
 1464              	.LBE74:
 416:main.c        ****         {
 1465              		.loc 1 416 0
 1466 00a2 0123     		movs	r3, #1
 1467 00a4 9C46     		mov	ip, r3
 1468 00a6 E044     		add	r8, r8, ip
 1469              	.LVL130:
 1470 00a8 4346     		mov	r3, r8
 1471 00aa 0236     		adds	r6, r6, #2
 1472 00ac 062B     		cmp	r3, #6
 1473 00ae E1D1     		bne	.L110
 1474 00b0 013F     		subs	r7, r7, #1
 1475 00b2 FFB2     		uxtb	r7, r7
 414:main.c        ****     {
 1476              		.loc 1 414 0
 1477 00b4 002F     		cmp	r7, #0
 1478 00b6 DAD1     		bne	.L108
 1479 00b8 344B     		ldr	r3, .L139+24
 1480 00ba 354E     		ldr	r6, .L139+28
 1481 00bc 9B46     		mov	fp, r3
 1482 00be 354B     		ldr	r3, .L139+32
 1483 00c0 354D     		ldr	r5, .L139+36
 1484 00c2 9846     		mov	r8, r3
 1485              	.LVL131:
 1486 00c4 0623     		movs	r3, #6
 1487 00c6 9946     		mov	r9, r3
 1488              	.LBE73:
 1489              	.LBE72:
 224:main.c        ****             }
 1490              		.loc 1 224 0
 1491 00c8 0023     		movs	r3, #0
 1492 00ca 9A46     		mov	r10, r3
 1493              	.LVL132:
 1494              	.L111:
 145:main.c        **** 		
 1495              		.loc 1 145 0
 1496 00cc FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 1497              	.LVL133:
 1498              	.L112:
 148:main.c        ****         {
 1499              		.loc 1 148 0 discriminator 1
 1500 00d0 FFF7FEFF 		bl	CapSense_IsBusy
 1501              	.LVL134:
 1502 00d4 0028     		cmp	r0, #0
 1503 00d6 FBD1     		bne	.L112
 1504 00d8 0027     		movs	r7, #0
 1505 00da 02E0     		b	.L114
 1506              	.LVL135:
 1507              	.L113:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 46


 1508              	.LBB78:
 1509              	.LBB79:
 503:main.c        ****     {
 1510              		.loc 1 503 0
 1511 00dc 0137     		adds	r7, r7, #1
 1512              	.LVL136:
 1513 00de 062F     		cmp	r7, #6
 1514 00e0 0BD0     		beq	.L137
 1515              	.LVL137:
 1516              	.L114:
 505:main.c        **** 
 1517              		.loc 1 505 0
 1518 00e2 3900     		movs	r1, r7
 1519 00e4 5846     		mov	r0, fp
 1520 00e6 FFF7FEFF 		bl	CapSense_GetBitValue
 1521              	.LVL138:
 507:main.c        ****         {
 1522              		.loc 1 507 0
 1523 00ea 0028     		cmp	r0, #0
 1524 00ec F6D0     		beq	.L113
 1525              	.LVL139:
 1526              	.LBB80:
 1527              	.LBB81:
 532:main.c        **** 
 1528              		.loc 1 532 0
 1529 00ee 3800     		movs	r0, r7
 1530              	.LVL140:
 1531              	.LBE81:
 1532              	.LBE80:
 503:main.c        ****     {
 1533              		.loc 1 503 0
 1534 00f0 0137     		adds	r7, r7, #1
 1535              	.LVL141:
 1536              	.LBB83:
 1537              	.LBB82:
 532:main.c        **** 
 1538              		.loc 1 532 0
 1539 00f2 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold_Filter
 1540              	.LVL142:
 1541              	.LBE82:
 1542              	.LBE83:
 503:main.c        ****     {
 1543              		.loc 1 503 0
 1544 00f6 062F     		cmp	r7, #6
 1545 00f8 F3D1     		bne	.L114
 1546              	.LVL143:
 1547              	.L137:
 1548              	.LBE79:
 1549              	.LBE78:
 160:main.c        ****         
 1550              		.loc 1 160 0
 1551 00fa FFF7FEFF 		bl	CapSense_CheckIsAnyWidgetActive
 1552              	.LVL144:
 211:main.c        ****             }
 1553              		.loc 1 211 0
 1554 00fe 3188     		ldrh	r1, [r6]
 1555 0100 2288     		ldrh	r2, [r4]
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 47


 1556 0102 0023     		movs	r3, #0
 1557 0104 9142     		cmp	r1, r2
 1558 0106 00D9     		bls	.L116
 1559 0108 8B1A     		subs	r3, r1, r2
 1560              	.L116:
 1561 010a 2B80     		strh	r3, [r5]
 1562 010c 7188     		ldrh	r1, [r6, #2]
 1563 010e 6288     		ldrh	r2, [r4, #2]
 1564 0110 0023     		movs	r3, #0
 1565 0112 9142     		cmp	r1, r2
 1566 0114 00D9     		bls	.L118
 1567 0116 8B1A     		subs	r3, r1, r2
 1568              	.L118:
 1569 0118 6B80     		strh	r3, [r5, #2]
 1570 011a B188     		ldrh	r1, [r6, #4]
 1571 011c A288     		ldrh	r2, [r4, #4]
 1572 011e 0023     		movs	r3, #0
 1573 0120 9142     		cmp	r1, r2
 1574 0122 00D9     		bls	.L120
 1575 0124 8B1A     		subs	r3, r1, r2
 1576              	.L120:
 1577 0126 AB80     		strh	r3, [r5, #4]
 1578 0128 F188     		ldrh	r1, [r6, #6]
 1579 012a E288     		ldrh	r2, [r4, #6]
 1580 012c 0023     		movs	r3, #0
 1581 012e 9142     		cmp	r1, r2
 1582 0130 00D9     		bls	.L122
 1583 0132 8B1A     		subs	r3, r1, r2
 1584              	.L122:
 1585 0134 EB80     		strh	r3, [r5, #6]
 1586 0136 3189     		ldrh	r1, [r6, #8]
 1587 0138 2289     		ldrh	r2, [r4, #8]
 1588 013a 0023     		movs	r3, #0
 1589 013c 9142     		cmp	r1, r2
 1590 013e 00D9     		bls	.L124
 1591 0140 8B1A     		subs	r3, r1, r2
 1592              	.L124:
 1593 0142 2B81     		strh	r3, [r5, #8]
 1594 0144 7189     		ldrh	r1, [r6, #10]
 1595 0146 6289     		ldrh	r2, [r4, #10]
 1596 0148 0023     		movs	r3, #0
 1597 014a 9142     		cmp	r1, r2
 1598 014c 00D9     		bls	.L126
 1599 014e 8B1A     		subs	r3, r1, r2
 1600              	.L126:
 1601 0150 6B81     		strh	r3, [r5, #10]
 1602 0152 4A46     		mov	r2, r9
 1603 0154 4346     		mov	r3, r8
 1604 0156 5A70     		strb	r2, [r3, #1]
 217:main.c        ****             {
 1605              		.loc 1 217 0
 1606 0158 9B78     		ldrb	r3, [r3, #2]
 1607 015a 012B     		cmp	r3, #1
 1608 015c 05D9     		bls	.L138
 223:main.c        ****                 d = 0;
 1609              		.loc 1 223 0
 1610 015e FFF7FEFF 		bl	report_debug_data
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 48


 1611              	.LVL145:
 224:main.c        ****             }
 1612              		.loc 1 224 0
 1613 0162 4346     		mov	r3, r8
 1614 0164 5246     		mov	r2, r10
 1615 0166 9A70     		strb	r2, [r3, #2]
 1616 0168 B0E7     		b	.L111
 1617              	.L138:
 219:main.c        ****             }
 1618              		.loc 1 219 0
 1619 016a 4246     		mov	r2, r8
 1620 016c 0133     		adds	r3, r3, #1
 1621 016e 9370     		strb	r3, [r2, #2]
 1622 0170 ACE7     		b	.L111
 1623              	.L140:
 1624 0172 C046     		.align	2
 1625              	.L139:
 1626 0174 00000000 		.word	InterruptHandler
 1627 0178 00000000 		.word	CapSense_sensorRaw
 1628 017c 00000000 		.word	CapSense_rawFilterData1
 1629 0180 00000000 		.word	CapSense_sensorBaseline
 1630 0184 00000000 		.word	CapSense_sensorBaselineLow
 1631 0188 00000000 		.word	CapSense_sensorSignal
 1632 018c 00000000 		.word	CapSense_sensorEnableMask
 1633 0190 00000000 		.word	Capsense_FilteredRawData
 1634 0194 00000000 		.word	.LANCHOR0
 1635 0198 00000000 		.word	Sub_Buff
 1636              		.cfi_endproc
 1637              	.LFE33:
 1638              		.size	main, .-main
 1639              		.section	.text.WDT_Init,"ax",%progbits
 1640              		.align	2
 1641              		.global	WDT_Init
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	WDT_Init, %function
 1645              	WDT_Init:
 1646              	.LFB44:
 729:main.c        ****     WDT_Ignore = IgnoreBit; /* for Reset mode */
 1647              		.loc 1 729 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651              	.LVL146:
 1652 0000 10B5     		push	{r4, lr}
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 4, -8
 1655              		.cfi_offset 14, -4
 729:main.c        ****     WDT_Ignore = IgnoreBit; /* for Reset mode */
 1656              		.loc 1 729 0
 1657 0002 0400     		movs	r4, r0
 730:main.c        ****     WDT_Match = Match_ms;  /* for Match mode */
 1658              		.loc 1 730 0
 1659 0004 084B     		ldr	r3, .L142
 749:main.c        **** 
 1660              		.loc 1 749 0
 1661              		@ sp needed
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 49


 730:main.c        ****     WDT_Match = Match_ms;  /* for Match mode */
 1662              		.loc 1 730 0
 1663 0006 1880     		strh	r0, [r3]
 731:main.c        ****     
 1664              		.loc 1 731 0
 1665 0008 084B     		ldr	r3, .L142+4
 1666 000a 1980     		strh	r1, [r3]
 734:main.c        ****     
 1667              		.loc 1 734 0
 1668 000c FFF7FEFF 		bl	isr_WDT_Stop
 1669              	.LVL147:
 737:main.c        **** 
 1670              		.loc 1 737 0
 1671 0010 0748     		ldr	r0, .L142+8
 1672 0012 FFF7FEFF 		bl	CySysWdtSetMatch
 1673              	.LVL148:
 742:main.c        **** 
 1674              		.loc 1 742 0
 1675 0016 2000     		movs	r0, r4
 1676 0018 FFF7FEFF 		bl	CySysWdtSetIgnoreBits
 1677              	.LVL149:
 745:main.c        **** 
 1678              		.loc 1 745 0
 1679 001c FFF7FEFF 		bl	CySysWdtEnable
 1680              	.LVL150:
 748:main.c        **** }
 1681              		.loc 1 748 0
 1682 0020 FFF7FEFF 		bl	CySysWdtUnmaskInterrupt
 1683              	.LVL151:
 749:main.c        **** 
 1684              		.loc 1 749 0
 1685 0024 10BD     		pop	{r4, pc}
 1686              	.L143:
 1687 0026 C046     		.align	2
 1688              	.L142:
 1689 0028 00000000 		.word	WDT_Ignore
 1690 002c 00000000 		.word	WDT_Match
 1691 0030 FFFF0000 		.word	65535
 1692              		.cfi_endproc
 1693              	.LFE44:
 1694              		.size	WDT_Init, .-WDT_Init
 1695              		.section	.text.WDT_Match_Init,"ax",%progbits
 1696              		.align	2
 1697              		.global	WDT_Match_Init
 1698              		.code	16
 1699              		.thumb_func
 1700              		.type	WDT_Match_Init, %function
 1701              	WDT_Match_Init:
 1702              	.LFB45:
 756:main.c        ****     WDT_Ignore = IgnoreBit;
 1703              		.loc 1 756 0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707              	.LVL152:
 757:main.c        ****     WDT_Match = Match_ms;
 1708              		.loc 1 757 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 50


 1709 0000 0C4B     		ldr	r3, .L145
 756:main.c        ****     WDT_Ignore = IgnoreBit;
 1710              		.loc 1 756 0
 1711 0002 70B5     		push	{r4, r5, r6, lr}
 1712              		.cfi_def_cfa_offset 16
 1713              		.cfi_offset 4, -16
 1714              		.cfi_offset 5, -12
 1715              		.cfi_offset 6, -8
 1716              		.cfi_offset 14, -4
 758:main.c        ****     
 1717              		.loc 1 758 0
 1718 0004 0C4D     		ldr	r5, .L145+4
 757:main.c        ****     WDT_Match = Match_ms;
 1719              		.loc 1 757 0
 1720 0006 1880     		strh	r0, [r3]
 756:main.c        ****     WDT_Ignore = IgnoreBit;
 1721              		.loc 1 756 0
 1722 0008 0400     		movs	r4, r0
 761:main.c        ****     
 1723              		.loc 1 761 0
 1724 000a 0C48     		ldr	r0, .L145+8
 1725              	.LVL153:
 758:main.c        ****     
 1726              		.loc 1 758 0
 1727 000c 2980     		strh	r1, [r5]
 761:main.c        ****     
 1728              		.loc 1 761 0
 1729 000e FFF7FEFF 		bl	isr_WDT_StartEx
 1730              	.LVL154:
 765:main.c        ****     
 1731              		.loc 1 765 0
 1732 0012 FFF7FEFF 		bl	CySysWdtGetMatch
 1733              	.LVL155:
 1734 0016 2B88     		ldrh	r3, [r5]
 777:main.c        **** /********************************************************************************************/
 1735              		.loc 1 777 0
 1736              		@ sp needed
 765:main.c        ****     
 1737              		.loc 1 765 0
 1738 0018 9A00     		lsls	r2, r3, #2
 1739 001a D318     		adds	r3, r2, r3
 1740 001c DB00     		lsls	r3, r3, #3
 1741 001e 1818     		adds	r0, r3, r0
 1742 0020 FFF7FEFF 		bl	CySysWdtSetMatch
 1743              	.LVL156:
 770:main.c        **** 
 1744              		.loc 1 770 0
 1745 0024 2000     		movs	r0, r4
 1746 0026 FFF7FEFF 		bl	CySysWdtSetIgnoreBits
 1747              	.LVL157:
 773:main.c        **** 
 1748              		.loc 1 773 0
 1749 002a FFF7FEFF 		bl	CySysWdtEnable
 1750              	.LVL158:
 776:main.c        **** }
 1751              		.loc 1 776 0
 1752 002e FFF7FEFF 		bl	CySysWdtUnmaskInterrupt
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 51


 1753              	.LVL159:
 777:main.c        **** /********************************************************************************************/
 1754              		.loc 1 777 0
 1755 0032 70BD     		pop	{r4, r5, r6, pc}
 1756              	.L146:
 1757              		.align	2
 1758              	.L145:
 1759 0034 00000000 		.word	WDT_Ignore
 1760 0038 00000000 		.word	WDT_Match
 1761 003c 00000000 		.word	WDT_ISR
 1762              		.cfi_endproc
 1763              	.LFE45:
 1764              		.size	WDT_Match_Init, .-WDT_Match_Init
 1765              		.section	.text.Force_WDT_Reset,"ax",%progbits
 1766              		.align	2
 1767              		.global	Force_WDT_Reset
 1768              		.code	16
 1769              		.thumb_func
 1770              		.type	Force_WDT_Reset, %function
 1771              	Force_WDT_Reset:
 1772              	.LFB46:
 782:main.c        ****     WDT_Init(5, WDT_INTERRUPT_TIME);   /* Initialize WDT Interval */
 1773              		.loc 1 782 0
 1774              		.cfi_startproc
 1775              		@ Volatile: function does not return.
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 1778 0000 10B5     		push	{r4, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 4, -8
 1781              		.cfi_offset 14, -4
 783:main.c        ****     
 1782              		.loc 1 783 0
 1783 0002 1421     		movs	r1, #20
 1784 0004 0520     		movs	r0, #5
 1785 0006 FFF7FEFF 		bl	WDT_Init
 1786              	.LVL160:
 1787              	.L148:
 1788 000a FEE7     		b	.L148
 1789              		.cfi_endproc
 1790              	.LFE46:
 1791              		.size	Force_WDT_Reset, .-Force_WDT_Reset
 1792              		.global	SignalBit_Debug
 1793              		.comm	Sub_Buff,12,4
 1794              		.comm	Capsense_FilteredRawData,12,4
 1795              		.comm	key_scan_count,1,1
 1796              		.comm	WDT_Match,2,2
 1797              		.comm	WDT_Ignore,2,2
 1798              		.global	WDT_Clear_Flag
 1799              		.global	ILODelayCycles_1
 1800              		.global	ILODelayCycles_0
 1801              		.global	d
 1802              		.bss
 1803              		.align	2
 1804              		.set	.LANCHOR0,. + 0
 1805              		.type	WDT_Clear_Flag, %object
 1806              		.size	WDT_Clear_Flag, 1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 52


 1807              	WDT_Clear_Flag:
 1808 0000 00       		.space	1
 1809              		.type	SignalBit_Debug, %object
 1810              		.size	SignalBit_Debug, 1
 1811              	SignalBit_Debug:
 1812 0001 00       		.space	1
 1813              		.type	d, %object
 1814              		.size	d, 1
 1815              	d:
 1816 0002 00       		.space	1
 1817 0003 00       		.space	1
 1818              		.type	ILODelayCycles_1, %object
 1819              		.size	ILODelayCycles_1, 4
 1820              	ILODelayCycles_1:
 1821 0004 00000000 		.space	4
 1822              		.type	ILODelayCycles_0, %object
 1823              		.size	ILODelayCycles_0, 4
 1824              	ILODelayCycles_0:
 1825 0008 00000000 		.space	4
 1826              		.text
 1827              	.Letext0:
 1828              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1829              		.file 3 "Generated_Source\\PSoC4/CapSense.h"
 1830              		.file 4 "Generated_Source\\PSoC4/CapSense_CSHL.h"
 1831              		.file 5 "Generated_Source\\PSoC4/Timer_1.h"
 1832              		.file 6 "Generated_Source\\PSoC4/CyLFClk.h"
 1833              		.file 7 "Generated_Source\\PSoC4/isr_WDT.h"
 1834              		.file 8 "Generated_Source\\PSoC4/CapSense_PVT.h"
 1835              		.file 9 "Generated_Source\\PSoC4/UnUsedPin_16.h"
 1836              		.file 10 "Generated_Source\\PSoC4/UnUsedPin_9.h"
 1837              		.file 11 "Generated_Source\\PSoC4/UnUsedPin_18.h"
 1838              		.file 12 "Generated_Source\\PSoC4/UnUsedPin_10.h"
 1839              		.file 13 "Generated_Source\\PSoC4/UnUsedPin_14.h"
 1840              		.file 14 "Generated_Source\\PSoC4/UnUsedPin_15.h"
 1841              		.file 15 "Generated_Source\\PSoC4/hawkeye_clk.h"
 1842              		.file 16 "Generated_Source\\PSoC4/hawkeye_data.h"
 1843              		.file 17 "Generated_Source\\PSoC4/Clock_1.h"
 1844              		.file 18 "Generated_Source\\PSoC4/TC_CC_ISR.h"
 1845              		.file 19 "Generated_Source\\PSoC4/CyLib.h"
 1846              		.section	.debug_info,"",%progbits
 1847              	.Ldebug_info0:
 1848 0000 660C0000 		.4byte	0xc66
 1849 0004 0400     		.2byte	0x4
 1850 0006 00000000 		.4byte	.Ldebug_abbrev0
 1851 000a 04       		.byte	0x4
 1852 000b 01       		.uleb128 0x1
 1853 000c 8C050000 		.4byte	.LASF94
 1854 0010 0C       		.byte	0xc
 1855 0011 34060000 		.4byte	.LASF95
 1856 0015 43030000 		.4byte	.LASF96
 1857 0019 C8000000 		.4byte	.Ldebug_ranges0+0xc8
 1858 001d 00000000 		.4byte	0
 1859 0021 00000000 		.4byte	.Ldebug_line0
 1860 0025 02       		.uleb128 0x2
 1861 0026 01       		.byte	0x1
 1862 0027 06       		.byte	0x6
 1863 0028 10040000 		.4byte	.LASF0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 53


 1864 002c 02       		.uleb128 0x2
 1865 002d 01       		.byte	0x1
 1866 002e 08       		.byte	0x8
 1867 002f 15030000 		.4byte	.LASF1
 1868 0033 02       		.uleb128 0x2
 1869 0034 02       		.byte	0x2
 1870 0035 05       		.byte	0x5
 1871 0036 BC000000 		.4byte	.LASF2
 1872 003a 02       		.uleb128 0x2
 1873 003b 02       		.byte	0x2
 1874 003c 07       		.byte	0x7
 1875 003d 1A060000 		.4byte	.LASF3
 1876 0041 02       		.uleb128 0x2
 1877 0042 04       		.byte	0x4
 1878 0043 05       		.byte	0x5
 1879 0044 8C020000 		.4byte	.LASF4
 1880 0048 02       		.uleb128 0x2
 1881 0049 04       		.byte	0x4
 1882 004a 07       		.byte	0x7
 1883 004b 3B060000 		.4byte	.LASF5
 1884 004f 02       		.uleb128 0x2
 1885 0050 08       		.byte	0x8
 1886 0051 05       		.byte	0x5
 1887 0052 60020000 		.4byte	.LASF6
 1888 0056 02       		.uleb128 0x2
 1889 0057 08       		.byte	0x8
 1890 0058 07       		.byte	0x7
 1891 0059 1C040000 		.4byte	.LASF7
 1892 005d 03       		.uleb128 0x3
 1893 005e 04       		.byte	0x4
 1894 005f 05       		.byte	0x5
 1895 0060 696E7400 		.ascii	"int\000"
 1896 0064 02       		.uleb128 0x2
 1897 0065 04       		.byte	0x4
 1898 0066 07       		.byte	0x7
 1899 0067 42040000 		.4byte	.LASF8
 1900 006b 04       		.uleb128 0x4
 1901 006c A7010000 		.4byte	.LASF9
 1902 0070 02       		.byte	0x2
 1903 0071 D201     		.2byte	0x1d2
 1904 0073 2C000000 		.4byte	0x2c
 1905 0077 04       		.uleb128 0x4
 1906 0078 69010000 		.4byte	.LASF10
 1907 007c 02       		.byte	0x2
 1908 007d D301     		.2byte	0x1d3
 1909 007f 3A000000 		.4byte	0x3a
 1910 0083 04       		.uleb128 0x4
 1911 0084 2D060000 		.4byte	.LASF11
 1912 0088 02       		.byte	0x2
 1913 0089 D401     		.2byte	0x1d4
 1914 008b 48000000 		.4byte	0x48
 1915 008f 02       		.uleb128 0x2
 1916 0090 04       		.byte	0x4
 1917 0091 04       		.byte	0x4
 1918 0092 45020000 		.4byte	.LASF12
 1919 0096 02       		.uleb128 0x2
 1920 0097 08       		.byte	0x8
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 54


 1921 0098 04       		.byte	0x4
 1922 0099 52060000 		.4byte	.LASF13
 1923 009d 02       		.uleb128 0x2
 1924 009e 01       		.byte	0x1
 1925 009f 08       		.byte	0x8
 1926 00a0 6E020000 		.4byte	.LASF14
 1927 00a4 02       		.uleb128 0x2
 1928 00a5 08       		.byte	0x8
 1929 00a6 04       		.byte	0x4
 1930 00a7 AF030000 		.4byte	.LASF15
 1931 00ab 02       		.uleb128 0x2
 1932 00ac 04       		.byte	0x4
 1933 00ad 07       		.byte	0x7
 1934 00ae A4020000 		.4byte	.LASF16
 1935 00b2 05       		.uleb128 0x5
 1936 00b3 6B000000 		.4byte	0x6b
 1937 00b7 06       		.uleb128 0x6
 1938 00b8 2E010000 		.4byte	.LASF97
 1939 00bc 01       		.byte	0x1
 1940 00bd 8001     		.2byte	0x180
 1941 00bf 01       		.byte	0x1
 1942 00c0 07       		.uleb128 0x7
 1943 00c1 7C040000 		.4byte	.LASF17
 1944 00c5 01       		.byte	0x1
 1945 00c6 9001     		.2byte	0x190
 1946 00c8 01       		.byte	0x1
 1947 00c9 DA000000 		.4byte	0xda
 1948 00cd 08       		.uleb128 0x8
 1949 00ce 63010000 		.4byte	.LASF19
 1950 00d2 01       		.byte	0x1
 1951 00d3 9001     		.2byte	0x190
 1952 00d5 6B000000 		.4byte	0x6b
 1953 00d9 00       		.byte	0
 1954 00da 07       		.uleb128 0x7
 1955 00db 4B070000 		.4byte	.LASF18
 1956 00df 01       		.byte	0x1
 1957 00e0 0302     		.2byte	0x203
 1958 00e2 01       		.byte	0x1
 1959 00e3 F4000000 		.4byte	0xf4
 1960 00e7 08       		.uleb128 0x8
 1961 00e8 70010000 		.4byte	.LASF20
 1962 00ec 01       		.byte	0x1
 1963 00ed 0302     		.2byte	0x203
 1964 00ef 83000000 		.4byte	0x83
 1965 00f3 00       		.byte	0
 1966 00f4 07       		.uleb128 0x7
 1967 00f5 D6020000 		.4byte	.LASF21
 1968 00f9 01       		.byte	0x1
 1969 00fa 9901     		.2byte	0x199
 1970 00fc 01       		.byte	0x1
 1971 00fd 22010000 		.4byte	0x122
 1972 0101 08       		.uleb128 0x8
 1973 0102 95020000 		.4byte	.LASF22
 1974 0106 01       		.byte	0x1
 1975 0107 9901     		.2byte	0x199
 1976 0109 6B000000 		.4byte	0x6b
 1977 010d 09       		.uleb128 0x9
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 55


 1978 010e 6900     		.ascii	"i\000"
 1979 0110 01       		.byte	0x1
 1980 0111 9B01     		.2byte	0x19b
 1981 0113 83000000 		.4byte	0x83
 1982 0117 09       		.uleb128 0x9
 1983 0118 6A00     		.ascii	"j\000"
 1984 011a 01       		.byte	0x1
 1985 011b 9C01     		.2byte	0x19c
 1986 011d 6B000000 		.4byte	0x6b
 1987 0121 00       		.byte	0
 1988 0122 0A       		.uleb128 0xa
 1989 0123 73020000 		.4byte	.LASF23
 1990 0127 01       		.byte	0x1
 1991 0128 54       		.byte	0x54
 1992 0129 00000000 		.4byte	.LFB32
 1993 012d 14000000 		.4byte	.LFE32-.LFB32
 1994 0131 01       		.uleb128 0x1
 1995 0132 9C       		.byte	0x9c
 1996 0133 64010000 		.4byte	0x164
 1997 0137 0B       		.uleb128 0xb
 1998 0138 C0000000 		.4byte	0xc0
 1999 013c 08000000 		.4byte	.LBB10
 2000 0140 00000000 		.4byte	.Ldebug_ranges0+0
 2001 0144 01       		.byte	0x1
 2002 0145 58       		.byte	0x58
 2003 0146 54010000 		.4byte	0x154
 2004 014a 0C       		.uleb128 0xc
 2005 014b CD000000 		.4byte	0xcd
 2006 014f 00000000 		.4byte	.LLST0
 2007 0153 00       		.byte	0
 2008 0154 0D       		.uleb128 0xd
 2009 0155 08000000 		.4byte	.LVL0
 2010 0159 110B0000 		.4byte	0xb11
 2011 015d 0E       		.uleb128 0xe
 2012 015e 01       		.uleb128 0x1
 2013 015f 50       		.byte	0x50
 2014 0160 01       		.uleb128 0x1
 2015 0161 32       		.byte	0x32
 2016 0162 00       		.byte	0
 2017 0163 00       		.byte	0
 2018 0164 0F       		.uleb128 0xf
 2019 0165 84020000 		.4byte	.LASF24
 2020 0169 01       		.byte	0x1
 2021 016a 2103     		.2byte	0x321
 2022 016c 00000000 		.4byte	.LFB47
 2023 0170 24000000 		.4byte	.LFE47-.LFB47
 2024 0174 01       		.uleb128 0x1
 2025 0175 9C       		.byte	0x9c
 2026 0176 9F010000 		.4byte	0x19f
 2027 017a 10       		.uleb128 0x10
 2028 017b 06000000 		.4byte	.LVL2
 2029 017f 1D0B0000 		.4byte	0xb1d
 2030 0183 10       		.uleb128 0x10
 2031 0184 0A000000 		.4byte	.LVL3
 2032 0188 280B0000 		.4byte	0xb28
 2033 018c 10       		.uleb128 0x10
 2034 018d 0E000000 		.4byte	.LVL4
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 56


 2035 0191 330B0000 		.4byte	0xb33
 2036 0195 10       		.uleb128 0x10
 2037 0196 1E000000 		.4byte	.LVL5
 2038 019a 3E0B0000 		.4byte	0xb3e
 2039 019e 00       		.byte	0
 2040 019f 11       		.uleb128 0x11
 2041 01a0 B7000000 		.4byte	0xb7
 2042 01a4 00000000 		.4byte	.LFB34
 2043 01a8 08000000 		.4byte	.LFE34-.LFB34
 2044 01ac 01       		.uleb128 0x1
 2045 01ad 9C       		.byte	0x9c
 2046 01ae BC010000 		.4byte	0x1bc
 2047 01b2 10       		.uleb128 0x10
 2048 01b3 06000000 		.4byte	.LVL6
 2049 01b7 1D0B0000 		.4byte	0xb1d
 2050 01bb 00       		.byte	0
 2051 01bc 0F       		.uleb128 0xf
 2052 01bd E9030000 		.4byte	.LASF25
 2053 01c1 01       		.byte	0x1
 2054 01c2 8701     		.2byte	0x187
 2055 01c4 00000000 		.4byte	.LFB35
 2056 01c8 1C000000 		.4byte	.LFE35-.LFB35
 2057 01cc 01       		.uleb128 0x1
 2058 01cd 9C       		.byte	0x9c
 2059 01ce ED010000 		.4byte	0x1ed
 2060 01d2 12       		.uleb128 0x12
 2061 01d3 B7000000 		.4byte	0xb7
 2062 01d7 0C000000 		.4byte	.LBB14
 2063 01db 04000000 		.4byte	.LBE14-.LBB14
 2064 01df 01       		.byte	0x1
 2065 01e0 8B01     		.2byte	0x18b
 2066 01e2 10       		.uleb128 0x10
 2067 01e3 10000000 		.4byte	.LVL7
 2068 01e7 1D0B0000 		.4byte	0xb1d
 2069 01eb 00       		.byte	0
 2070 01ec 00       		.byte	0
 2071 01ed 11       		.uleb128 0x11
 2072 01ee C0000000 		.4byte	0xc0
 2073 01f2 00000000 		.4byte	.LFB36
 2074 01f6 0C000000 		.4byte	.LFE36-.LFB36
 2075 01fa 01       		.uleb128 0x1
 2076 01fb 9C       		.byte	0x9c
 2077 01fc 08020000 		.4byte	0x208
 2078 0200 13       		.uleb128 0x13
 2079 0201 CD000000 		.4byte	0xcd
 2080 0205 01       		.uleb128 0x1
 2081 0206 50       		.byte	0x50
 2082 0207 00       		.byte	0
 2083 0208 07       		.uleb128 0x7
 2084 0209 04070000 		.4byte	.LASF26
 2085 020d 01       		.byte	0x1
 2086 020e A901     		.2byte	0x1a9
 2087 0210 01       		.byte	0x1
 2088 0211 22020000 		.4byte	0x222
 2089 0215 08       		.uleb128 0x8
 2090 0216 70010000 		.4byte	.LASF20
 2091 021a 01       		.byte	0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 57


 2092 021b A901     		.2byte	0x1a9
 2093 021d 83000000 		.4byte	0x83
 2094 0221 00       		.byte	0
 2095 0222 07       		.uleb128 0x7
 2096 0223 9D000000 		.4byte	.LASF27
 2097 0227 01       		.byte	0x1
 2098 0228 B901     		.2byte	0x1b9
 2099 022a 01       		.byte	0x1
 2100 022b 48020000 		.4byte	0x248
 2101 022f 08       		.uleb128 0x8
 2102 0230 70010000 		.4byte	.LASF20
 2103 0234 01       		.byte	0x1
 2104 0235 B901     		.2byte	0x1b9
 2105 0237 83000000 		.4byte	0x83
 2106 023b 14       		.uleb128 0x14
 2107 023c D8000000 		.4byte	.LASF28
 2108 0240 01       		.byte	0x1
 2109 0241 BB01     		.2byte	0x1bb
 2110 0243 77000000 		.4byte	0x77
 2111 0247 00       		.byte	0
 2112 0248 11       		.uleb128 0x11
 2113 0249 F4000000 		.4byte	0xf4
 2114 024d 00000000 		.4byte	.LFB37
 2115 0251 90000000 		.4byte	.LFE37-.LFB37
 2116 0255 01       		.uleb128 0x1
 2117 0256 9C       		.byte	0x9c
 2118 0257 E4020000 		.4byte	0x2e4
 2119 025b 0C       		.uleb128 0xc
 2120 025c 01010000 		.4byte	0x101
 2121 0260 14000000 		.4byte	.LLST1
 2122 0264 15       		.uleb128 0x15
 2123 0265 0D010000 		.4byte	0x10d
 2124 0269 35000000 		.4byte	.LLST2
 2125 026d 15       		.uleb128 0x15
 2126 026e 17010000 		.4byte	0x117
 2127 0272 60000000 		.4byte	.LLST3
 2128 0276 16       		.uleb128 0x16
 2129 0277 08020000 		.4byte	0x208
 2130 027b 2C000000 		.4byte	.LBB20
 2131 027f 18000000 		.4byte	.Ldebug_ranges0+0x18
 2132 0283 01       		.byte	0x1
 2133 0284 A201     		.2byte	0x1a2
 2134 0286 0C       		.uleb128 0xc
 2135 0287 15020000 		.4byte	0x215
 2136 028b 8B000000 		.4byte	.LLST4
 2137 028f 17       		.uleb128 0x17
 2138 0290 22020000 		.4byte	0x222
 2139 0294 3A000000 		.4byte	.LBB22
 2140 0298 30000000 		.4byte	.Ldebug_ranges0+0x30
 2141 029c 01       		.byte	0x1
 2142 029d B501     		.2byte	0x1b5
 2143 029f C5020000 		.4byte	0x2c5
 2144 02a3 0C       		.uleb128 0xc
 2145 02a4 2F020000 		.4byte	0x22f
 2146 02a8 AB000000 		.4byte	.LLST5
 2147 02ac 18       		.uleb128 0x18
 2148 02ad 30000000 		.4byte	.Ldebug_ranges0+0x30
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 58


 2149 02b1 15       		.uleb128 0x15
 2150 02b2 3B020000 		.4byte	0x23b
 2151 02b6 CB000000 		.4byte	.LLST6
 2152 02ba 10       		.uleb128 0x10
 2153 02bb 4A000000 		.4byte	.LVL16
 2154 02bf 490B0000 		.4byte	0xb49
 2155 02c3 00       		.byte	0
 2156 02c4 00       		.byte	0
 2157 02c5 19       		.uleb128 0x19
 2158 02c6 32000000 		.4byte	.LVL12
 2159 02ca 550B0000 		.4byte	0xb55
 2160 02ce D9020000 		.4byte	0x2d9
 2161 02d2 0E       		.uleb128 0xe
 2162 02d3 01       		.uleb128 0x1
 2163 02d4 50       		.byte	0x50
 2164 02d5 02       		.uleb128 0x2
 2165 02d6 76       		.byte	0x76
 2166 02d7 00       		.sleb128 0
 2167 02d8 00       		.byte	0
 2168 02d9 10       		.uleb128 0x10
 2169 02da 36000000 		.4byte	.LVL13
 2170 02de 600B0000 		.4byte	0xb60
 2171 02e2 00       		.byte	0
 2172 02e3 00       		.byte	0
 2173 02e4 11       		.uleb128 0x11
 2174 02e5 08020000 		.4byte	0x208
 2175 02e9 00000000 		.4byte	.LFB38
 2176 02ed 44000000 		.4byte	.LFE38-.LFB38
 2177 02f1 01       		.uleb128 0x1
 2178 02f2 9C       		.byte	0x9c
 2179 02f3 54030000 		.4byte	0x354
 2180 02f7 0C       		.uleb128 0xc
 2181 02f8 15020000 		.4byte	0x215
 2182 02fc E9000000 		.4byte	.LLST7
 2183 0300 17       		.uleb128 0x17
 2184 0301 22020000 		.4byte	0x222
 2185 0305 10000000 		.4byte	.LBB30
 2186 0309 48000000 		.4byte	.Ldebug_ranges0+0x48
 2187 030d 01       		.byte	0x1
 2188 030e B501     		.2byte	0x1b5
 2189 0310 36030000 		.4byte	0x336
 2190 0314 0C       		.uleb128 0xc
 2191 0315 2F020000 		.4byte	0x22f
 2192 0319 15010000 		.4byte	.LLST8
 2193 031d 18       		.uleb128 0x18
 2194 031e 48000000 		.4byte	.Ldebug_ranges0+0x48
 2195 0322 15       		.uleb128 0x15
 2196 0323 3B020000 		.4byte	0x23b
 2197 0327 28010000 		.4byte	.LLST9
 2198 032b 10       		.uleb128 0x10
 2199 032c 1E000000 		.4byte	.LVL26
 2200 0330 490B0000 		.4byte	0xb49
 2201 0334 00       		.byte	0
 2202 0335 00       		.byte	0
 2203 0336 19       		.uleb128 0x19
 2204 0337 08000000 		.4byte	.LVL22
 2205 033b 550B0000 		.4byte	0xb55
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 59


 2206 033f 4A030000 		.4byte	0x34a
 2207 0343 0E       		.uleb128 0xe
 2208 0344 01       		.uleb128 0x1
 2209 0345 50       		.byte	0x50
 2210 0346 02       		.uleb128 0x2
 2211 0347 76       		.byte	0x76
 2212 0348 00       		.sleb128 0
 2213 0349 00       		.byte	0
 2214 034a 10       		.uleb128 0x10
 2215 034b 0C000000 		.4byte	.LVL23
 2216 034f 600B0000 		.4byte	0xb60
 2217 0353 00       		.byte	0
 2218 0354 11       		.uleb128 0x11
 2219 0355 22020000 		.4byte	0x222
 2220 0359 00000000 		.4byte	.LFB39
 2221 035d 38000000 		.4byte	.LFE39-.LFB39
 2222 0361 01       		.uleb128 0x1
 2223 0362 9C       		.byte	0x9c
 2224 0363 83030000 		.4byte	0x383
 2225 0367 0C       		.uleb128 0xc
 2226 0368 2F020000 		.4byte	0x22f
 2227 036c 46010000 		.4byte	.LLST10
 2228 0370 15       		.uleb128 0x15
 2229 0371 3B020000 		.4byte	0x23b
 2230 0375 72010000 		.4byte	.LLST11
 2231 0379 10       		.uleb128 0x10
 2232 037a 12000000 		.4byte	.LVL31
 2233 037e 490B0000 		.4byte	0xb49
 2234 0382 00       		.byte	0
 2235 0383 0F       		.uleb128 0xf
 2236 0384 A0060000 		.4byte	.LASF29
 2237 0388 01       		.byte	0x1
 2238 0389 DD01     		.2byte	0x1dd
 2239 038b 00000000 		.4byte	.LFB40
 2240 038f 30000000 		.4byte	.LFE40-.LFB40
 2241 0393 01       		.uleb128 0x1
 2242 0394 9C       		.byte	0x9c
 2243 0395 C5030000 		.4byte	0x3c5
 2244 0399 1A       		.uleb128 0x1a
 2245 039a 6900     		.ascii	"i\000"
 2246 039c 01       		.byte	0x1
 2247 039d DF01     		.2byte	0x1df
 2248 039f 83000000 		.4byte	0x83
 2249 03a3 90010000 		.4byte	.LLST12
 2250 03a7 19       		.uleb128 0x19
 2251 03a8 10000000 		.4byte	.LVL35
 2252 03ac 550B0000 		.4byte	0xb55
 2253 03b0 BB030000 		.4byte	0x3bb
 2254 03b4 0E       		.uleb128 0xe
 2255 03b5 01       		.uleb128 0x1
 2256 03b6 50       		.byte	0x50
 2257 03b7 02       		.uleb128 0x2
 2258 03b8 74       		.byte	0x74
 2259 03b9 00       		.sleb128 0
 2260 03ba 00       		.byte	0
 2261 03bb 10       		.uleb128 0x10
 2262 03bc 14000000 		.4byte	.LVL36
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 60


 2263 03c0 600B0000 		.4byte	0xb60
 2264 03c4 00       		.byte	0
 2265 03c5 07       		.uleb128 0x7
 2266 03c6 00000000 		.4byte	.LASF30
 2267 03ca 01       		.byte	0x1
 2268 03cb F201     		.2byte	0x1f2
 2269 03cd 01       		.byte	0x1
 2270 03ce E9030000 		.4byte	0x3e9
 2271 03d2 09       		.uleb128 0x9
 2272 03d3 6900     		.ascii	"i\000"
 2273 03d5 01       		.byte	0x1
 2274 03d6 F401     		.2byte	0x1f4
 2275 03d8 83000000 		.4byte	0x83
 2276 03dc 14       		.uleb128 0x14
 2277 03dd B6040000 		.4byte	.LASF31
 2278 03e1 01       		.byte	0x1
 2279 03e2 F501     		.2byte	0x1f5
 2280 03e4 83000000 		.4byte	0x83
 2281 03e8 00       		.byte	0
 2282 03e9 07       		.uleb128 0x7
 2283 03ea 26050000 		.4byte	.LASF32
 2284 03ee 01       		.byte	0x1
 2285 03ef 1C02     		.2byte	0x21c
 2286 03f1 01       		.byte	0x1
 2287 03f2 57040000 		.4byte	0x457
 2288 03f6 08       		.uleb128 0x8
 2289 03f7 70010000 		.4byte	.LASF20
 2290 03fb 01       		.byte	0x1
 2291 03fc 1C02     		.2byte	0x21c
 2292 03fe 83000000 		.4byte	0x83
 2293 0402 14       		.uleb128 0x14
 2294 0403 5B020000 		.4byte	.LASF33
 2295 0407 01       		.byte	0x1
 2296 0408 1E02     		.2byte	0x21e
 2297 040a 83000000 		.4byte	0x83
 2298 040e 14       		.uleb128 0x14
 2299 040f 4D060000 		.4byte	.LASF34
 2300 0413 01       		.byte	0x1
 2301 0414 1F02     		.2byte	0x21f
 2302 0416 83000000 		.4byte	0x83
 2303 041a 14       		.uleb128 0x14
 2304 041b 9C020000 		.4byte	.LASF35
 2305 041f 01       		.byte	0x1
 2306 0420 2002     		.2byte	0x220
 2307 0422 77000000 		.4byte	0x77
 2308 0426 14       		.uleb128 0x14
 2309 0427 DF010000 		.4byte	.LASF36
 2310 042b 01       		.byte	0x1
 2311 042c 2102     		.2byte	0x221
 2312 042e 77000000 		.4byte	0x77
 2313 0432 14       		.uleb128 0x14
 2314 0433 D8000000 		.4byte	.LASF28
 2315 0437 01       		.byte	0x1
 2316 0438 2202     		.2byte	0x222
 2317 043a 77000000 		.4byte	0x77
 2318 043e 14       		.uleb128 0x14
 2319 043f E8000000 		.4byte	.LASF37
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 61


 2320 0443 01       		.byte	0x1
 2321 0444 2302     		.2byte	0x223
 2322 0446 6B000000 		.4byte	0x6b
 2323 044a 14       		.uleb128 0x14
 2324 044b AD020000 		.4byte	.LASF38
 2325 044f 01       		.byte	0x1
 2326 0450 2402     		.2byte	0x224
 2327 0452 77000000 		.4byte	0x77
 2328 0456 00       		.byte	0
 2329 0457 11       		.uleb128 0x11
 2330 0458 C5030000 		.4byte	0x3c5
 2331 045c 00000000 		.4byte	.LFB41
 2332 0460 58010000 		.4byte	.LFE41-.LFB41
 2333 0464 01       		.uleb128 0x1
 2334 0465 9C       		.byte	0x9c
 2335 0466 21050000 		.4byte	0x521
 2336 046a 15       		.uleb128 0x15
 2337 046b D2030000 		.4byte	0x3d2
 2338 046f AF010000 		.4byte	.LLST13
 2339 0473 15       		.uleb128 0x15
 2340 0474 DC030000 		.4byte	0x3dc
 2341 0478 D9010000 		.4byte	.LLST14
 2342 047c 17       		.uleb128 0x17
 2343 047d DA000000 		.4byte	0xda
 2344 0481 0C000000 		.4byte	.LBB40
 2345 0485 60000000 		.4byte	.Ldebug_ranges0+0x60
 2346 0489 01       		.byte	0x1
 2347 048a FE01     		.2byte	0x1fe
 2348 048c 0A050000 		.4byte	0x50a
 2349 0490 0C       		.uleb128 0xc
 2350 0491 E7000000 		.4byte	0xe7
 2351 0495 EC010000 		.4byte	.LLST15
 2352 0499 16       		.uleb128 0x16
 2353 049a E9030000 		.4byte	0x3e9
 2354 049e 0C000000 		.4byte	.LBB41
 2355 04a2 60000000 		.4byte	.Ldebug_ranges0+0x60
 2356 04a6 01       		.byte	0x1
 2357 04a7 1402     		.2byte	0x214
 2358 04a9 0C       		.uleb128 0xc
 2359 04aa F6030000 		.4byte	0x3f6
 2360 04ae EC010000 		.4byte	.LLST15
 2361 04b2 18       		.uleb128 0x18
 2362 04b3 60000000 		.4byte	.Ldebug_ranges0+0x60
 2363 04b7 15       		.uleb128 0x15
 2364 04b8 02040000 		.4byte	0x402
 2365 04bc 17020000 		.4byte	.LLST17
 2366 04c0 15       		.uleb128 0x15
 2367 04c1 0E040000 		.4byte	0x40e
 2368 04c5 8B020000 		.4byte	.LLST18
 2369 04c9 15       		.uleb128 0x15
 2370 04ca 1A040000 		.4byte	0x41a
 2371 04ce AB020000 		.4byte	.LLST19
 2372 04d2 1B       		.uleb128 0x1b
 2373 04d3 26040000 		.4byte	0x426
 2374 04d7 15       		.uleb128 0x15
 2375 04d8 32040000 		.4byte	0x432
 2376 04dc CB020000 		.4byte	.LLST20
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 62


 2377 04e0 1B       		.uleb128 0x1b
 2378 04e1 3E040000 		.4byte	0x43e
 2379 04e5 15       		.uleb128 0x15
 2380 04e6 4A040000 		.4byte	0x44a
 2381 04ea 00030000 		.4byte	.LLST21
 2382 04ee 10       		.uleb128 0x10
 2383 04ef 54000000 		.4byte	.LVL47
 2384 04f3 490B0000 		.4byte	0xb49
 2385 04f7 0D       		.uleb128 0xd
 2386 04f8 18010000 		.4byte	.LVL64
 2387 04fc 6B0B0000 		.4byte	0xb6b
 2388 0500 0E       		.uleb128 0xe
 2389 0501 01       		.uleb128 0x1
 2390 0502 50       		.byte	0x50
 2391 0503 02       		.uleb128 0x2
 2392 0504 74       		.byte	0x74
 2393 0505 00       		.sleb128 0
 2394 0506 00       		.byte	0
 2395 0507 00       		.byte	0
 2396 0508 00       		.byte	0
 2397 0509 00       		.byte	0
 2398 050a 0D       		.uleb128 0xd
 2399 050b 2E000000 		.4byte	.LVL43
 2400 050f 760B0000 		.4byte	0xb76
 2401 0513 0E       		.uleb128 0xe
 2402 0514 01       		.uleb128 0x1
 2403 0515 50       		.byte	0x50
 2404 0516 02       		.uleb128 0x2
 2405 0517 77       		.byte	0x77
 2406 0518 00       		.sleb128 0
 2407 0519 0E       		.uleb128 0xe
 2408 051a 01       		.uleb128 0x1
 2409 051b 51       		.byte	0x51
 2410 051c 02       		.uleb128 0x2
 2411 051d 74       		.byte	0x74
 2412 051e 00       		.sleb128 0
 2413 051f 00       		.byte	0
 2414 0520 00       		.byte	0
 2415 0521 11       		.uleb128 0x11
 2416 0522 DA000000 		.4byte	0xda
 2417 0526 00000000 		.4byte	.LFB42
 2418 052a FC000000 		.4byte	.LFE42-.LFB42
 2419 052e 01       		.uleb128 0x1
 2420 052f 9C       		.byte	0x9c
 2421 0530 AE050000 		.4byte	0x5ae
 2422 0534 0C       		.uleb128 0xc
 2423 0535 E7000000 		.4byte	0xe7
 2424 0539 1E030000 		.4byte	.LLST22
 2425 053d 16       		.uleb128 0x16
 2426 053e E9030000 		.4byte	0x3e9
 2427 0542 08000000 		.4byte	.LBB54
 2428 0546 88000000 		.4byte	.Ldebug_ranges0+0x88
 2429 054a 01       		.byte	0x1
 2430 054b 1402     		.2byte	0x214
 2431 054d 0C       		.uleb128 0xc
 2432 054e F6030000 		.4byte	0x3f6
 2433 0552 55030000 		.4byte	.LLST23
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 63


 2434 0556 18       		.uleb128 0x18
 2435 0557 88000000 		.4byte	.Ldebug_ranges0+0x88
 2436 055b 15       		.uleb128 0x15
 2437 055c 02040000 		.4byte	0x402
 2438 0560 7E030000 		.4byte	.LLST24
 2439 0564 15       		.uleb128 0x15
 2440 0565 0E040000 		.4byte	0x40e
 2441 0569 91030000 		.4byte	.LLST25
 2442 056d 15       		.uleb128 0x15
 2443 056e 1A040000 		.4byte	0x41a
 2444 0572 BD030000 		.4byte	.LLST26
 2445 0576 1B       		.uleb128 0x1b
 2446 0577 26040000 		.4byte	0x426
 2447 057b 15       		.uleb128 0x15
 2448 057c 32040000 		.4byte	0x432
 2449 0580 06040000 		.4byte	.LLST27
 2450 0584 1B       		.uleb128 0x1b
 2451 0585 3E040000 		.4byte	0x43e
 2452 0589 15       		.uleb128 0x15
 2453 058a 4A040000 		.4byte	0x44a
 2454 058e 49040000 		.4byte	.LLST28
 2455 0592 10       		.uleb128 0x10
 2456 0593 26000000 		.4byte	.LVL68
 2457 0597 490B0000 		.4byte	0xb49
 2458 059b 0D       		.uleb128 0xd
 2459 059c CA000000 		.4byte	.LVL85
 2460 05a0 6B0B0000 		.4byte	0xb6b
 2461 05a4 0E       		.uleb128 0xe
 2462 05a5 01       		.uleb128 0x1
 2463 05a6 50       		.byte	0x50
 2464 05a7 02       		.uleb128 0x2
 2465 05a8 75       		.byte	0x75
 2466 05a9 00       		.sleb128 0
 2467 05aa 00       		.byte	0
 2468 05ab 00       		.byte	0
 2469 05ac 00       		.byte	0
 2470 05ad 00       		.byte	0
 2471 05ae 11       		.uleb128 0x11
 2472 05af E9030000 		.4byte	0x3e9
 2473 05b3 00000000 		.4byte	.LFB43
 2474 05b7 FC000000 		.4byte	.LFE43-.LFB43
 2475 05bb 01       		.uleb128 0x1
 2476 05bc 9C       		.byte	0x9c
 2477 05bd 1B060000 		.4byte	0x61b
 2478 05c1 0C       		.uleb128 0xc
 2479 05c2 F6030000 		.4byte	0x3f6
 2480 05c6 67040000 		.4byte	.LLST29
 2481 05ca 15       		.uleb128 0x15
 2482 05cb 02040000 		.4byte	0x402
 2483 05cf 9E040000 		.4byte	.LLST30
 2484 05d3 15       		.uleb128 0x15
 2485 05d4 0E040000 		.4byte	0x40e
 2486 05d8 B1040000 		.4byte	.LLST31
 2487 05dc 15       		.uleb128 0x15
 2488 05dd 1A040000 		.4byte	0x41a
 2489 05e1 DD040000 		.4byte	.LLST32
 2490 05e5 1B       		.uleb128 0x1b
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 64


 2491 05e6 26040000 		.4byte	0x426
 2492 05ea 15       		.uleb128 0x15
 2493 05eb 32040000 		.4byte	0x432
 2494 05ef 26050000 		.4byte	.LLST33
 2495 05f3 1B       		.uleb128 0x1b
 2496 05f4 3E040000 		.4byte	0x43e
 2497 05f8 15       		.uleb128 0x15
 2498 05f9 4A040000 		.4byte	0x44a
 2499 05fd 69050000 		.4byte	.LLST34
 2500 0601 10       		.uleb128 0x10
 2501 0602 26000000 		.4byte	.LVL89
 2502 0606 490B0000 		.4byte	0xb49
 2503 060a 0D       		.uleb128 0xd
 2504 060b CA000000 		.4byte	.LVL106
 2505 060f 6B0B0000 		.4byte	0xb6b
 2506 0613 0E       		.uleb128 0xe
 2507 0614 01       		.uleb128 0x1
 2508 0615 50       		.byte	0x50
 2509 0616 02       		.uleb128 0x2
 2510 0617 75       		.byte	0x75
 2511 0618 00       		.sleb128 0
 2512 0619 00       		.byte	0
 2513 061a 00       		.byte	0
 2514 061b 1C       		.uleb128 0x1c
 2515 061c F7040000 		.4byte	.LASF98
 2516 0620 01       		.byte	0x1
 2517 0621 62       		.byte	0x62
 2518 0622 5D000000 		.4byte	0x5d
 2519 0626 00000000 		.4byte	.LFB33
 2520 062a 9C010000 		.4byte	.LFE33-.LFB33
 2521 062e 01       		.uleb128 0x1
 2522 062f 9C       		.byte	0x9c
 2523 0630 78080000 		.4byte	0x878
 2524 0634 1D       		.uleb128 0x1d
 2525 0635 F4000000 		.4byte	0xf4
 2526 0639 74000000 		.4byte	.LBB72
 2527 063d 54000000 		.4byte	.LBE72-.LBB72
 2528 0641 01       		.byte	0x1
 2529 0642 8B       		.byte	0x8b
 2530 0643 DB060000 		.4byte	0x6db
 2531 0647 1E       		.uleb128 0x1e
 2532 0648 01010000 		.4byte	0x101
 2533 064c 10       		.byte	0x10
 2534 064d 1F       		.uleb128 0x1f
 2535 064e 74000000 		.4byte	.LBB73
 2536 0652 54000000 		.4byte	.LBE73-.LBB73
 2537 0656 15       		.uleb128 0x15
 2538 0657 0D010000 		.4byte	0x10d
 2539 065b 87050000 		.4byte	.LLST35
 2540 065f 15       		.uleb128 0x15
 2541 0660 17010000 		.4byte	0x117
 2542 0664 B6050000 		.4byte	.LLST36
 2543 0668 12       		.uleb128 0x12
 2544 0669 08020000 		.4byte	0x208
 2545 066d 74000000 		.4byte	.LBB74
 2546 0671 2E000000 		.4byte	.LBE74-.LBB74
 2547 0675 01       		.byte	0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 65


 2548 0676 A201     		.2byte	0x1a2
 2549 0678 0C       		.uleb128 0xc
 2550 0679 15020000 		.4byte	0x215
 2551 067d CA050000 		.4byte	.LLST37
 2552 0681 20       		.uleb128 0x20
 2553 0682 22020000 		.4byte	0x222
 2554 0686 82000000 		.4byte	.LBB76
 2555 068a 20000000 		.4byte	.LBE76-.LBB76
 2556 068e 01       		.byte	0x1
 2557 068f B501     		.2byte	0x1b5
 2558 0691 BB060000 		.4byte	0x6bb
 2559 0695 0C       		.uleb128 0xc
 2560 0696 2F020000 		.4byte	0x22f
 2561 069a DD050000 		.4byte	.LLST38
 2562 069e 1F       		.uleb128 0x1f
 2563 069f 82000000 		.4byte	.LBB77
 2564 06a3 20000000 		.4byte	.LBE77-.LBB77
 2565 06a7 15       		.uleb128 0x15
 2566 06a8 3B020000 		.4byte	0x23b
 2567 06ac F0050000 		.4byte	.LLST39
 2568 06b0 10       		.uleb128 0x10
 2569 06b1 92000000 		.4byte	.LVL128
 2570 06b5 490B0000 		.4byte	0xb49
 2571 06b9 00       		.byte	0
 2572 06ba 00       		.byte	0
 2573 06bb 19       		.uleb128 0x19
 2574 06bc 7A000000 		.4byte	.LVL124
 2575 06c0 550B0000 		.4byte	0xb55
 2576 06c4 CF060000 		.4byte	0x6cf
 2577 06c8 0E       		.uleb128 0xe
 2578 06c9 01       		.uleb128 0x1
 2579 06ca 50       		.byte	0x50
 2580 06cb 02       		.uleb128 0x2
 2581 06cc 78       		.byte	0x78
 2582 06cd 00       		.sleb128 0
 2583 06ce 00       		.byte	0
 2584 06cf 10       		.uleb128 0x10
 2585 06d0 7E000000 		.4byte	.LVL125
 2586 06d4 600B0000 		.4byte	0xb60
 2587 06d8 00       		.byte	0
 2588 06d9 00       		.byte	0
 2589 06da 00       		.byte	0
 2590 06db 1D       		.uleb128 0x1d
 2591 06dc C5030000 		.4byte	0x3c5
 2592 06e0 DC000000 		.4byte	.LBB78
 2593 06e4 1E000000 		.4byte	.LBE78-.LBB78
 2594 06e8 01       		.byte	0x1
 2595 06e9 9A       		.byte	0x9a
 2596 06ea 4F070000 		.4byte	0x74f
 2597 06ee 1F       		.uleb128 0x1f
 2598 06ef DC000000 		.4byte	.LBB79
 2599 06f3 1E000000 		.4byte	.LBE79-.LBB79
 2600 06f7 15       		.uleb128 0x15
 2601 06f8 D2030000 		.4byte	0x3d2
 2602 06fc 0E060000 		.4byte	.LLST40
 2603 0700 15       		.uleb128 0x15
 2604 0701 DC030000 		.4byte	0x3dc
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 66


 2605 0705 44060000 		.4byte	.LLST41
 2606 0709 17       		.uleb128 0x17
 2607 070a DA000000 		.4byte	0xda
 2608 070e EE000000 		.4byte	.LBB80
 2609 0712 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 2610 0716 01       		.byte	0x1
 2611 0717 FE01     		.2byte	0x1fe
 2612 0719 37070000 		.4byte	0x737
 2613 071d 0C       		.uleb128 0xc
 2614 071e E7000000 		.4byte	0xe7
 2615 0722 62060000 		.4byte	.LLST42
 2616 0726 0D       		.uleb128 0xd
 2617 0727 F6000000 		.4byte	.LVL142
 2618 072b E9030000 		.4byte	0x3e9
 2619 072f 0E       		.uleb128 0xe
 2620 0730 01       		.uleb128 0x1
 2621 0731 50       		.byte	0x50
 2622 0732 02       		.uleb128 0x2
 2623 0733 77       		.byte	0x77
 2624 0734 7F       		.sleb128 -1
 2625 0735 00       		.byte	0
 2626 0736 00       		.byte	0
 2627 0737 0D       		.uleb128 0xd
 2628 0738 EA000000 		.4byte	.LVL138
 2629 073c 760B0000 		.4byte	0xb76
 2630 0740 0E       		.uleb128 0xe
 2631 0741 01       		.uleb128 0x1
 2632 0742 50       		.byte	0x50
 2633 0743 02       		.uleb128 0x2
 2634 0744 7B       		.byte	0x7b
 2635 0745 00       		.sleb128 0
 2636 0746 0E       		.uleb128 0xe
 2637 0747 01       		.uleb128 0x1
 2638 0748 51       		.byte	0x51
 2639 0749 02       		.uleb128 0x2
 2640 074a 77       		.byte	0x77
 2641 074b 00       		.sleb128 0
 2642 074c 00       		.byte	0
 2643 074d 00       		.byte	0
 2644 074e 00       		.byte	0
 2645 074f 19       		.uleb128 0x19
 2646 0750 14000000 		.4byte	.LVL107
 2647 0754 810B0000 		.4byte	0xb81
 2648 0758 62070000 		.4byte	0x762
 2649 075c 0E       		.uleb128 0xe
 2650 075d 01       		.uleb128 0x1
 2651 075e 50       		.byte	0x50
 2652 075f 01       		.uleb128 0x1
 2653 0760 30       		.byte	0x30
 2654 0761 00       		.byte	0
 2655 0762 19       		.uleb128 0x19
 2656 0763 1A000000 		.4byte	.LVL108
 2657 0767 8C0B0000 		.4byte	0xb8c
 2658 076b 75070000 		.4byte	0x775
 2659 076f 0E       		.uleb128 0xe
 2660 0770 01       		.uleb128 0x1
 2661 0771 50       		.byte	0x50
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 67


 2662 0772 01       		.uleb128 0x1
 2663 0773 30       		.byte	0x30
 2664 0774 00       		.byte	0
 2665 0775 19       		.uleb128 0x19
 2666 0776 20000000 		.4byte	.LVL109
 2667 077a 970B0000 		.4byte	0xb97
 2668 077e 88070000 		.4byte	0x788
 2669 0782 0E       		.uleb128 0xe
 2670 0783 01       		.uleb128 0x1
 2671 0784 50       		.byte	0x50
 2672 0785 01       		.uleb128 0x1
 2673 0786 30       		.byte	0x30
 2674 0787 00       		.byte	0
 2675 0788 19       		.uleb128 0x19
 2676 0789 26000000 		.4byte	.LVL110
 2677 078d A20B0000 		.4byte	0xba2
 2678 0791 9B070000 		.4byte	0x79b
 2679 0795 0E       		.uleb128 0xe
 2680 0796 01       		.uleb128 0x1
 2681 0797 50       		.byte	0x50
 2682 0798 01       		.uleb128 0x1
 2683 0799 30       		.byte	0x30
 2684 079a 00       		.byte	0
 2685 079b 19       		.uleb128 0x19
 2686 079c 2C000000 		.4byte	.LVL111
 2687 07a0 AD0B0000 		.4byte	0xbad
 2688 07a4 AE070000 		.4byte	0x7ae
 2689 07a8 0E       		.uleb128 0xe
 2690 07a9 01       		.uleb128 0x1
 2691 07aa 50       		.byte	0x50
 2692 07ab 01       		.uleb128 0x1
 2693 07ac 30       		.byte	0x30
 2694 07ad 00       		.byte	0
 2695 07ae 19       		.uleb128 0x19
 2696 07af 32000000 		.4byte	.LVL112
 2697 07b3 B80B0000 		.4byte	0xbb8
 2698 07b7 C1070000 		.4byte	0x7c1
 2699 07bb 0E       		.uleb128 0xe
 2700 07bc 01       		.uleb128 0x1
 2701 07bd 50       		.byte	0x50
 2702 07be 01       		.uleb128 0x1
 2703 07bf 30       		.byte	0x30
 2704 07c0 00       		.byte	0
 2705 07c1 19       		.uleb128 0x19
 2706 07c2 38000000 		.4byte	.LVL113
 2707 07c6 C30B0000 		.4byte	0xbc3
 2708 07ca D4070000 		.4byte	0x7d4
 2709 07ce 0E       		.uleb128 0xe
 2710 07cf 01       		.uleb128 0x1
 2711 07d0 50       		.byte	0x50
 2712 07d1 01       		.uleb128 0x1
 2713 07d2 30       		.byte	0x30
 2714 07d3 00       		.byte	0
 2715 07d4 19       		.uleb128 0x19
 2716 07d5 3E000000 		.4byte	.LVL114
 2717 07d9 CE0B0000 		.4byte	0xbce
 2718 07dd E7070000 		.4byte	0x7e7
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 68


 2719 07e1 0E       		.uleb128 0xe
 2720 07e2 01       		.uleb128 0x1
 2721 07e3 50       		.byte	0x50
 2722 07e4 01       		.uleb128 0x1
 2723 07e5 30       		.byte	0x30
 2724 07e6 00       		.byte	0
 2725 07e7 19       		.uleb128 0x19
 2726 07e8 44000000 		.4byte	.LVL115
 2727 07ec D90B0000 		.4byte	0xbd9
 2728 07f0 FB070000 		.4byte	0x7fb
 2729 07f4 0E       		.uleb128 0xe
 2730 07f5 01       		.uleb128 0x1
 2731 07f6 50       		.byte	0x50
 2732 07f7 02       		.uleb128 0x2
 2733 07f8 08       		.byte	0x8
 2734 07f9 FF       		.byte	0xff
 2735 07fa 00       		.byte	0
 2736 07fb 19       		.uleb128 0x19
 2737 07fc 4A000000 		.4byte	.LVL116
 2738 0800 E40B0000 		.4byte	0xbe4
 2739 0804 12080000 		.4byte	0x812
 2740 0808 0E       		.uleb128 0xe
 2741 0809 01       		.uleb128 0x1
 2742 080a 50       		.byte	0x50
 2743 080b 05       		.uleb128 0x5
 2744 080c 03       		.byte	0x3
 2745 080d 00000000 		.4byte	InterruptHandler
 2746 0811 00       		.byte	0
 2747 0812 10       		.uleb128 0x10
 2748 0813 4E000000 		.4byte	.LVL117
 2749 0817 EF0B0000 		.4byte	0xbef
 2750 081b 19       		.uleb128 0x19
 2751 081c 54000000 		.4byte	.LVL118
 2752 0820 FB0B0000 		.4byte	0xbfb
 2753 0824 2E080000 		.4byte	0x82e
 2754 0828 0E       		.uleb128 0xe
 2755 0829 01       		.uleb128 0x1
 2756 082a 50       		.byte	0x50
 2757 082b 01       		.uleb128 0x1
 2758 082c 44       		.byte	0x44
 2759 082d 00       		.byte	0
 2760 082e 19       		.uleb128 0x19
 2761 082f 5A000000 		.4byte	.LVL119
 2762 0833 FB0B0000 		.4byte	0xbfb
 2763 0837 41080000 		.4byte	0x841
 2764 083b 0E       		.uleb128 0xe
 2765 083c 01       		.uleb128 0x1
 2766 083d 50       		.byte	0x50
 2767 083e 01       		.uleb128 0x1
 2768 083f 44       		.byte	0x44
 2769 0840 00       		.byte	0
 2770 0841 10       		.uleb128 0x10
 2771 0842 5E000000 		.4byte	.LVL120
 2772 0846 060C0000 		.4byte	0xc06
 2773 084a 10       		.uleb128 0x10
 2774 084b 62000000 		.4byte	.LVL121
 2775 084f 83030000 		.4byte	0x383
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 69


 2776 0853 10       		.uleb128 0x10
 2777 0854 D0000000 		.4byte	.LVL133
 2778 0858 110C0000 		.4byte	0xc11
 2779 085c 10       		.uleb128 0x10
 2780 085d D4000000 		.4byte	.LVL134
 2781 0861 600B0000 		.4byte	0xb60
 2782 0865 10       		.uleb128 0x10
 2783 0866 FE000000 		.4byte	.LVL144
 2784 086a 1C0C0000 		.4byte	0xc1c
 2785 086e 10       		.uleb128 0x10
 2786 086f 62010000 		.4byte	.LVL145
 2787 0873 270C0000 		.4byte	0xc27
 2788 0877 00       		.byte	0
 2789 0878 0F       		.uleb128 0xf
 2790 0879 33070000 		.4byte	.LASF39
 2791 087d 01       		.byte	0x1
 2792 087e D802     		.2byte	0x2d8
 2793 0880 00000000 		.4byte	.LFB44
 2794 0884 34000000 		.4byte	.LFE44-.LFB44
 2795 0888 01       		.uleb128 0x1
 2796 0889 9C       		.byte	0x9c
 2797 088a F3080000 		.4byte	0x8f3
 2798 088e 21       		.uleb128 0x21
 2799 088f 93000000 		.4byte	.LASF40
 2800 0893 01       		.byte	0x1
 2801 0894 D802     		.2byte	0x2d8
 2802 0896 6B000000 		.4byte	0x6b
 2803 089a 8D060000 		.4byte	.LLST43
 2804 089e 21       		.uleb128 0x21
 2805 089f E0030000 		.4byte	.LASF41
 2806 08a3 01       		.byte	0x1
 2807 08a4 D802     		.2byte	0x2d8
 2808 08a6 77000000 		.4byte	0x77
 2809 08aa AE060000 		.4byte	.LLST44
 2810 08ae 10       		.uleb128 0x10
 2811 08af 10000000 		.4byte	.LVL147
 2812 08b3 320C0000 		.4byte	0xc32
 2813 08b7 19       		.uleb128 0x19
 2814 08b8 16000000 		.4byte	.LVL148
 2815 08bc 3E0B0000 		.4byte	0xb3e
 2816 08c0 CC080000 		.4byte	0x8cc
 2817 08c4 0E       		.uleb128 0xe
 2818 08c5 01       		.uleb128 0x1
 2819 08c6 50       		.byte	0x50
 2820 08c7 03       		.uleb128 0x3
 2821 08c8 0A       		.byte	0xa
 2822 08c9 FFFF     		.2byte	0xffff
 2823 08cb 00       		.byte	0
 2824 08cc 19       		.uleb128 0x19
 2825 08cd 1C000000 		.4byte	.LVL149
 2826 08d1 3D0C0000 		.4byte	0xc3d
 2827 08d5 E0080000 		.4byte	0x8e0
 2828 08d9 0E       		.uleb128 0xe
 2829 08da 01       		.uleb128 0x1
 2830 08db 50       		.byte	0x50
 2831 08dc 02       		.uleb128 0x2
 2832 08dd 74       		.byte	0x74
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 70


 2833 08de 00       		.sleb128 0
 2834 08df 00       		.byte	0
 2835 08e0 10       		.uleb128 0x10
 2836 08e1 20000000 		.4byte	.LVL150
 2837 08e5 480C0000 		.4byte	0xc48
 2838 08e9 10       		.uleb128 0x10
 2839 08ea 24000000 		.4byte	.LVL151
 2840 08ee 530C0000 		.4byte	0xc53
 2841 08f2 00       		.byte	0
 2842 08f3 0F       		.uleb128 0xf
 2843 08f4 47010000 		.4byte	.LASF42
 2844 08f8 01       		.byte	0x1
 2845 08f9 F302     		.2byte	0x2f3
 2846 08fb 00000000 		.4byte	.LFB45
 2847 08ff 40000000 		.4byte	.LFE45-.LFB45
 2848 0903 01       		.uleb128 0x1
 2849 0904 9C       		.byte	0x9c
 2850 0905 79090000 		.4byte	0x979
 2851 0909 21       		.uleb128 0x21
 2852 090a 93000000 		.4byte	.LASF40
 2853 090e 01       		.byte	0x1
 2854 090f F302     		.2byte	0x2f3
 2855 0911 6B000000 		.4byte	0x6b
 2856 0915 CF060000 		.4byte	.LLST45
 2857 0919 21       		.uleb128 0x21
 2858 091a E0030000 		.4byte	.LASF41
 2859 091e 01       		.byte	0x1
 2860 091f F302     		.2byte	0x2f3
 2861 0921 77000000 		.4byte	0x77
 2862 0925 F0060000 		.4byte	.LLST46
 2863 0929 19       		.uleb128 0x19
 2864 092a 12000000 		.4byte	.LVL154
 2865 092e 5E0C0000 		.4byte	0xc5e
 2866 0932 40090000 		.4byte	0x940
 2867 0936 0E       		.uleb128 0xe
 2868 0937 01       		.uleb128 0x1
 2869 0938 50       		.byte	0x50
 2870 0939 05       		.uleb128 0x5
 2871 093a 03       		.byte	0x3
 2872 093b 00000000 		.4byte	WDT_ISR
 2873 093f 00       		.byte	0
 2874 0940 10       		.uleb128 0x10
 2875 0941 16000000 		.4byte	.LVL155
 2876 0945 330B0000 		.4byte	0xb33
 2877 0949 10       		.uleb128 0x10
 2878 094a 24000000 		.4byte	.LVL156
 2879 094e 3E0B0000 		.4byte	0xb3e
 2880 0952 19       		.uleb128 0x19
 2881 0953 2A000000 		.4byte	.LVL157
 2882 0957 3D0C0000 		.4byte	0xc3d
 2883 095b 66090000 		.4byte	0x966
 2884 095f 0E       		.uleb128 0xe
 2885 0960 01       		.uleb128 0x1
 2886 0961 50       		.byte	0x50
 2887 0962 02       		.uleb128 0x2
 2888 0963 74       		.byte	0x74
 2889 0964 00       		.sleb128 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 71


 2890 0965 00       		.byte	0
 2891 0966 10       		.uleb128 0x10
 2892 0967 2E000000 		.4byte	.LVL158
 2893 096b 480C0000 		.4byte	0xc48
 2894 096f 10       		.uleb128 0x10
 2895 0970 32000000 		.4byte	.LVL159
 2896 0974 530C0000 		.4byte	0xc53
 2897 0978 00       		.byte	0
 2898 0979 22       		.uleb128 0x22
 2899 097a D7040000 		.4byte	.LASF99
 2900 097e 01       		.byte	0x1
 2901 097f 0D03     		.2byte	0x30d
 2902 0981 00000000 		.4byte	.LFB46
 2903 0985 0C000000 		.4byte	.LFE46-.LFB46
 2904 0989 01       		.uleb128 0x1
 2905 098a 9C       		.byte	0x9c
 2906 098b A4090000 		.4byte	0x9a4
 2907 098f 0D       		.uleb128 0xd
 2908 0990 0A000000 		.4byte	.LVL160
 2909 0994 78080000 		.4byte	0x878
 2910 0998 0E       		.uleb128 0xe
 2911 0999 01       		.uleb128 0x1
 2912 099a 50       		.byte	0x50
 2913 099b 01       		.uleb128 0x1
 2914 099c 35       		.byte	0x35
 2915 099d 0E       		.uleb128 0xe
 2916 099e 01       		.uleb128 0x1
 2917 099f 51       		.byte	0x51
 2918 09a0 01       		.uleb128 0x1
 2919 09a1 44       		.byte	0x44
 2920 09a2 00       		.byte	0
 2921 09a3 00       		.byte	0
 2922 09a4 23       		.uleb128 0x23
 2923 09a5 77000000 		.4byte	0x77
 2924 09a9 B4090000 		.4byte	0x9b4
 2925 09ad 24       		.uleb128 0x24
 2926 09ae AB000000 		.4byte	0xab
 2927 09b2 05       		.byte	0x5
 2928 09b3 00       		.byte	0
 2929 09b4 25       		.uleb128 0x25
 2930 09b5 36000000 		.4byte	.LASF43
 2931 09b9 01       		.byte	0x1
 2932 09ba 21       		.byte	0x21
 2933 09bb A4090000 		.4byte	0x9a4
 2934 09bf 23       		.uleb128 0x23
 2935 09c0 6B000000 		.4byte	0x6b
 2936 09c4 CF090000 		.4byte	0x9cf
 2937 09c8 24       		.uleb128 0x24
 2938 09c9 AB000000 		.4byte	0xab
 2939 09cd 00       		.byte	0
 2940 09ce 00       		.byte	0
 2941 09cf 26       		.uleb128 0x26
 2942 09d0 03020000 		.4byte	.LASF44
 2943 09d4 03       		.byte	0x3
 2944 09d5 C202     		.2byte	0x2c2
 2945 09d7 BF090000 		.4byte	0x9bf
 2946 09db 23       		.uleb128 0x23
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 72


 2947 09dc B2000000 		.4byte	0xb2
 2948 09e0 EB090000 		.4byte	0x9eb
 2949 09e4 24       		.uleb128 0x24
 2950 09e5 AB000000 		.4byte	0xab
 2951 09e9 05       		.byte	0x5
 2952 09ea 00       		.byte	0
 2953 09eb 26       		.uleb128 0x26
 2954 09ec 6C060000 		.4byte	.LASF45
 2955 09f0 03       		.byte	0x3
 2956 09f1 E002     		.2byte	0x2e0
 2957 09f3 F7090000 		.4byte	0x9f7
 2958 09f7 05       		.uleb128 0x5
 2959 09f8 DB090000 		.4byte	0x9db
 2960 09fc 25       		.uleb128 0x25
 2961 09fd D4060000 		.4byte	.LASF46
 2962 0a01 01       		.byte	0x1
 2963 0a02 22       		.byte	0x22
 2964 0a03 A4090000 		.4byte	0x9a4
 2965 0a07 23       		.uleb128 0x23
 2966 0a08 6B000000 		.4byte	0x6b
 2967 0a0c 170A0000 		.4byte	0xa17
 2968 0a10 24       		.uleb128 0x24
 2969 0a11 AB000000 		.4byte	0xab
 2970 0a15 05       		.byte	0x5
 2971 0a16 00       		.byte	0
 2972 0a17 26       		.uleb128 0x26
 2973 0a18 71050000 		.4byte	.LASF47
 2974 0a1c 04       		.byte	0x4
 2975 0a1d 2A01     		.2byte	0x12a
 2976 0a1f 070A0000 		.4byte	0xa07
 2977 0a23 25       		.uleb128 0x25
 2978 0a24 66040000 		.4byte	.LASF48
 2979 0a28 01       		.byte	0x1
 2980 0a29 1F       		.byte	0x1f
 2981 0a2a A4090000 		.4byte	0x9a4
 2982 0a2e 26       		.uleb128 0x26
 2983 0a2f 8A010000 		.4byte	.LASF49
 2984 0a33 04       		.byte	0x4
 2985 0a34 2E01     		.2byte	0x12e
 2986 0a36 070A0000 		.4byte	0xa07
 2987 0a3a 26       		.uleb128 0x26
 2988 0a3b BC020000 		.4byte	.LASF50
 2989 0a3f 04       		.byte	0x4
 2990 0a40 2F01     		.2byte	0x12f
 2991 0a42 070A0000 		.4byte	0xa07
 2992 0a46 26       		.uleb128 0x26
 2993 0a47 EC060000 		.4byte	.LASF51
 2994 0a4b 04       		.byte	0x4
 2995 0a4c 3401     		.2byte	0x134
 2996 0a4e A4090000 		.4byte	0x9a4
 2997 0a52 26       		.uleb128 0x26
 2998 0a53 23030000 		.4byte	.LASF52
 2999 0a57 04       		.byte	0x4
 3000 0a58 3501     		.2byte	0x135
 3001 0a5a A4090000 		.4byte	0x9a4
 3002 0a5e 27       		.uleb128 0x27
 3003 0a5f 6400     		.ascii	"d\000"
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 73


 3004 0a61 01       		.byte	0x1
 3005 0a62 1D       		.byte	0x1d
 3006 0a63 2C000000 		.4byte	0x2c
 3007 0a67 05       		.uleb128 0x5
 3008 0a68 03       		.byte	0x3
 3009 0a69 00000000 		.4byte	d
 3010 0a6d 28       		.uleb128 0x28
 3011 0a6e 34020000 		.4byte	.LASF53
 3012 0a72 01       		.byte	0x1
 3013 0a73 27       		.byte	0x27
 3014 0a74 83000000 		.4byte	0x83
 3015 0a78 05       		.uleb128 0x5
 3016 0a79 03       		.byte	0x3
 3017 0a7a 00000000 		.4byte	ILODelayCycles_0
 3018 0a7e 28       		.uleb128 0x28
 3019 0a7f FC040000 		.4byte	.LASF54
 3020 0a83 01       		.byte	0x1
 3021 0a84 28       		.byte	0x28
 3022 0a85 83000000 		.4byte	0x83
 3023 0a89 05       		.uleb128 0x5
 3024 0a8a 03       		.byte	0x3
 3025 0a8b 00000000 		.4byte	ILODelayCycles_1
 3026 0a8f 25       		.uleb128 0x25
 3027 0a90 16010000 		.4byte	.LASF55
 3028 0a94 01       		.byte	0x1
 3029 0a95 31       		.byte	0x31
 3030 0a96 A4090000 		.4byte	0x9a4
 3031 0a9a 28       		.uleb128 0x28
 3032 0a9b 3C070000 		.4byte	.LASF56
 3033 0a9f 01       		.byte	0x1
 3034 0aa0 3C       		.byte	0x3c
 3035 0aa1 6B000000 		.4byte	0x6b
 3036 0aa5 05       		.uleb128 0x5
 3037 0aa6 03       		.byte	0x3
 3038 0aa7 00000000 		.4byte	WDT_Clear_Flag
 3039 0aab 28       		.uleb128 0x28
 3040 0aac EF000000 		.4byte	.LASF57
 3041 0ab0 01       		.byte	0x1
 3042 0ab1 3D       		.byte	0x3d
 3043 0ab2 77000000 		.4byte	0x77
 3044 0ab6 05       		.uleb128 0x5
 3045 0ab7 03       		.byte	0x3
 3046 0ab8 00000000 		.4byte	WDT_Ignore
 3047 0abc 28       		.uleb128 0x28
 3048 0abd FA000000 		.4byte	.LASF58
 3049 0ac1 01       		.byte	0x1
 3050 0ac2 3E       		.byte	0x3e
 3051 0ac3 77000000 		.4byte	0x77
 3052 0ac7 05       		.uleb128 0x5
 3053 0ac8 03       		.byte	0x3
 3054 0ac9 00000000 		.4byte	WDT_Match
 3055 0acd 28       		.uleb128 0x28
 3056 0ace 38010000 		.4byte	.LASF59
 3057 0ad2 01       		.byte	0x1
 3058 0ad3 46       		.byte	0x46
 3059 0ad4 2C000000 		.4byte	0x2c
 3060 0ad8 05       		.uleb128 0x5
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 74


 3061 0ad9 03       		.byte	0x3
 3062 0ada 00000000 		.4byte	key_scan_count
 3063 0ade 28       		.uleb128 0x28
 3064 0adf 0D050000 		.4byte	.LASF60
 3065 0ae3 01       		.byte	0x1
 3066 0ae4 4D       		.byte	0x4d
 3067 0ae5 A4090000 		.4byte	0x9a4
 3068 0ae9 05       		.uleb128 0x5
 3069 0aea 03       		.byte	0x3
 3070 0aeb 00000000 		.4byte	Capsense_FilteredRawData
 3071 0aef 28       		.uleb128 0x28
 3072 0af0 97060000 		.4byte	.LASF61
 3073 0af4 01       		.byte	0x1
 3074 0af5 4E       		.byte	0x4e
 3075 0af6 A4090000 		.4byte	0x9a4
 3076 0afa 05       		.uleb128 0x5
 3077 0afb 03       		.byte	0x3
 3078 0afc 00000000 		.4byte	Sub_Buff
 3079 0b00 28       		.uleb128 0x28
 3080 0b01 78070000 		.4byte	.LASF62
 3081 0b05 01       		.byte	0x1
 3082 0b06 4F       		.byte	0x4f
 3083 0b07 6B000000 		.4byte	0x6b
 3084 0b0b 05       		.uleb128 0x5
 3085 0b0c 03       		.byte	0x3
 3086 0b0d 00000000 		.4byte	SignalBit_Debug
 3087 0b11 29       		.uleb128 0x29
 3088 0b12 4F040000 		.4byte	.LASF63
 3089 0b16 4F040000 		.4byte	.LASF63
 3090 0b1a 05       		.byte	0x5
 3091 0b1b 4701     		.2byte	0x147
 3092 0b1d 2A       		.uleb128 0x2a
 3093 0b1e 1D020000 		.4byte	.LASF64
 3094 0b22 1D020000 		.4byte	.LASF64
 3095 0b26 06       		.byte	0x6
 3096 0b27 8F       		.byte	0x8f
 3097 0b28 2A       		.uleb128 0x2a
 3098 0b29 82060000 		.4byte	.LASF65
 3099 0b2d 82060000 		.4byte	.LASF65
 3100 0b31 07       		.byte	0x7
 3101 0b32 28       		.byte	0x28
 3102 0b33 2A       		.uleb128 0x2a
 3103 0b34 CF030000 		.4byte	.LASF66
 3104 0b38 CF030000 		.4byte	.LASF66
 3105 0b3c 06       		.byte	0x6
 3106 0b3d 8B       		.byte	0x8b
 3107 0b3e 2A       		.uleb128 0x2a
 3108 0b3f C6040000 		.4byte	.LASF67
 3109 0b43 C6040000 		.4byte	.LASF67
 3110 0b47 06       		.byte	0x6
 3111 0b48 8A       		.byte	0x8a
 3112 0b49 29       		.uleb128 0x29
 3113 0b4a A2040000 		.4byte	.LASF68
 3114 0b4e A2040000 		.4byte	.LASF68
 3115 0b52 04       		.byte	0x4
 3116 0b53 0E01     		.2byte	0x10e
 3117 0b55 2A       		.uleb128 0x2a
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 75


 3118 0b56 BB030000 		.4byte	.LASF69
 3119 0b5a BB030000 		.4byte	.LASF69
 3120 0b5e 03       		.byte	0x3
 3121 0b5f A1       		.byte	0xa1
 3122 0b60 2A       		.uleb128 0x2a
 3123 0b61 B1060000 		.4byte	.LASF70
 3124 0b65 B1060000 		.4byte	.LASF70
 3125 0b69 03       		.byte	0x3
 3126 0b6a A0       		.byte	0xa0
 3127 0b6b 2A       		.uleb128 0x2a
 3128 0b6c 88070000 		.4byte	.LASF71
 3129 0b70 88070000 		.4byte	.LASF71
 3130 0b74 04       		.byte	0x4
 3131 0b75 B8       		.byte	0xb8
 3132 0b76 2A       		.uleb128 0x2a
 3133 0b77 EE010000 		.4byte	.LASF72
 3134 0b7b EE010000 		.4byte	.LASF72
 3135 0b7f 08       		.byte	0x8
 3136 0b80 6A       		.byte	0x6a
 3137 0b81 2A       		.uleb128 0x2a
 3138 0b82 59060000 		.4byte	.LASF73
 3139 0b86 59060000 		.4byte	.LASF73
 3140 0b8a 09       		.byte	0x9
 3141 0b8b 33       		.byte	0x33
 3142 0b8c 2A       		.uleb128 0x2a
 3143 0b8d 04010000 		.4byte	.LASF74
 3144 0b91 04010000 		.4byte	.LASF74
 3145 0b95 0A       		.byte	0xa
 3146 0b96 33       		.byte	0x33
 3147 0b97 2A       		.uleb128 0x2a
 3148 0b98 C1060000 		.4byte	.LASF75
 3149 0b9c C1060000 		.4byte	.LASF75
 3150 0ba0 0B       		.byte	0xb
 3151 0ba1 33       		.byte	0x33
 3152 0ba2 2A       		.uleb128 0x2a
 3153 0ba3 8F040000 		.4byte	.LASF76
 3154 0ba7 8F040000 		.4byte	.LASF76
 3155 0bab 0C       		.byte	0xc
 3156 0bac 33       		.byte	0x33
 3157 0bad 2A       		.uleb128 0x2a
 3158 0bae 50050000 		.4byte	.LASF77
 3159 0bb2 50050000 		.4byte	.LASF77
 3160 0bb6 0D       		.byte	0xd
 3161 0bb7 33       		.byte	0x33
 3162 0bb8 2A       		.uleb128 0x2a
 3163 0bb9 77010000 		.4byte	.LASF78
 3164 0bbd 77010000 		.4byte	.LASF78
 3165 0bc1 0E       		.byte	0xe
 3166 0bc2 33       		.byte	0x33
 3167 0bc3 2A       		.uleb128 0x2a
 3168 0bc4 49000000 		.4byte	.LASF79
 3169 0bc8 49000000 		.4byte	.LASF79
 3170 0bcc 0F       		.byte	0xf
 3171 0bcd 1D       		.byte	0x1d
 3172 0bce 2A       		.uleb128 0x2a
 3173 0bcf FD030000 		.4byte	.LASF80
 3174 0bd3 FD030000 		.4byte	.LASF80
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 76


 3175 0bd7 10       		.byte	0x10
 3176 0bd8 1D       		.byte	0x1d
 3177 0bd9 2A       		.uleb128 0x2a
 3178 0bda E7040000 		.4byte	.LASF81
 3179 0bde E7040000 		.4byte	.LASF81
 3180 0be2 11       		.byte	0x11
 3181 0be3 1D       		.byte	0x1d
 3182 0be4 2A       		.uleb128 0x2a
 3183 0be5 C6000000 		.4byte	.LASF82
 3184 0be9 C6000000 		.4byte	.LASF82
 3185 0bed 12       		.byte	0x12
 3186 0bee 18       		.byte	0x18
 3187 0bef 29       		.uleb128 0x29
 3188 0bf0 63050000 		.4byte	.LASF83
 3189 0bf4 63050000 		.4byte	.LASF83
 3190 0bf8 05       		.byte	0x5
 3191 0bf9 3201     		.2byte	0x132
 3192 0bfb 2A       		.uleb128 0x2a
 3193 0bfc 70070000 		.4byte	.LASF84
 3194 0c00 70070000 		.4byte	.LASF84
 3195 0c04 13       		.byte	0x13
 3196 0c05 D9       		.byte	0xd9
 3197 0c06 2A       		.uleb128 0x2a
 3198 0c07 33040000 		.4byte	.LASF85
 3199 0c0b 33040000 		.4byte	.LASF85
 3200 0c0f 03       		.byte	0x3
 3201 0c10 9A       		.byte	0x9a
 3202 0c11 2A       		.uleb128 0x2a
 3203 0c12 C3010000 		.4byte	.LASF86
 3204 0c16 C3010000 		.4byte	.LASF86
 3205 0c1a 03       		.byte	0x3
 3206 0c1b A3       		.byte	0xa3
 3207 0c1c 2A       		.uleb128 0x2a
 3208 0c1d 5B000000 		.4byte	.LASF87
 3209 0c21 5B000000 		.4byte	.LASF87
 3210 0c25 04       		.byte	0x4
 3211 0c26 DC       		.byte	0xdc
 3212 0c27 2A       		.uleb128 0x2a
 3213 0c28 03030000 		.4byte	.LASF88
 3214 0c2c 03030000 		.4byte	.LASF88
 3215 0c30 01       		.byte	0x1
 3216 0c31 1C       		.byte	0x1c
 3217 0c32 2A       		.uleb128 0x2a
 3218 0c33 56010000 		.4byte	.LASF89
 3219 0c37 56010000 		.4byte	.LASF89
 3220 0c3b 07       		.byte	0x7
 3221 0c3c 19       		.byte	0x19
 3222 0c3d 2A       		.uleb128 0x2a
 3223 0c3e AD010000 		.4byte	.LASF90
 3224 0c42 AD010000 		.4byte	.LASF90
 3225 0c46 06       		.byte	0x6
 3226 0c47 8D       		.byte	0x8d
 3227 0c48 2A       		.uleb128 0x2a
 3228 0c49 27000000 		.4byte	.LASF91
 3229 0c4d 27000000 		.4byte	.LASF91
 3230 0c51 06       		.byte	0x6
 3231 0c52 88       		.byte	0x88
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 77


 3232 0c53 2A       		.uleb128 0x2a
 3233 0c54 7B000000 		.4byte	.LASF92
 3234 0c58 7B000000 		.4byte	.LASF92
 3235 0c5c 06       		.byte	0x6
 3236 0c5d 91       		.byte	0x91
 3237 0c5e 2A       		.uleb128 0x2a
 3238 0c5f 4B020000 		.4byte	.LASF93
 3239 0c63 4B020000 		.4byte	.LASF93
 3240 0c67 07       		.byte	0x7
 3241 0c68 18       		.byte	0x18
 3242 0c69 00       		.byte	0
 3243              		.section	.debug_abbrev,"",%progbits
 3244              	.Ldebug_abbrev0:
 3245 0000 01       		.uleb128 0x1
 3246 0001 11       		.uleb128 0x11
 3247 0002 01       		.byte	0x1
 3248 0003 25       		.uleb128 0x25
 3249 0004 0E       		.uleb128 0xe
 3250 0005 13       		.uleb128 0x13
 3251 0006 0B       		.uleb128 0xb
 3252 0007 03       		.uleb128 0x3
 3253 0008 0E       		.uleb128 0xe
 3254 0009 1B       		.uleb128 0x1b
 3255 000a 0E       		.uleb128 0xe
 3256 000b 55       		.uleb128 0x55
 3257 000c 17       		.uleb128 0x17
 3258 000d 11       		.uleb128 0x11
 3259 000e 01       		.uleb128 0x1
 3260 000f 10       		.uleb128 0x10
 3261 0010 17       		.uleb128 0x17
 3262 0011 00       		.byte	0
 3263 0012 00       		.byte	0
 3264 0013 02       		.uleb128 0x2
 3265 0014 24       		.uleb128 0x24
 3266 0015 00       		.byte	0
 3267 0016 0B       		.uleb128 0xb
 3268 0017 0B       		.uleb128 0xb
 3269 0018 3E       		.uleb128 0x3e
 3270 0019 0B       		.uleb128 0xb
 3271 001a 03       		.uleb128 0x3
 3272 001b 0E       		.uleb128 0xe
 3273 001c 00       		.byte	0
 3274 001d 00       		.byte	0
 3275 001e 03       		.uleb128 0x3
 3276 001f 24       		.uleb128 0x24
 3277 0020 00       		.byte	0
 3278 0021 0B       		.uleb128 0xb
 3279 0022 0B       		.uleb128 0xb
 3280 0023 3E       		.uleb128 0x3e
 3281 0024 0B       		.uleb128 0xb
 3282 0025 03       		.uleb128 0x3
 3283 0026 08       		.uleb128 0x8
 3284 0027 00       		.byte	0
 3285 0028 00       		.byte	0
 3286 0029 04       		.uleb128 0x4
 3287 002a 16       		.uleb128 0x16
 3288 002b 00       		.byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 78


 3289 002c 03       		.uleb128 0x3
 3290 002d 0E       		.uleb128 0xe
 3291 002e 3A       		.uleb128 0x3a
 3292 002f 0B       		.uleb128 0xb
 3293 0030 3B       		.uleb128 0x3b
 3294 0031 05       		.uleb128 0x5
 3295 0032 49       		.uleb128 0x49
 3296 0033 13       		.uleb128 0x13
 3297 0034 00       		.byte	0
 3298 0035 00       		.byte	0
 3299 0036 05       		.uleb128 0x5
 3300 0037 26       		.uleb128 0x26
 3301 0038 00       		.byte	0
 3302 0039 49       		.uleb128 0x49
 3303 003a 13       		.uleb128 0x13
 3304 003b 00       		.byte	0
 3305 003c 00       		.byte	0
 3306 003d 06       		.uleb128 0x6
 3307 003e 2E       		.uleb128 0x2e
 3308 003f 00       		.byte	0
 3309 0040 3F       		.uleb128 0x3f
 3310 0041 19       		.uleb128 0x19
 3311 0042 03       		.uleb128 0x3
 3312 0043 0E       		.uleb128 0xe
 3313 0044 3A       		.uleb128 0x3a
 3314 0045 0B       		.uleb128 0xb
 3315 0046 3B       		.uleb128 0x3b
 3316 0047 05       		.uleb128 0x5
 3317 0048 27       		.uleb128 0x27
 3318 0049 19       		.uleb128 0x19
 3319 004a 20       		.uleb128 0x20
 3320 004b 0B       		.uleb128 0xb
 3321 004c 00       		.byte	0
 3322 004d 00       		.byte	0
 3323 004e 07       		.uleb128 0x7
 3324 004f 2E       		.uleb128 0x2e
 3325 0050 01       		.byte	0x1
 3326 0051 3F       		.uleb128 0x3f
 3327 0052 19       		.uleb128 0x19
 3328 0053 03       		.uleb128 0x3
 3329 0054 0E       		.uleb128 0xe
 3330 0055 3A       		.uleb128 0x3a
 3331 0056 0B       		.uleb128 0xb
 3332 0057 3B       		.uleb128 0x3b
 3333 0058 05       		.uleb128 0x5
 3334 0059 27       		.uleb128 0x27
 3335 005a 19       		.uleb128 0x19
 3336 005b 20       		.uleb128 0x20
 3337 005c 0B       		.uleb128 0xb
 3338 005d 01       		.uleb128 0x1
 3339 005e 13       		.uleb128 0x13
 3340 005f 00       		.byte	0
 3341 0060 00       		.byte	0
 3342 0061 08       		.uleb128 0x8
 3343 0062 05       		.uleb128 0x5
 3344 0063 00       		.byte	0
 3345 0064 03       		.uleb128 0x3
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 79


 3346 0065 0E       		.uleb128 0xe
 3347 0066 3A       		.uleb128 0x3a
 3348 0067 0B       		.uleb128 0xb
 3349 0068 3B       		.uleb128 0x3b
 3350 0069 05       		.uleb128 0x5
 3351 006a 49       		.uleb128 0x49
 3352 006b 13       		.uleb128 0x13
 3353 006c 00       		.byte	0
 3354 006d 00       		.byte	0
 3355 006e 09       		.uleb128 0x9
 3356 006f 34       		.uleb128 0x34
 3357 0070 00       		.byte	0
 3358 0071 03       		.uleb128 0x3
 3359 0072 08       		.uleb128 0x8
 3360 0073 3A       		.uleb128 0x3a
 3361 0074 0B       		.uleb128 0xb
 3362 0075 3B       		.uleb128 0x3b
 3363 0076 05       		.uleb128 0x5
 3364 0077 49       		.uleb128 0x49
 3365 0078 13       		.uleb128 0x13
 3366 0079 00       		.byte	0
 3367 007a 00       		.byte	0
 3368 007b 0A       		.uleb128 0xa
 3369 007c 2E       		.uleb128 0x2e
 3370 007d 01       		.byte	0x1
 3371 007e 3F       		.uleb128 0x3f
 3372 007f 19       		.uleb128 0x19
 3373 0080 03       		.uleb128 0x3
 3374 0081 0E       		.uleb128 0xe
 3375 0082 3A       		.uleb128 0x3a
 3376 0083 0B       		.uleb128 0xb
 3377 0084 3B       		.uleb128 0x3b
 3378 0085 0B       		.uleb128 0xb
 3379 0086 27       		.uleb128 0x27
 3380 0087 19       		.uleb128 0x19
 3381 0088 11       		.uleb128 0x11
 3382 0089 01       		.uleb128 0x1
 3383 008a 12       		.uleb128 0x12
 3384 008b 06       		.uleb128 0x6
 3385 008c 40       		.uleb128 0x40
 3386 008d 18       		.uleb128 0x18
 3387 008e 9742     		.uleb128 0x2117
 3388 0090 19       		.uleb128 0x19
 3389 0091 01       		.uleb128 0x1
 3390 0092 13       		.uleb128 0x13
 3391 0093 00       		.byte	0
 3392 0094 00       		.byte	0
 3393 0095 0B       		.uleb128 0xb
 3394 0096 1D       		.uleb128 0x1d
 3395 0097 01       		.byte	0x1
 3396 0098 31       		.uleb128 0x31
 3397 0099 13       		.uleb128 0x13
 3398 009a 52       		.uleb128 0x52
 3399 009b 01       		.uleb128 0x1
 3400 009c 55       		.uleb128 0x55
 3401 009d 17       		.uleb128 0x17
 3402 009e 58       		.uleb128 0x58
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 80


 3403 009f 0B       		.uleb128 0xb
 3404 00a0 59       		.uleb128 0x59
 3405 00a1 0B       		.uleb128 0xb
 3406 00a2 01       		.uleb128 0x1
 3407 00a3 13       		.uleb128 0x13
 3408 00a4 00       		.byte	0
 3409 00a5 00       		.byte	0
 3410 00a6 0C       		.uleb128 0xc
 3411 00a7 05       		.uleb128 0x5
 3412 00a8 00       		.byte	0
 3413 00a9 31       		.uleb128 0x31
 3414 00aa 13       		.uleb128 0x13
 3415 00ab 02       		.uleb128 0x2
 3416 00ac 17       		.uleb128 0x17
 3417 00ad 00       		.byte	0
 3418 00ae 00       		.byte	0
 3419 00af 0D       		.uleb128 0xd
 3420 00b0 898201   		.uleb128 0x4109
 3421 00b3 01       		.byte	0x1
 3422 00b4 11       		.uleb128 0x11
 3423 00b5 01       		.uleb128 0x1
 3424 00b6 31       		.uleb128 0x31
 3425 00b7 13       		.uleb128 0x13
 3426 00b8 00       		.byte	0
 3427 00b9 00       		.byte	0
 3428 00ba 0E       		.uleb128 0xe
 3429 00bb 8A8201   		.uleb128 0x410a
 3430 00be 00       		.byte	0
 3431 00bf 02       		.uleb128 0x2
 3432 00c0 18       		.uleb128 0x18
 3433 00c1 9142     		.uleb128 0x2111
 3434 00c3 18       		.uleb128 0x18
 3435 00c4 00       		.byte	0
 3436 00c5 00       		.byte	0
 3437 00c6 0F       		.uleb128 0xf
 3438 00c7 2E       		.uleb128 0x2e
 3439 00c8 01       		.byte	0x1
 3440 00c9 3F       		.uleb128 0x3f
 3441 00ca 19       		.uleb128 0x19
 3442 00cb 03       		.uleb128 0x3
 3443 00cc 0E       		.uleb128 0xe
 3444 00cd 3A       		.uleb128 0x3a
 3445 00ce 0B       		.uleb128 0xb
 3446 00cf 3B       		.uleb128 0x3b
 3447 00d0 05       		.uleb128 0x5
 3448 00d1 27       		.uleb128 0x27
 3449 00d2 19       		.uleb128 0x19
 3450 00d3 11       		.uleb128 0x11
 3451 00d4 01       		.uleb128 0x1
 3452 00d5 12       		.uleb128 0x12
 3453 00d6 06       		.uleb128 0x6
 3454 00d7 40       		.uleb128 0x40
 3455 00d8 18       		.uleb128 0x18
 3456 00d9 9742     		.uleb128 0x2117
 3457 00db 19       		.uleb128 0x19
 3458 00dc 01       		.uleb128 0x1
 3459 00dd 13       		.uleb128 0x13
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 81


 3460 00de 00       		.byte	0
 3461 00df 00       		.byte	0
 3462 00e0 10       		.uleb128 0x10
 3463 00e1 898201   		.uleb128 0x4109
 3464 00e4 00       		.byte	0
 3465 00e5 11       		.uleb128 0x11
 3466 00e6 01       		.uleb128 0x1
 3467 00e7 31       		.uleb128 0x31
 3468 00e8 13       		.uleb128 0x13
 3469 00e9 00       		.byte	0
 3470 00ea 00       		.byte	0
 3471 00eb 11       		.uleb128 0x11
 3472 00ec 2E       		.uleb128 0x2e
 3473 00ed 01       		.byte	0x1
 3474 00ee 31       		.uleb128 0x31
 3475 00ef 13       		.uleb128 0x13
 3476 00f0 11       		.uleb128 0x11
 3477 00f1 01       		.uleb128 0x1
 3478 00f2 12       		.uleb128 0x12
 3479 00f3 06       		.uleb128 0x6
 3480 00f4 40       		.uleb128 0x40
 3481 00f5 18       		.uleb128 0x18
 3482 00f6 9742     		.uleb128 0x2117
 3483 00f8 19       		.uleb128 0x19
 3484 00f9 01       		.uleb128 0x1
 3485 00fa 13       		.uleb128 0x13
 3486 00fb 00       		.byte	0
 3487 00fc 00       		.byte	0
 3488 00fd 12       		.uleb128 0x12
 3489 00fe 1D       		.uleb128 0x1d
 3490 00ff 01       		.byte	0x1
 3491 0100 31       		.uleb128 0x31
 3492 0101 13       		.uleb128 0x13
 3493 0102 11       		.uleb128 0x11
 3494 0103 01       		.uleb128 0x1
 3495 0104 12       		.uleb128 0x12
 3496 0105 06       		.uleb128 0x6
 3497 0106 58       		.uleb128 0x58
 3498 0107 0B       		.uleb128 0xb
 3499 0108 59       		.uleb128 0x59
 3500 0109 05       		.uleb128 0x5
 3501 010a 00       		.byte	0
 3502 010b 00       		.byte	0
 3503 010c 13       		.uleb128 0x13
 3504 010d 05       		.uleb128 0x5
 3505 010e 00       		.byte	0
 3506 010f 31       		.uleb128 0x31
 3507 0110 13       		.uleb128 0x13
 3508 0111 02       		.uleb128 0x2
 3509 0112 18       		.uleb128 0x18
 3510 0113 00       		.byte	0
 3511 0114 00       		.byte	0
 3512 0115 14       		.uleb128 0x14
 3513 0116 34       		.uleb128 0x34
 3514 0117 00       		.byte	0
 3515 0118 03       		.uleb128 0x3
 3516 0119 0E       		.uleb128 0xe
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 82


 3517 011a 3A       		.uleb128 0x3a
 3518 011b 0B       		.uleb128 0xb
 3519 011c 3B       		.uleb128 0x3b
 3520 011d 05       		.uleb128 0x5
 3521 011e 49       		.uleb128 0x49
 3522 011f 13       		.uleb128 0x13
 3523 0120 00       		.byte	0
 3524 0121 00       		.byte	0
 3525 0122 15       		.uleb128 0x15
 3526 0123 34       		.uleb128 0x34
 3527 0124 00       		.byte	0
 3528 0125 31       		.uleb128 0x31
 3529 0126 13       		.uleb128 0x13
 3530 0127 02       		.uleb128 0x2
 3531 0128 17       		.uleb128 0x17
 3532 0129 00       		.byte	0
 3533 012a 00       		.byte	0
 3534 012b 16       		.uleb128 0x16
 3535 012c 1D       		.uleb128 0x1d
 3536 012d 01       		.byte	0x1
 3537 012e 31       		.uleb128 0x31
 3538 012f 13       		.uleb128 0x13
 3539 0130 52       		.uleb128 0x52
 3540 0131 01       		.uleb128 0x1
 3541 0132 55       		.uleb128 0x55
 3542 0133 17       		.uleb128 0x17
 3543 0134 58       		.uleb128 0x58
 3544 0135 0B       		.uleb128 0xb
 3545 0136 59       		.uleb128 0x59
 3546 0137 05       		.uleb128 0x5
 3547 0138 00       		.byte	0
 3548 0139 00       		.byte	0
 3549 013a 17       		.uleb128 0x17
 3550 013b 1D       		.uleb128 0x1d
 3551 013c 01       		.byte	0x1
 3552 013d 31       		.uleb128 0x31
 3553 013e 13       		.uleb128 0x13
 3554 013f 52       		.uleb128 0x52
 3555 0140 01       		.uleb128 0x1
 3556 0141 55       		.uleb128 0x55
 3557 0142 17       		.uleb128 0x17
 3558 0143 58       		.uleb128 0x58
 3559 0144 0B       		.uleb128 0xb
 3560 0145 59       		.uleb128 0x59
 3561 0146 05       		.uleb128 0x5
 3562 0147 01       		.uleb128 0x1
 3563 0148 13       		.uleb128 0x13
 3564 0149 00       		.byte	0
 3565 014a 00       		.byte	0
 3566 014b 18       		.uleb128 0x18
 3567 014c 0B       		.uleb128 0xb
 3568 014d 01       		.byte	0x1
 3569 014e 55       		.uleb128 0x55
 3570 014f 17       		.uleb128 0x17
 3571 0150 00       		.byte	0
 3572 0151 00       		.byte	0
 3573 0152 19       		.uleb128 0x19
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 83


 3574 0153 898201   		.uleb128 0x4109
 3575 0156 01       		.byte	0x1
 3576 0157 11       		.uleb128 0x11
 3577 0158 01       		.uleb128 0x1
 3578 0159 31       		.uleb128 0x31
 3579 015a 13       		.uleb128 0x13
 3580 015b 01       		.uleb128 0x1
 3581 015c 13       		.uleb128 0x13
 3582 015d 00       		.byte	0
 3583 015e 00       		.byte	0
 3584 015f 1A       		.uleb128 0x1a
 3585 0160 34       		.uleb128 0x34
 3586 0161 00       		.byte	0
 3587 0162 03       		.uleb128 0x3
 3588 0163 08       		.uleb128 0x8
 3589 0164 3A       		.uleb128 0x3a
 3590 0165 0B       		.uleb128 0xb
 3591 0166 3B       		.uleb128 0x3b
 3592 0167 05       		.uleb128 0x5
 3593 0168 49       		.uleb128 0x49
 3594 0169 13       		.uleb128 0x13
 3595 016a 02       		.uleb128 0x2
 3596 016b 17       		.uleb128 0x17
 3597 016c 00       		.byte	0
 3598 016d 00       		.byte	0
 3599 016e 1B       		.uleb128 0x1b
 3600 016f 34       		.uleb128 0x34
 3601 0170 00       		.byte	0
 3602 0171 31       		.uleb128 0x31
 3603 0172 13       		.uleb128 0x13
 3604 0173 00       		.byte	0
 3605 0174 00       		.byte	0
 3606 0175 1C       		.uleb128 0x1c
 3607 0176 2E       		.uleb128 0x2e
 3608 0177 01       		.byte	0x1
 3609 0178 3F       		.uleb128 0x3f
 3610 0179 19       		.uleb128 0x19
 3611 017a 03       		.uleb128 0x3
 3612 017b 0E       		.uleb128 0xe
 3613 017c 3A       		.uleb128 0x3a
 3614 017d 0B       		.uleb128 0xb
 3615 017e 3B       		.uleb128 0x3b
 3616 017f 0B       		.uleb128 0xb
 3617 0180 27       		.uleb128 0x27
 3618 0181 19       		.uleb128 0x19
 3619 0182 49       		.uleb128 0x49
 3620 0183 13       		.uleb128 0x13
 3621 0184 8701     		.uleb128 0x87
 3622 0186 19       		.uleb128 0x19
 3623 0187 11       		.uleb128 0x11
 3624 0188 01       		.uleb128 0x1
 3625 0189 12       		.uleb128 0x12
 3626 018a 06       		.uleb128 0x6
 3627 018b 40       		.uleb128 0x40
 3628 018c 18       		.uleb128 0x18
 3629 018d 9742     		.uleb128 0x2117
 3630 018f 19       		.uleb128 0x19
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 84


 3631 0190 01       		.uleb128 0x1
 3632 0191 13       		.uleb128 0x13
 3633 0192 00       		.byte	0
 3634 0193 00       		.byte	0
 3635 0194 1D       		.uleb128 0x1d
 3636 0195 1D       		.uleb128 0x1d
 3637 0196 01       		.byte	0x1
 3638 0197 31       		.uleb128 0x31
 3639 0198 13       		.uleb128 0x13
 3640 0199 11       		.uleb128 0x11
 3641 019a 01       		.uleb128 0x1
 3642 019b 12       		.uleb128 0x12
 3643 019c 06       		.uleb128 0x6
 3644 019d 58       		.uleb128 0x58
 3645 019e 0B       		.uleb128 0xb
 3646 019f 59       		.uleb128 0x59
 3647 01a0 0B       		.uleb128 0xb
 3648 01a1 01       		.uleb128 0x1
 3649 01a2 13       		.uleb128 0x13
 3650 01a3 00       		.byte	0
 3651 01a4 00       		.byte	0
 3652 01a5 1E       		.uleb128 0x1e
 3653 01a6 05       		.uleb128 0x5
 3654 01a7 00       		.byte	0
 3655 01a8 31       		.uleb128 0x31
 3656 01a9 13       		.uleb128 0x13
 3657 01aa 1C       		.uleb128 0x1c
 3658 01ab 0B       		.uleb128 0xb
 3659 01ac 00       		.byte	0
 3660 01ad 00       		.byte	0
 3661 01ae 1F       		.uleb128 0x1f
 3662 01af 0B       		.uleb128 0xb
 3663 01b0 01       		.byte	0x1
 3664 01b1 11       		.uleb128 0x11
 3665 01b2 01       		.uleb128 0x1
 3666 01b3 12       		.uleb128 0x12
 3667 01b4 06       		.uleb128 0x6
 3668 01b5 00       		.byte	0
 3669 01b6 00       		.byte	0
 3670 01b7 20       		.uleb128 0x20
 3671 01b8 1D       		.uleb128 0x1d
 3672 01b9 01       		.byte	0x1
 3673 01ba 31       		.uleb128 0x31
 3674 01bb 13       		.uleb128 0x13
 3675 01bc 11       		.uleb128 0x11
 3676 01bd 01       		.uleb128 0x1
 3677 01be 12       		.uleb128 0x12
 3678 01bf 06       		.uleb128 0x6
 3679 01c0 58       		.uleb128 0x58
 3680 01c1 0B       		.uleb128 0xb
 3681 01c2 59       		.uleb128 0x59
 3682 01c3 05       		.uleb128 0x5
 3683 01c4 01       		.uleb128 0x1
 3684 01c5 13       		.uleb128 0x13
 3685 01c6 00       		.byte	0
 3686 01c7 00       		.byte	0
 3687 01c8 21       		.uleb128 0x21
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 85


 3688 01c9 05       		.uleb128 0x5
 3689 01ca 00       		.byte	0
 3690 01cb 03       		.uleb128 0x3
 3691 01cc 0E       		.uleb128 0xe
 3692 01cd 3A       		.uleb128 0x3a
 3693 01ce 0B       		.uleb128 0xb
 3694 01cf 3B       		.uleb128 0x3b
 3695 01d0 05       		.uleb128 0x5
 3696 01d1 49       		.uleb128 0x49
 3697 01d2 13       		.uleb128 0x13
 3698 01d3 02       		.uleb128 0x2
 3699 01d4 17       		.uleb128 0x17
 3700 01d5 00       		.byte	0
 3701 01d6 00       		.byte	0
 3702 01d7 22       		.uleb128 0x22
 3703 01d8 2E       		.uleb128 0x2e
 3704 01d9 01       		.byte	0x1
 3705 01da 3F       		.uleb128 0x3f
 3706 01db 19       		.uleb128 0x19
 3707 01dc 03       		.uleb128 0x3
 3708 01dd 0E       		.uleb128 0xe
 3709 01de 3A       		.uleb128 0x3a
 3710 01df 0B       		.uleb128 0xb
 3711 01e0 3B       		.uleb128 0x3b
 3712 01e1 05       		.uleb128 0x5
 3713 01e2 27       		.uleb128 0x27
 3714 01e3 19       		.uleb128 0x19
 3715 01e4 8701     		.uleb128 0x87
 3716 01e6 19       		.uleb128 0x19
 3717 01e7 11       		.uleb128 0x11
 3718 01e8 01       		.uleb128 0x1
 3719 01e9 12       		.uleb128 0x12
 3720 01ea 06       		.uleb128 0x6
 3721 01eb 40       		.uleb128 0x40
 3722 01ec 18       		.uleb128 0x18
 3723 01ed 9742     		.uleb128 0x2117
 3724 01ef 19       		.uleb128 0x19
 3725 01f0 01       		.uleb128 0x1
 3726 01f1 13       		.uleb128 0x13
 3727 01f2 00       		.byte	0
 3728 01f3 00       		.byte	0
 3729 01f4 23       		.uleb128 0x23
 3730 01f5 01       		.uleb128 0x1
 3731 01f6 01       		.byte	0x1
 3732 01f7 49       		.uleb128 0x49
 3733 01f8 13       		.uleb128 0x13
 3734 01f9 01       		.uleb128 0x1
 3735 01fa 13       		.uleb128 0x13
 3736 01fb 00       		.byte	0
 3737 01fc 00       		.byte	0
 3738 01fd 24       		.uleb128 0x24
 3739 01fe 21       		.uleb128 0x21
 3740 01ff 00       		.byte	0
 3741 0200 49       		.uleb128 0x49
 3742 0201 13       		.uleb128 0x13
 3743 0202 2F       		.uleb128 0x2f
 3744 0203 0B       		.uleb128 0xb
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 86


 3745 0204 00       		.byte	0
 3746 0205 00       		.byte	0
 3747 0206 25       		.uleb128 0x25
 3748 0207 34       		.uleb128 0x34
 3749 0208 00       		.byte	0
 3750 0209 03       		.uleb128 0x3
 3751 020a 0E       		.uleb128 0xe
 3752 020b 3A       		.uleb128 0x3a
 3753 020c 0B       		.uleb128 0xb
 3754 020d 3B       		.uleb128 0x3b
 3755 020e 0B       		.uleb128 0xb
 3756 020f 49       		.uleb128 0x49
 3757 0210 13       		.uleb128 0x13
 3758 0211 3F       		.uleb128 0x3f
 3759 0212 19       		.uleb128 0x19
 3760 0213 3C       		.uleb128 0x3c
 3761 0214 19       		.uleb128 0x19
 3762 0215 00       		.byte	0
 3763 0216 00       		.byte	0
 3764 0217 26       		.uleb128 0x26
 3765 0218 34       		.uleb128 0x34
 3766 0219 00       		.byte	0
 3767 021a 03       		.uleb128 0x3
 3768 021b 0E       		.uleb128 0xe
 3769 021c 3A       		.uleb128 0x3a
 3770 021d 0B       		.uleb128 0xb
 3771 021e 3B       		.uleb128 0x3b
 3772 021f 05       		.uleb128 0x5
 3773 0220 49       		.uleb128 0x49
 3774 0221 13       		.uleb128 0x13
 3775 0222 3F       		.uleb128 0x3f
 3776 0223 19       		.uleb128 0x19
 3777 0224 3C       		.uleb128 0x3c
 3778 0225 19       		.uleb128 0x19
 3779 0226 00       		.byte	0
 3780 0227 00       		.byte	0
 3781 0228 27       		.uleb128 0x27
 3782 0229 34       		.uleb128 0x34
 3783 022a 00       		.byte	0
 3784 022b 03       		.uleb128 0x3
 3785 022c 08       		.uleb128 0x8
 3786 022d 3A       		.uleb128 0x3a
 3787 022e 0B       		.uleb128 0xb
 3788 022f 3B       		.uleb128 0x3b
 3789 0230 0B       		.uleb128 0xb
 3790 0231 49       		.uleb128 0x49
 3791 0232 13       		.uleb128 0x13
 3792 0233 3F       		.uleb128 0x3f
 3793 0234 19       		.uleb128 0x19
 3794 0235 02       		.uleb128 0x2
 3795 0236 18       		.uleb128 0x18
 3796 0237 00       		.byte	0
 3797 0238 00       		.byte	0
 3798 0239 28       		.uleb128 0x28
 3799 023a 34       		.uleb128 0x34
 3800 023b 00       		.byte	0
 3801 023c 03       		.uleb128 0x3
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 87


 3802 023d 0E       		.uleb128 0xe
 3803 023e 3A       		.uleb128 0x3a
 3804 023f 0B       		.uleb128 0xb
 3805 0240 3B       		.uleb128 0x3b
 3806 0241 0B       		.uleb128 0xb
 3807 0242 49       		.uleb128 0x49
 3808 0243 13       		.uleb128 0x13
 3809 0244 3F       		.uleb128 0x3f
 3810 0245 19       		.uleb128 0x19
 3811 0246 02       		.uleb128 0x2
 3812 0247 18       		.uleb128 0x18
 3813 0248 00       		.byte	0
 3814 0249 00       		.byte	0
 3815 024a 29       		.uleb128 0x29
 3816 024b 2E       		.uleb128 0x2e
 3817 024c 00       		.byte	0
 3818 024d 3F       		.uleb128 0x3f
 3819 024e 19       		.uleb128 0x19
 3820 024f 3C       		.uleb128 0x3c
 3821 0250 19       		.uleb128 0x19
 3822 0251 6E       		.uleb128 0x6e
 3823 0252 0E       		.uleb128 0xe
 3824 0253 03       		.uleb128 0x3
 3825 0254 0E       		.uleb128 0xe
 3826 0255 3A       		.uleb128 0x3a
 3827 0256 0B       		.uleb128 0xb
 3828 0257 3B       		.uleb128 0x3b
 3829 0258 05       		.uleb128 0x5
 3830 0259 00       		.byte	0
 3831 025a 00       		.byte	0
 3832 025b 2A       		.uleb128 0x2a
 3833 025c 2E       		.uleb128 0x2e
 3834 025d 00       		.byte	0
 3835 025e 3F       		.uleb128 0x3f
 3836 025f 19       		.uleb128 0x19
 3837 0260 3C       		.uleb128 0x3c
 3838 0261 19       		.uleb128 0x19
 3839 0262 6E       		.uleb128 0x6e
 3840 0263 0E       		.uleb128 0xe
 3841 0264 03       		.uleb128 0x3
 3842 0265 0E       		.uleb128 0xe
 3843 0266 3A       		.uleb128 0x3a
 3844 0267 0B       		.uleb128 0xb
 3845 0268 3B       		.uleb128 0x3b
 3846 0269 0B       		.uleb128 0xb
 3847 026a 00       		.byte	0
 3848 026b 00       		.byte	0
 3849 026c 00       		.byte	0
 3850              		.section	.debug_loc,"",%progbits
 3851              	.Ldebug_loc0:
 3852              	.LLST0:
 3853 0000 08000000 		.4byte	.LVL0
 3854 0004 0E000000 		.4byte	.LVL1
 3855 0008 0200     		.2byte	0x2
 3856 000a 31       		.byte	0x31
 3857 000b 9F       		.byte	0x9f
 3858 000c 00000000 		.4byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 88


 3859 0010 00000000 		.4byte	0
 3860              	.LLST1:
 3861 0014 00000000 		.4byte	.LVL9
 3862 0018 28000000 		.4byte	.LVL10
 3863 001c 0100     		.2byte	0x1
 3864 001e 50       		.byte	0x50
 3865 001f 28000000 		.4byte	.LVL10
 3866 0023 90000000 		.4byte	.LFE37
 3867 0027 0400     		.2byte	0x4
 3868 0029 F3       		.byte	0xf3
 3869 002a 01       		.uleb128 0x1
 3870 002b 50       		.byte	0x50
 3871 002c 9F       		.byte	0x9f
 3872 002d 00000000 		.4byte	0
 3873 0031 00000000 		.4byte	0
 3874              	.LLST2:
 3875 0035 2C000000 		.4byte	.LVL11
 3876 0039 56000000 		.4byte	.LVL17
 3877 003d 0100     		.2byte	0x1
 3878 003f 56       		.byte	0x56
 3879 0040 56000000 		.4byte	.LVL17
 3880 0044 58000000 		.4byte	.LVL18
 3881 0048 0300     		.2byte	0x3
 3882 004a 76       		.byte	0x76
 3883 004b 7F       		.sleb128 -1
 3884 004c 9F       		.byte	0x9f
 3885 004d 58000000 		.4byte	.LVL18
 3886 0051 6E000000 		.4byte	.LVL20
 3887 0055 0100     		.2byte	0x1
 3888 0057 56       		.byte	0x56
 3889 0058 00000000 		.4byte	0
 3890 005c 00000000 		.4byte	0
 3891              	.LLST3:
 3892 0060 00000000 		.4byte	.LVL9
 3893 0064 28000000 		.4byte	.LVL10
 3894 0068 0200     		.2byte	0x2
 3895 006a 30       		.byte	0x30
 3896 006b 9F       		.byte	0x9f
 3897 006c 28000000 		.4byte	.LVL10
 3898 0070 6A000000 		.4byte	.LVL19
 3899 0074 0200     		.2byte	0x2
 3900 0076 7D       		.byte	0x7d
 3901 0077 00       		.sleb128 0
 3902 0078 6A000000 		.4byte	.LVL19
 3903 007c 6E000000 		.4byte	.LVL20
 3904 0080 0100     		.2byte	0x1
 3905 0082 53       		.byte	0x53
 3906 0083 00000000 		.4byte	0
 3907 0087 00000000 		.4byte	0
 3908              	.LLST4:
 3909 008b 2C000000 		.4byte	.LVL11
 3910 008f 56000000 		.4byte	.LVL17
 3911 0093 0100     		.2byte	0x1
 3912 0095 56       		.byte	0x56
 3913 0096 56000000 		.4byte	.LVL17
 3914 009a 58000000 		.4byte	.LVL18
 3915 009e 0300     		.2byte	0x3
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 89


 3916 00a0 76       		.byte	0x76
 3917 00a1 7F       		.sleb128 -1
 3918 00a2 9F       		.byte	0x9f
 3919 00a3 00000000 		.4byte	0
 3920 00a7 00000000 		.4byte	0
 3921              	.LLST5:
 3922 00ab 3E000000 		.4byte	.LVL14
 3923 00af 56000000 		.4byte	.LVL17
 3924 00b3 0100     		.2byte	0x1
 3925 00b5 56       		.byte	0x56
 3926 00b6 56000000 		.4byte	.LVL17
 3927 00ba 58000000 		.4byte	.LVL18
 3928 00be 0300     		.2byte	0x3
 3929 00c0 76       		.byte	0x76
 3930 00c1 7F       		.sleb128 -1
 3931 00c2 9F       		.byte	0x9f
 3932 00c3 00000000 		.4byte	0
 3933 00c7 00000000 		.4byte	0
 3934              	.LLST6:
 3935 00cb 40000000 		.4byte	.LVL15
 3936 00cf 49000000 		.4byte	.LVL16-1
 3937 00d3 0100     		.2byte	0x1
 3938 00d5 50       		.byte	0x50
 3939 00d6 4A000000 		.4byte	.LVL16
 3940 00da 58000000 		.4byte	.LVL18
 3941 00de 0100     		.2byte	0x1
 3942 00e0 50       		.byte	0x50
 3943 00e1 00000000 		.4byte	0
 3944 00e5 00000000 		.4byte	0
 3945              	.LLST7:
 3946 00e9 00000000 		.4byte	.LVL21
 3947 00ed 07000000 		.4byte	.LVL22-1
 3948 00f1 0100     		.2byte	0x1
 3949 00f3 50       		.byte	0x50
 3950 00f4 07000000 		.4byte	.LVL22-1
 3951 00f8 2C000000 		.4byte	.LVL28
 3952 00fc 0100     		.2byte	0x1
 3953 00fe 56       		.byte	0x56
 3954 00ff 2C000000 		.4byte	.LVL28
 3955 0103 44000000 		.4byte	.LFE38
 3956 0107 0400     		.2byte	0x4
 3957 0109 F3       		.byte	0xf3
 3958 010a 01       		.uleb128 0x1
 3959 010b 50       		.byte	0x50
 3960 010c 9F       		.byte	0x9f
 3961 010d 00000000 		.4byte	0
 3962 0111 00000000 		.4byte	0
 3963              	.LLST8:
 3964 0115 10000000 		.4byte	.LVL24
 3965 0119 2C000000 		.4byte	.LVL27
 3966 011d 0100     		.2byte	0x1
 3967 011f 56       		.byte	0x56
 3968 0120 00000000 		.4byte	0
 3969 0124 00000000 		.4byte	0
 3970              	.LLST9:
 3971 0128 18000000 		.4byte	.LVL25
 3972 012c 1D000000 		.4byte	.LVL26-1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 90


 3973 0130 0100     		.2byte	0x1
 3974 0132 50       		.byte	0x50
 3975 0133 1E000000 		.4byte	.LVL26
 3976 0137 2C000000 		.4byte	.LVL27
 3977 013b 0100     		.2byte	0x1
 3978 013d 50       		.byte	0x50
 3979 013e 00000000 		.4byte	0
 3980 0142 00000000 		.4byte	0
 3981              	.LLST10:
 3982 0146 00000000 		.4byte	.LVL29
 3983 014a 0E000000 		.4byte	.LVL30
 3984 014e 0100     		.2byte	0x1
 3985 0150 50       		.byte	0x50
 3986 0151 0E000000 		.4byte	.LVL30
 3987 0155 22000000 		.4byte	.LVL32
 3988 0159 0100     		.2byte	0x1
 3989 015b 55       		.byte	0x55
 3990 015c 22000000 		.4byte	.LVL32
 3991 0160 38000000 		.4byte	.LFE39
 3992 0164 0400     		.2byte	0x4
 3993 0166 F3       		.byte	0xf3
 3994 0167 01       		.uleb128 0x1
 3995 0168 50       		.byte	0x50
 3996 0169 9F       		.byte	0x9f
 3997 016a 00000000 		.4byte	0
 3998 016e 00000000 		.4byte	0
 3999              	.LLST11:
 4000 0172 0E000000 		.4byte	.LVL30
 4001 0176 11000000 		.4byte	.LVL31-1
 4002 017a 0100     		.2byte	0x1
 4003 017c 50       		.byte	0x50
 4004 017d 12000000 		.4byte	.LVL31
 4005 0181 38000000 		.4byte	.LFE39
 4006 0185 0100     		.2byte	0x1
 4007 0187 50       		.byte	0x50
 4008 0188 00000000 		.4byte	0
 4009 018c 00000000 		.4byte	0
 4010              	.LLST12:
 4011 0190 00000000 		.4byte	.LVL33
 4012 0194 0A000000 		.4byte	.LVL34
 4013 0198 0200     		.2byte	0x2
 4014 019a 30       		.byte	0x30
 4015 019b 9F       		.byte	0x9f
 4016 019c 0A000000 		.4byte	.LVL34
 4017 01a0 24000000 		.4byte	.LVL38
 4018 01a4 0100     		.2byte	0x1
 4019 01a6 54       		.byte	0x54
 4020 01a7 00000000 		.4byte	0
 4021 01ab 00000000 		.4byte	0
 4022              	.LLST13:
 4023 01af 00000000 		.4byte	.LVL39
 4024 01b3 1C000000 		.4byte	.LVL40
 4025 01b7 0200     		.2byte	0x2
 4026 01b9 30       		.byte	0x30
 4027 01ba 9F       		.byte	0x9f
 4028 01bb 1C000000 		.4byte	.LVL40
 4029 01bf C4000000 		.4byte	.LVL59
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 91


 4030 01c3 0100     		.2byte	0x1
 4031 01c5 54       		.byte	0x54
 4032 01c6 D0000000 		.4byte	.LVL60
 4033 01ca 58010000 		.4byte	.LFE41
 4034 01ce 0100     		.2byte	0x1
 4035 01d0 54       		.byte	0x54
 4036 01d1 00000000 		.4byte	0
 4037 01d5 00000000 		.4byte	0
 4038              	.LLST14:
 4039 01d9 2E000000 		.4byte	.LVL43
 4040 01dd 46000000 		.4byte	.LVL46
 4041 01e1 0100     		.2byte	0x1
 4042 01e3 50       		.byte	0x50
 4043 01e4 00000000 		.4byte	0
 4044 01e8 00000000 		.4byte	0
 4045              	.LLST15:
 4046 01ec 32000000 		.4byte	.LVL44
 4047 01f0 BA000000 		.4byte	.LVL57
 4048 01f4 0100     		.2byte	0x1
 4049 01f6 54       		.byte	0x54
 4050 01f7 BA000000 		.4byte	.LVL57
 4051 01fb C2000000 		.4byte	.LVL58
 4052 01ff 0300     		.2byte	0x3
 4053 0201 74       		.byte	0x74
 4054 0202 7F       		.sleb128 -1
 4055 0203 9F       		.byte	0x9f
 4056 0204 D0000000 		.4byte	.LVL60
 4057 0208 58010000 		.4byte	.LFE41
 4058 020c 0100     		.2byte	0x1
 4059 020e 54       		.byte	0x54
 4060 020f 00000000 		.4byte	0
 4061 0213 00000000 		.4byte	0
 4062              	.LLST17:
 4063 0217 92000000 		.4byte	.LVL51
 4064 021b 98000000 		.4byte	.LVL52
 4065 021f 1200     		.2byte	0x12
 4066 0221 78       		.byte	0x78
 4067 0222 00       		.sleb128 0
 4068 0223 94       		.byte	0x94
 4069 0224 01       		.byte	0x1
 4070 0225 08       		.byte	0x8
 4071 0226 FF       		.byte	0xff
 4072 0227 1A       		.byte	0x1a
 4073 0228 72       		.byte	0x72
 4074 0229 00       		.sleb128 0
 4075 022a 21       		.byte	0x21
 4076 022b 70       		.byte	0x70
 4077 022c 00       		.sleb128 0
 4078 022d 0A       		.byte	0xa
 4079 022e FFFF     		.2byte	0xffff
 4080 0230 1A       		.byte	0x1a
 4081 0231 22       		.byte	0x22
 4082 0232 9F       		.byte	0x9f
 4083 0233 98000000 		.4byte	.LVL52
 4084 0237 9C000000 		.4byte	.LVL53
 4085 023b 1400     		.2byte	0x14
 4086 023d 71       		.byte	0x71
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 92


 4087 023e 00       		.sleb128 0
 4088 023f 38       		.byte	0x38
 4089 0240 24       		.byte	0x24
 4090 0241 78       		.byte	0x78
 4091 0242 00       		.sleb128 0
 4092 0243 94       		.byte	0x94
 4093 0244 01       		.byte	0x1
 4094 0245 08       		.byte	0x8
 4095 0246 FF       		.byte	0xff
 4096 0247 1A       		.byte	0x1a
 4097 0248 21       		.byte	0x21
 4098 0249 70       		.byte	0x70
 4099 024a 00       		.sleb128 0
 4100 024b 0A       		.byte	0xa
 4101 024c FFFF     		.2byte	0xffff
 4102 024e 1A       		.byte	0x1a
 4103 024f 22       		.byte	0x22
 4104 0250 9F       		.byte	0x9f
 4105 0251 9C000000 		.4byte	.LVL53
 4106 0255 9E000000 		.4byte	.LVL54
 4107 0259 1D00     		.2byte	0x1d
 4108 025b 7C       		.byte	0x7c
 4109 025c 00       		.sleb128 0
 4110 025d 75       		.byte	0x75
 4111 025e 00       		.sleb128 0
 4112 025f 22       		.byte	0x22
 4113 0260 94       		.byte	0x94
 4114 0261 02       		.byte	0x2
 4115 0262 0A       		.byte	0xa
 4116 0263 FFFF     		.2byte	0xffff
 4117 0265 1A       		.byte	0x1a
 4118 0266 38       		.byte	0x38
 4119 0267 24       		.byte	0x24
 4120 0268 78       		.byte	0x78
 4121 0269 00       		.sleb128 0
 4122 026a 94       		.byte	0x94
 4123 026b 01       		.byte	0x1
 4124 026c 08       		.byte	0x8
 4125 026d FF       		.byte	0xff
 4126 026e 1A       		.byte	0x1a
 4127 026f 21       		.byte	0x21
 4128 0270 70       		.byte	0x70
 4129 0271 00       		.sleb128 0
 4130 0272 0A       		.byte	0xa
 4131 0273 FFFF     		.2byte	0xffff
 4132 0275 1A       		.byte	0x1a
 4133 0276 22       		.byte	0x22
 4134 0277 9F       		.byte	0x9f
 4135 0278 9E000000 		.4byte	.LVL54
 4136 027c B0000000 		.4byte	.LVL55
 4137 0280 0100     		.2byte	0x1
 4138 0282 50       		.byte	0x50
 4139 0283 00000000 		.4byte	0
 4140 0287 00000000 		.4byte	0
 4141              	.LLST18:
 4142 028b 72000000 		.4byte	.LVL48
 4143 028f 74000000 		.4byte	.LVL49
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 93


 4144 0293 0200     		.2byte	0x2
 4145 0295 31       		.byte	0x31
 4146 0296 9F       		.byte	0x9f
 4147 0297 E0000000 		.4byte	.LVL61
 4148 029b 58010000 		.4byte	.LFE41
 4149 029f 0200     		.2byte	0x2
 4150 02a1 30       		.byte	0x30
 4151 02a2 9F       		.byte	0x9f
 4152 02a3 00000000 		.4byte	0
 4153 02a7 00000000 		.4byte	0
 4154              	.LLST19:
 4155 02ab 72000000 		.4byte	.LVL48
 4156 02af 74000000 		.4byte	.LVL49
 4157 02b3 0200     		.2byte	0x2
 4158 02b5 7D       		.byte	0x7d
 4159 02b6 00       		.sleb128 0
 4160 02b7 E0000000 		.4byte	.LVL61
 4161 02bb E6000000 		.4byte	.LVL62
 4162 02bf 0200     		.2byte	0x2
 4163 02c1 7D       		.byte	0x7d
 4164 02c2 00       		.sleb128 0
 4165 02c3 00000000 		.4byte	0
 4166 02c7 00000000 		.4byte	0
 4167              	.LLST20:
 4168 02cb 46000000 		.4byte	.LVL46
 4169 02cf 53000000 		.4byte	.LVL47-1
 4170 02d3 0100     		.2byte	0x1
 4171 02d5 50       		.byte	0x50
 4172 02d6 54000000 		.4byte	.LVL47
 4173 02da 9E000000 		.4byte	.LVL54
 4174 02de 0100     		.2byte	0x1
 4175 02e0 50       		.byte	0x50
 4176 02e1 E0000000 		.4byte	.LVL61
 4177 02e5 14010000 		.4byte	.LVL63
 4178 02e9 0100     		.2byte	0x1
 4179 02eb 50       		.byte	0x50
 4180 02ec 14010000 		.4byte	.LVL63
 4181 02f0 17010000 		.4byte	.LVL64-1
 4182 02f4 0200     		.2byte	0x2
 4183 02f6 78       		.byte	0x78
 4184 02f7 00       		.sleb128 0
 4185 02f8 00000000 		.4byte	0
 4186 02fc 00000000 		.4byte	0
 4187              	.LLST21:
 4188 0300 42000000 		.4byte	.LVL45
 4189 0304 C2000000 		.4byte	.LVL58
 4190 0308 0100     		.2byte	0x1
 4191 030a 5A       		.byte	0x5a
 4192 030b D0000000 		.4byte	.LVL60
 4193 030f 58010000 		.4byte	.LFE41
 4194 0313 0100     		.2byte	0x1
 4195 0315 5A       		.byte	0x5a
 4196 0316 00000000 		.4byte	0
 4197 031a 00000000 		.4byte	0
 4198              	.LLST22:
 4199 031e 00000000 		.4byte	.LVL65
 4200 0322 1C000000 		.4byte	.LVL67
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 94


 4201 0326 0100     		.2byte	0x1
 4202 0328 50       		.byte	0x50
 4203 0329 1C000000 		.4byte	.LVL67
 4204 032d 7A000000 		.4byte	.LVL76
 4205 0331 0100     		.2byte	0x1
 4206 0333 55       		.byte	0x55
 4207 0334 7A000000 		.4byte	.LVL76
 4208 0338 84000000 		.4byte	.LVL77
 4209 033c 0400     		.2byte	0x4
 4210 033e F3       		.byte	0xf3
 4211 033f 01       		.uleb128 0x1
 4212 0340 50       		.byte	0x50
 4213 0341 9F       		.byte	0x9f
 4214 0342 84000000 		.4byte	.LVL77
 4215 0346 FC000000 		.4byte	.LFE42
 4216 034a 0100     		.2byte	0x1
 4217 034c 55       		.byte	0x55
 4218 034d 00000000 		.4byte	0
 4219 0351 00000000 		.4byte	0
 4220              	.LLST23:
 4221 0355 00000000 		.4byte	.LVL65
 4222 0359 1C000000 		.4byte	.LVL67
 4223 035d 0100     		.2byte	0x1
 4224 035f 50       		.byte	0x50
 4225 0360 1C000000 		.4byte	.LVL67
 4226 0364 7A000000 		.4byte	.LVL75
 4227 0368 0100     		.2byte	0x1
 4228 036a 55       		.byte	0x55
 4229 036b 84000000 		.4byte	.LVL77
 4230 036f FC000000 		.4byte	.LFE42
 4231 0373 0100     		.2byte	0x1
 4232 0375 55       		.byte	0x55
 4233 0376 00000000 		.4byte	0
 4234 037a 00000000 		.4byte	0
 4235              	.LLST24:
 4236 037e 62000000 		.4byte	.LVL73
 4237 0382 74000000 		.4byte	.LVL74
 4238 0386 0100     		.2byte	0x1
 4239 0388 50       		.byte	0x50
 4240 0389 00000000 		.4byte	0
 4241 038d 00000000 		.4byte	0
 4242              	.LLST25:
 4243 0391 8C000000 		.4byte	.LVL78
 4244 0395 A2000000 		.4byte	.LVL80
 4245 0399 0200     		.2byte	0x2
 4246 039b 30       		.byte	0x30
 4247 039c 9F       		.byte	0x9f
 4248 039d B4000000 		.4byte	.LVL81
 4249 03a1 BA000000 		.4byte	.LVL82
 4250 03a5 0200     		.2byte	0x2
 4251 03a7 30       		.byte	0x30
 4252 03a8 9F       		.byte	0x9f
 4253 03a9 C4000000 		.4byte	.LVL83
 4254 03ad FC000000 		.4byte	.LFE42
 4255 03b1 0200     		.2byte	0x2
 4256 03b3 30       		.byte	0x30
 4257 03b4 9F       		.byte	0x9f
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 95


 4258 03b5 00000000 		.4byte	0
 4259 03b9 00000000 		.4byte	0
 4260              	.LLST26:
 4261 03bd 48000000 		.4byte	.LVL69
 4262 03c1 74000000 		.4byte	.LVL74
 4263 03c5 0100     		.2byte	0x1
 4264 03c7 53       		.byte	0x53
 4265 03c8 8C000000 		.4byte	.LVL78
 4266 03cc 96000000 		.4byte	.LVL79
 4267 03d0 0100     		.2byte	0x1
 4268 03d2 53       		.byte	0x53
 4269 03d3 96000000 		.4byte	.LVL79
 4270 03d7 A2000000 		.4byte	.LVL80
 4271 03db 0600     		.2byte	0x6
 4272 03dd 7C       		.byte	0x7c
 4273 03de 00       		.sleb128 0
 4274 03df 70       		.byte	0x70
 4275 03e0 00       		.sleb128 0
 4276 03e1 1C       		.byte	0x1c
 4277 03e2 9F       		.byte	0x9f
 4278 03e3 A2000000 		.4byte	.LVL80
 4279 03e7 C4000000 		.4byte	.LVL83
 4280 03eb 0100     		.2byte	0x1
 4281 03ed 53       		.byte	0x53
 4282 03ee C4000000 		.4byte	.LVL83
 4283 03f2 C6000000 		.4byte	.LVL84
 4284 03f6 0600     		.2byte	0x6
 4285 03f8 7C       		.byte	0x7c
 4286 03f9 00       		.sleb128 0
 4287 03fa 70       		.byte	0x70
 4288 03fb 00       		.sleb128 0
 4289 03fc 1C       		.byte	0x1c
 4290 03fd 9F       		.byte	0x9f
 4291 03fe 00000000 		.4byte	0
 4292 0402 00000000 		.4byte	0
 4293              	.LLST27:
 4294 0406 1C000000 		.4byte	.LVL67
 4295 040a 25000000 		.4byte	.LVL68-1
 4296 040e 0100     		.2byte	0x1
 4297 0410 50       		.byte	0x50
 4298 0411 26000000 		.4byte	.LVL68
 4299 0415 62000000 		.4byte	.LVL73
 4300 0419 0100     		.2byte	0x1
 4301 041b 50       		.byte	0x50
 4302 041c 84000000 		.4byte	.LVL77
 4303 0420 BA000000 		.4byte	.LVL82
 4304 0424 0100     		.2byte	0x1
 4305 0426 50       		.byte	0x50
 4306 0427 C4000000 		.4byte	.LVL83
 4307 042b C6000000 		.4byte	.LVL84
 4308 042f 0100     		.2byte	0x1
 4309 0431 50       		.byte	0x50
 4310 0432 C6000000 		.4byte	.LVL84
 4311 0436 C9000000 		.4byte	.LVL85-1
 4312 043a 0500     		.2byte	0x5
 4313 043c 78       		.byte	0x78
 4314 043d 00       		.sleb128 0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 96


 4315 043e 74       		.byte	0x74
 4316 043f 00       		.sleb128 0
 4317 0440 22       		.byte	0x22
 4318 0441 00000000 		.4byte	0
 4319 0445 00000000 		.4byte	0
 4320              	.LLST28:
 4321 0449 14000000 		.4byte	.LVL66
 4322 044d 7A000000 		.4byte	.LVL75
 4323 0451 0100     		.2byte	0x1
 4324 0453 57       		.byte	0x57
 4325 0454 84000000 		.4byte	.LVL77
 4326 0458 FC000000 		.4byte	.LFE42
 4327 045c 0100     		.2byte	0x1
 4328 045e 57       		.byte	0x57
 4329 045f 00000000 		.4byte	0
 4330 0463 00000000 		.4byte	0
 4331              	.LLST29:
 4332 0467 00000000 		.4byte	.LVL86
 4333 046b 1C000000 		.4byte	.LVL88
 4334 046f 0100     		.2byte	0x1
 4335 0471 50       		.byte	0x50
 4336 0472 1C000000 		.4byte	.LVL88
 4337 0476 7A000000 		.4byte	.LVL96
 4338 047a 0100     		.2byte	0x1
 4339 047c 55       		.byte	0x55
 4340 047d 7A000000 		.4byte	.LVL96
 4341 0481 84000000 		.4byte	.LVL98
 4342 0485 0400     		.2byte	0x4
 4343 0487 F3       		.byte	0xf3
 4344 0488 01       		.uleb128 0x1
 4345 0489 50       		.byte	0x50
 4346 048a 9F       		.byte	0x9f
 4347 048b 84000000 		.4byte	.LVL98
 4348 048f FC000000 		.4byte	.LFE43
 4349 0493 0100     		.2byte	0x1
 4350 0495 55       		.byte	0x55
 4351 0496 00000000 		.4byte	0
 4352 049a 00000000 		.4byte	0
 4353              	.LLST30:
 4354 049e 62000000 		.4byte	.LVL94
 4355 04a2 74000000 		.4byte	.LVL95
 4356 04a6 0100     		.2byte	0x1
 4357 04a8 50       		.byte	0x50
 4358 04a9 00000000 		.4byte	0
 4359 04ad 00000000 		.4byte	0
 4360              	.LLST31:
 4361 04b1 8C000000 		.4byte	.LVL99
 4362 04b5 A2000000 		.4byte	.LVL101
 4363 04b9 0200     		.2byte	0x2
 4364 04bb 30       		.byte	0x30
 4365 04bc 9F       		.byte	0x9f
 4366 04bd B4000000 		.4byte	.LVL102
 4367 04c1 BA000000 		.4byte	.LVL103
 4368 04c5 0200     		.2byte	0x2
 4369 04c7 30       		.byte	0x30
 4370 04c8 9F       		.byte	0x9f
 4371 04c9 C4000000 		.4byte	.LVL104
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 97


 4372 04cd FC000000 		.4byte	.LFE43
 4373 04d1 0200     		.2byte	0x2
 4374 04d3 30       		.byte	0x30
 4375 04d4 9F       		.byte	0x9f
 4376 04d5 00000000 		.4byte	0
 4377 04d9 00000000 		.4byte	0
 4378              	.LLST32:
 4379 04dd 48000000 		.4byte	.LVL90
 4380 04e1 74000000 		.4byte	.LVL95
 4381 04e5 0100     		.2byte	0x1
 4382 04e7 53       		.byte	0x53
 4383 04e8 8C000000 		.4byte	.LVL99
 4384 04ec 96000000 		.4byte	.LVL100
 4385 04f0 0100     		.2byte	0x1
 4386 04f2 53       		.byte	0x53
 4387 04f3 96000000 		.4byte	.LVL100
 4388 04f7 A2000000 		.4byte	.LVL101
 4389 04fb 0600     		.2byte	0x6
 4390 04fd 7C       		.byte	0x7c
 4391 04fe 00       		.sleb128 0
 4392 04ff 70       		.byte	0x70
 4393 0500 00       		.sleb128 0
 4394 0501 1C       		.byte	0x1c
 4395 0502 9F       		.byte	0x9f
 4396 0503 A2000000 		.4byte	.LVL101
 4397 0507 C4000000 		.4byte	.LVL104
 4398 050b 0100     		.2byte	0x1
 4399 050d 53       		.byte	0x53
 4400 050e C4000000 		.4byte	.LVL104
 4401 0512 C6000000 		.4byte	.LVL105
 4402 0516 0600     		.2byte	0x6
 4403 0518 7C       		.byte	0x7c
 4404 0519 00       		.sleb128 0
 4405 051a 70       		.byte	0x70
 4406 051b 00       		.sleb128 0
 4407 051c 1C       		.byte	0x1c
 4408 051d 9F       		.byte	0x9f
 4409 051e 00000000 		.4byte	0
 4410 0522 00000000 		.4byte	0
 4411              	.LLST33:
 4412 0526 1C000000 		.4byte	.LVL88
 4413 052a 25000000 		.4byte	.LVL89-1
 4414 052e 0100     		.2byte	0x1
 4415 0530 50       		.byte	0x50
 4416 0531 26000000 		.4byte	.LVL89
 4417 0535 62000000 		.4byte	.LVL94
 4418 0539 0100     		.2byte	0x1
 4419 053b 50       		.byte	0x50
 4420 053c 84000000 		.4byte	.LVL98
 4421 0540 BA000000 		.4byte	.LVL103
 4422 0544 0100     		.2byte	0x1
 4423 0546 50       		.byte	0x50
 4424 0547 C4000000 		.4byte	.LVL104
 4425 054b C6000000 		.4byte	.LVL105
 4426 054f 0100     		.2byte	0x1
 4427 0551 50       		.byte	0x50
 4428 0552 C6000000 		.4byte	.LVL105
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 98


 4429 0556 C9000000 		.4byte	.LVL106-1
 4430 055a 0500     		.2byte	0x5
 4431 055c 78       		.byte	0x78
 4432 055d 00       		.sleb128 0
 4433 055e 74       		.byte	0x74
 4434 055f 00       		.sleb128 0
 4435 0560 22       		.byte	0x22
 4436 0561 00000000 		.4byte	0
 4437 0565 00000000 		.4byte	0
 4438              	.LLST34:
 4439 0569 14000000 		.4byte	.LVL87
 4440 056d 7A000000 		.4byte	.LVL97
 4441 0571 0100     		.2byte	0x1
 4442 0573 57       		.byte	0x57
 4443 0574 84000000 		.4byte	.LVL98
 4444 0578 FC000000 		.4byte	.LFE43
 4445 057c 0100     		.2byte	0x1
 4446 057e 57       		.byte	0x57
 4447 057f 00000000 		.4byte	0
 4448 0583 00000000 		.4byte	0
 4449              	.LLST35:
 4450 0587 6E000000 		.4byte	.LVL122
 4451 058b 74000000 		.4byte	.LVL123
 4452 058f 0200     		.2byte	0x2
 4453 0591 30       		.byte	0x30
 4454 0592 9F       		.byte	0x9f
 4455 0593 74000000 		.4byte	.LVL123
 4456 0597 C4000000 		.4byte	.LVL131
 4457 059b 0100     		.2byte	0x1
 4458 059d 58       		.byte	0x58
 4459 059e C4000000 		.4byte	.LVL131
 4460 05a2 CC000000 		.4byte	.LVL132
 4461 05a6 0600     		.2byte	0x6
 4462 05a8 72       		.byte	0x72
 4463 05a9 00       		.sleb128 0
 4464 05aa 7C       		.byte	0x7c
 4465 05ab 00       		.sleb128 0
 4466 05ac 22       		.byte	0x22
 4467 05ad 9F       		.byte	0x9f
 4468 05ae 00000000 		.4byte	0
 4469 05b2 00000000 		.4byte	0
 4470              	.LLST36:
 4471 05b6 62000000 		.4byte	.LVL121
 4472 05ba 6E000000 		.4byte	.LVL122
 4473 05be 0200     		.2byte	0x2
 4474 05c0 30       		.byte	0x30
 4475 05c1 9F       		.byte	0x9f
 4476 05c2 00000000 		.4byte	0
 4477 05c6 00000000 		.4byte	0
 4478              	.LLST37:
 4479 05ca 74000000 		.4byte	.LVL123
 4480 05ce A2000000 		.4byte	.LVL129
 4481 05d2 0100     		.2byte	0x1
 4482 05d4 58       		.byte	0x58
 4483 05d5 00000000 		.4byte	0
 4484 05d9 00000000 		.4byte	0
 4485              	.LLST38:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 99


 4486 05dd 82000000 		.4byte	.LVL126
 4487 05e1 A2000000 		.4byte	.LVL129
 4488 05e5 0100     		.2byte	0x1
 4489 05e7 58       		.byte	0x58
 4490 05e8 00000000 		.4byte	0
 4491 05ec 00000000 		.4byte	0
 4492              	.LLST39:
 4493 05f0 8A000000 		.4byte	.LVL127
 4494 05f4 91000000 		.4byte	.LVL128-1
 4495 05f8 0100     		.2byte	0x1
 4496 05fa 50       		.byte	0x50
 4497 05fb 92000000 		.4byte	.LVL128
 4498 05ff A2000000 		.4byte	.LVL129
 4499 0603 0100     		.2byte	0x1
 4500 0605 50       		.byte	0x50
 4501 0606 00000000 		.4byte	0
 4502 060a 00000000 		.4byte	0
 4503              	.LLST40:
 4504 060e DC000000 		.4byte	.LVL135
 4505 0612 F2000000 		.4byte	.LVL141
 4506 0616 0100     		.2byte	0x1
 4507 0618 57       		.byte	0x57
 4508 0619 F2000000 		.4byte	.LVL141
 4509 061d F5000000 		.4byte	.LVL142-1
 4510 0621 0100     		.2byte	0x1
 4511 0623 50       		.byte	0x50
 4512 0624 F5000000 		.4byte	.LVL142-1
 4513 0628 F6000000 		.4byte	.LVL142
 4514 062c 0300     		.2byte	0x3
 4515 062e 77       		.byte	0x77
 4516 062f 7F       		.sleb128 -1
 4517 0630 9F       		.byte	0x9f
 4518 0631 F6000000 		.4byte	.LVL142
 4519 0635 FA000000 		.4byte	.LVL143
 4520 0639 0100     		.2byte	0x1
 4521 063b 57       		.byte	0x57
 4522 063c 00000000 		.4byte	0
 4523 0640 00000000 		.4byte	0
 4524              	.LLST41:
 4525 0644 DC000000 		.4byte	.LVL135
 4526 0648 E2000000 		.4byte	.LVL137
 4527 064c 0100     		.2byte	0x1
 4528 064e 50       		.byte	0x50
 4529 064f EA000000 		.4byte	.LVL138
 4530 0653 F0000000 		.4byte	.LVL140
 4531 0657 0100     		.2byte	0x1
 4532 0659 50       		.byte	0x50
 4533 065a 00000000 		.4byte	0
 4534 065e 00000000 		.4byte	0
 4535              	.LLST42:
 4536 0662 EE000000 		.4byte	.LVL139
 4537 0666 F2000000 		.4byte	.LVL141
 4538 066a 0100     		.2byte	0x1
 4539 066c 57       		.byte	0x57
 4540 066d F2000000 		.4byte	.LVL141
 4541 0671 F5000000 		.4byte	.LVL142-1
 4542 0675 0100     		.2byte	0x1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 100


 4543 0677 50       		.byte	0x50
 4544 0678 F5000000 		.4byte	.LVL142-1
 4545 067c FA000000 		.4byte	.LVL143
 4546 0680 0300     		.2byte	0x3
 4547 0682 77       		.byte	0x77
 4548 0683 7F       		.sleb128 -1
 4549 0684 9F       		.byte	0x9f
 4550 0685 00000000 		.4byte	0
 4551 0689 00000000 		.4byte	0
 4552              	.LLST43:
 4553 068d 00000000 		.4byte	.LVL146
 4554 0691 0F000000 		.4byte	.LVL147-1
 4555 0695 0100     		.2byte	0x1
 4556 0697 50       		.byte	0x50
 4557 0698 0F000000 		.4byte	.LVL147-1
 4558 069c 34000000 		.4byte	.LFE44
 4559 06a0 0400     		.2byte	0x4
 4560 06a2 F3       		.byte	0xf3
 4561 06a3 01       		.uleb128 0x1
 4562 06a4 50       		.byte	0x50
 4563 06a5 9F       		.byte	0x9f
 4564 06a6 00000000 		.4byte	0
 4565 06aa 00000000 		.4byte	0
 4566              	.LLST44:
 4567 06ae 00000000 		.4byte	.LVL146
 4568 06b2 0F000000 		.4byte	.LVL147-1
 4569 06b6 0100     		.2byte	0x1
 4570 06b8 51       		.byte	0x51
 4571 06b9 0F000000 		.4byte	.LVL147-1
 4572 06bd 34000000 		.4byte	.LFE44
 4573 06c1 0400     		.2byte	0x4
 4574 06c3 F3       		.byte	0xf3
 4575 06c4 01       		.uleb128 0x1
 4576 06c5 51       		.byte	0x51
 4577 06c6 9F       		.byte	0x9f
 4578 06c7 00000000 		.4byte	0
 4579 06cb 00000000 		.4byte	0
 4580              	.LLST45:
 4581 06cf 00000000 		.4byte	.LVL152
 4582 06d3 0C000000 		.4byte	.LVL153
 4583 06d7 0100     		.2byte	0x1
 4584 06d9 50       		.byte	0x50
 4585 06da 0C000000 		.4byte	.LVL153
 4586 06de 40000000 		.4byte	.LFE45
 4587 06e2 0400     		.2byte	0x4
 4588 06e4 F3       		.byte	0xf3
 4589 06e5 01       		.uleb128 0x1
 4590 06e6 50       		.byte	0x50
 4591 06e7 9F       		.byte	0x9f
 4592 06e8 00000000 		.4byte	0
 4593 06ec 00000000 		.4byte	0
 4594              	.LLST46:
 4595 06f0 00000000 		.4byte	.LVL152
 4596 06f4 11000000 		.4byte	.LVL154-1
 4597 06f8 0100     		.2byte	0x1
 4598 06fa 51       		.byte	0x51
 4599 06fb 11000000 		.4byte	.LVL154-1
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 101


 4600 06ff 40000000 		.4byte	.LFE45
 4601 0703 0400     		.2byte	0x4
 4602 0705 F3       		.byte	0xf3
 4603 0706 01       		.uleb128 0x1
 4604 0707 51       		.byte	0x51
 4605 0708 9F       		.byte	0x9f
 4606 0709 00000000 		.4byte	0
 4607 070d 00000000 		.4byte	0
 4608              		.section	.debug_aranges,"",%progbits
 4609 0000 94000000 		.4byte	0x94
 4610 0004 0200     		.2byte	0x2
 4611 0006 00000000 		.4byte	.Ldebug_info0
 4612 000a 04       		.byte	0x4
 4613 000b 00       		.byte	0
 4614 000c 0000     		.2byte	0
 4615 000e 0000     		.2byte	0
 4616 0010 00000000 		.4byte	.LFB32
 4617 0014 14000000 		.4byte	.LFE32-.LFB32
 4618 0018 00000000 		.4byte	.LFB47
 4619 001c 24000000 		.4byte	.LFE47-.LFB47
 4620 0020 00000000 		.4byte	.LFB34
 4621 0024 08000000 		.4byte	.LFE34-.LFB34
 4622 0028 00000000 		.4byte	.LFB35
 4623 002c 1C000000 		.4byte	.LFE35-.LFB35
 4624 0030 00000000 		.4byte	.LFB36
 4625 0034 0C000000 		.4byte	.LFE36-.LFB36
 4626 0038 00000000 		.4byte	.LFB37
 4627 003c 90000000 		.4byte	.LFE37-.LFB37
 4628 0040 00000000 		.4byte	.LFB38
 4629 0044 44000000 		.4byte	.LFE38-.LFB38
 4630 0048 00000000 		.4byte	.LFB39
 4631 004c 38000000 		.4byte	.LFE39-.LFB39
 4632 0050 00000000 		.4byte	.LFB40
 4633 0054 30000000 		.4byte	.LFE40-.LFB40
 4634 0058 00000000 		.4byte	.LFB41
 4635 005c 58010000 		.4byte	.LFE41-.LFB41
 4636 0060 00000000 		.4byte	.LFB42
 4637 0064 FC000000 		.4byte	.LFE42-.LFB42
 4638 0068 00000000 		.4byte	.LFB43
 4639 006c FC000000 		.4byte	.LFE43-.LFB43
 4640 0070 00000000 		.4byte	.LFB33
 4641 0074 9C010000 		.4byte	.LFE33-.LFB33
 4642 0078 00000000 		.4byte	.LFB44
 4643 007c 34000000 		.4byte	.LFE44-.LFB44
 4644 0080 00000000 		.4byte	.LFB45
 4645 0084 40000000 		.4byte	.LFE45-.LFB45
 4646 0088 00000000 		.4byte	.LFB46
 4647 008c 0C000000 		.4byte	.LFE46-.LFB46
 4648 0090 00000000 		.4byte	0
 4649 0094 00000000 		.4byte	0
 4650              		.section	.debug_ranges,"",%progbits
 4651              	.Ldebug_ranges0:
 4652 0000 08000000 		.4byte	.LBB10
 4653 0004 0C000000 		.4byte	.LBE10
 4654 0008 0C000000 		.4byte	.LBB13
 4655 000c 0E000000 		.4byte	.LBE13
 4656 0010 00000000 		.4byte	0
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 102


 4657 0014 00000000 		.4byte	0
 4658 0018 2C000000 		.4byte	.LBB20
 4659 001c 54000000 		.4byte	.LBE20
 4660 0020 56000000 		.4byte	.LBB27
 4661 0024 5C000000 		.4byte	.LBE27
 4662 0028 00000000 		.4byte	0
 4663 002c 00000000 		.4byte	0
 4664 0030 3A000000 		.4byte	.LBB22
 4665 0034 54000000 		.4byte	.LBE22
 4666 0038 56000000 		.4byte	.LBB25
 4667 003c 5C000000 		.4byte	.LBE25
 4668 0040 00000000 		.4byte	0
 4669 0044 00000000 		.4byte	0
 4670 0048 10000000 		.4byte	.LBB30
 4671 004c 26000000 		.4byte	.LBE30
 4672 0050 26000000 		.4byte	.LBB33
 4673 0054 2C000000 		.4byte	.LBE33
 4674 0058 00000000 		.4byte	0
 4675 005c 00000000 		.4byte	0
 4676 0060 0C000000 		.4byte	.LBB40
 4677 0064 0E000000 		.4byte	.LBE40
 4678 0068 18000000 		.4byte	.LBB49
 4679 006c 1C000000 		.4byte	.LBE49
 4680 0070 32000000 		.4byte	.LBB50
 4681 0074 B8000000 		.4byte	.LBE50
 4682 0078 D0000000 		.4byte	.LBB51
 4683 007c 58010000 		.4byte	.LBE51
 4684 0080 00000000 		.4byte	0
 4685 0084 00000000 		.4byte	0
 4686 0088 08000000 		.4byte	.LBB54
 4687 008c 0A000000 		.4byte	.LBE54
 4688 0090 0C000000 		.4byte	.LBB59
 4689 0094 18000000 		.4byte	.LBE59
 4690 0098 1A000000 		.4byte	.LBB60
 4691 009c 78000000 		.4byte	.LBE60
 4692 00a0 84000000 		.4byte	.LBB61
 4693 00a4 FC000000 		.4byte	.LBE61
 4694 00a8 00000000 		.4byte	0
 4695 00ac 00000000 		.4byte	0
 4696 00b0 EE000000 		.4byte	.LBB80
 4697 00b4 F0000000 		.4byte	.LBE80
 4698 00b8 F2000000 		.4byte	.LBB83
 4699 00bc F6000000 		.4byte	.LBE83
 4700 00c0 00000000 		.4byte	0
 4701 00c4 00000000 		.4byte	0
 4702 00c8 00000000 		.4byte	.LFB32
 4703 00cc 14000000 		.4byte	.LFE32
 4704 00d0 00000000 		.4byte	.LFB47
 4705 00d4 24000000 		.4byte	.LFE47
 4706 00d8 00000000 		.4byte	.LFB34
 4707 00dc 08000000 		.4byte	.LFE34
 4708 00e0 00000000 		.4byte	.LFB35
 4709 00e4 1C000000 		.4byte	.LFE35
 4710 00e8 00000000 		.4byte	.LFB36
 4711 00ec 0C000000 		.4byte	.LFE36
 4712 00f0 00000000 		.4byte	.LFB37
 4713 00f4 90000000 		.4byte	.LFE37
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 103


 4714 00f8 00000000 		.4byte	.LFB38
 4715 00fc 44000000 		.4byte	.LFE38
 4716 0100 00000000 		.4byte	.LFB39
 4717 0104 38000000 		.4byte	.LFE39
 4718 0108 00000000 		.4byte	.LFB40
 4719 010c 30000000 		.4byte	.LFE40
 4720 0110 00000000 		.4byte	.LFB41
 4721 0114 58010000 		.4byte	.LFE41
 4722 0118 00000000 		.4byte	.LFB42
 4723 011c FC000000 		.4byte	.LFE42
 4724 0120 00000000 		.4byte	.LFB43
 4725 0124 FC000000 		.4byte	.LFE43
 4726 0128 00000000 		.4byte	.LFB33
 4727 012c 9C010000 		.4byte	.LFE33
 4728 0130 00000000 		.4byte	.LFB44
 4729 0134 34000000 		.4byte	.LFE44
 4730 0138 00000000 		.4byte	.LFB45
 4731 013c 40000000 		.4byte	.LFE45
 4732 0140 00000000 		.4byte	.LFB46
 4733 0144 0C000000 		.4byte	.LFE46
 4734 0148 00000000 		.4byte	0
 4735 014c 00000000 		.4byte	0
 4736              		.section	.debug_line,"",%progbits
 4737              	.Ldebug_line0:
 4738 0000 7F040000 		.section	.debug_str,"MS",%progbits,1
 4738      02005001 
 4738      00000201 
 4738      FB0E0D00 
 4738      01010101 
 4739              	.LASF30:
 4740 0000 43617053 		.ascii	"CapSense_UpdateEnabledBaselines_Filter\000"
 4740      656E7365 
 4740      5F557064 
 4740      61746545 
 4740      6E61626C 
 4741              	.LASF91:
 4742 0027 43795379 		.ascii	"CySysWdtEnable\000"
 4742      73576474 
 4742      456E6162 
 4742      6C6500
 4743              	.LASF43:
 4744 0036 43617053 		.ascii	"CapSense_sensorRaw\000"
 4744      656E7365 
 4744      5F73656E 
 4744      736F7252 
 4744      617700
 4745              	.LASF79:
 4746 0049 6861776B 		.ascii	"hawkeye_clk_Write\000"
 4746      6579655F 
 4746      636C6B5F 
 4746      57726974 
 4746      6500
 4747              	.LASF87:
 4748 005b 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4748      656E7365 
 4748      5F436865 
 4748      636B4973 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 104


 4748      416E7957 
 4749              	.LASF92:
 4750 007b 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 4750      73576474 
 4750      556E6D61 
 4750      736B496E 
 4750      74657272 
 4751              	.LASF40:
 4752 0093 49676E6F 		.ascii	"IgnoreBit\000"
 4752      72654269 
 4752      7400
 4753              	.LASF27:
 4754 009d 43617053 		.ascii	"CapSense_CSD_BaseInit_Filtered\000"
 4754      656E7365 
 4754      5F435344 
 4754      5F426173 
 4754      65496E69 
 4755              	.LASF2:
 4756 00bc 73686F72 		.ascii	"short int\000"
 4756      7420696E 
 4756      7400
 4757              	.LASF82:
 4758 00c6 54435F43 		.ascii	"TC_CC_ISR_StartEx\000"
 4758      435F4953 
 4758      525F5374 
 4758      61727445 
 4758      7800
 4759              	.LASF28:
 4760 00d8 66696C74 		.ascii	"filteredRawData\000"
 4760      65726564 
 4760      52617744 
 4760      61746100 
 4761              	.LASF37:
 4762 00e8 77696467 		.ascii	"widget\000"
 4762      657400
 4763              	.LASF57:
 4764 00ef 5744545F 		.ascii	"WDT_Ignore\000"
 4764      49676E6F 
 4764      726500
 4765              	.LASF58:
 4766 00fa 5744545F 		.ascii	"WDT_Match\000"
 4766      4D617463 
 4766      6800
 4767              	.LASF74:
 4768 0104 556E5573 		.ascii	"UnUsedPin_9_Write\000"
 4768      65645069 
 4768      6E5F395F 
 4768      57726974 
 4768      6500
 4769              	.LASF55:
 4770 0116 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4770      656E7365 
 4770      5F726177 
 4770      46696C74 
 4770      65724461 
 4771              	.LASF97:
 4772 012e 5744545F 		.ascii	"WDT_Clear\000"
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 105


 4772      436C6561 
 4772      7200
 4773              	.LASF59:
 4774 0138 6B65795F 		.ascii	"key_scan_count\000"
 4774      7363616E 
 4774      5F636F75 
 4774      6E7400
 4775              	.LASF42:
 4776 0147 5744545F 		.ascii	"WDT_Match_Init\000"
 4776      4D617463 
 4776      685F496E 
 4776      697400
 4777              	.LASF89:
 4778 0156 6973725F 		.ascii	"isr_WDT_Stop\000"
 4778      5744545F 
 4778      53746F70 
 4778      00
 4779              	.LASF19:
 4780 0163 76616C75 		.ascii	"value\000"
 4780      6500
 4781              	.LASF10:
 4782 0169 75696E74 		.ascii	"uint16\000"
 4782      313600
 4783              	.LASF20:
 4784 0170 73656E73 		.ascii	"sensor\000"
 4784      6F7200
 4785              	.LASF78:
 4786 0177 556E5573 		.ascii	"UnUsedPin_15_Write\000"
 4786      65645069 
 4786      6E5F3135 
 4786      5F577269 
 4786      746500
 4787              	.LASF49:
 4788 018a 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4788      656E7365 
 4788      5F6C6F77 
 4788      42617365 
 4788      6C696E65 
 4789              	.LASF9:
 4790 01a7 75696E74 		.ascii	"uint8\000"
 4790      3800
 4791              	.LASF90:
 4792 01ad 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 4792      73576474 
 4792      53657449 
 4792      676E6F72 
 4792      65426974 
 4793              	.LASF86:
 4794 01c3 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 4794      656E7365 
 4794      5F536361 
 4794      6E456E61 
 4794      626C6564 
 4795              	.LASF36:
 4796 01df 41766572 		.ascii	"AveragetempRaw\000"
 4796      61676574 
 4796      656D7052 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 106


 4796      617700
 4797              	.LASF72:
 4798 01ee 43617053 		.ascii	"CapSense_GetBitValue\000"
 4798      656E7365 
 4798      5F476574 
 4798      42697456 
 4798      616C7565 
 4799              	.LASF44:
 4800 0203 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4800      656E7365 
 4800      5F73656E 
 4800      736F7245 
 4800      6E61626C 
 4801              	.LASF64:
 4802 021d 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 4802      73576474 
 4802      436C6561 
 4802      72496E74 
 4802      65727275 
 4803              	.LASF53:
 4804 0234 494C4F44 		.ascii	"ILODelayCycles_0\000"
 4804      656C6179 
 4804      4379636C 
 4804      65735F30 
 4804      00
 4805              	.LASF12:
 4806 0245 666C6F61 		.ascii	"float\000"
 4806      7400
 4807              	.LASF93:
 4808 024b 6973725F 		.ascii	"isr_WDT_StartEx\000"
 4808      5744545F 
 4808      53746172 
 4808      74457800 
 4809              	.LASF33:
 4810 025b 63616C63 		.ascii	"calc\000"
 4810      00
 4811              	.LASF6:
 4812 0260 6C6F6E67 		.ascii	"long long int\000"
 4812      206C6F6E 
 4812      6720696E 
 4812      7400
 4813              	.LASF14:
 4814 026e 63686172 		.ascii	"char\000"
 4814      00
 4815              	.LASF23:
 4816 0273 496E7465 		.ascii	"InterruptHandler\000"
 4816      72727570 
 4816      7448616E 
 4816      646C6572 
 4816      00
 4817              	.LASF24:
 4818 0284 5744545F 		.ascii	"WDT_ISR\000"
 4818      49535200 
 4819              	.LASF4:
 4820 028c 6C6F6E67 		.ascii	"long int\000"
 4820      20696E74 
 4820      00
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 107


 4821              	.LASF22:
 4822 0295 52657065 		.ascii	"Repeat\000"
 4822      617400
 4823              	.LASF35:
 4824 029c 74656D70 		.ascii	"tempRaw\000"
 4824      52617700 
 4825              	.LASF16:
 4826 02a4 73697A65 		.ascii	"sizetype\000"
 4826      74797065 
 4826      00
 4827              	.LASF38:
 4828 02ad 6E6F6973 		.ascii	"noiseThreshold\000"
 4828      65546872 
 4828      6573686F 
 4828      6C6400
 4829              	.LASF50:
 4830 02bc 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4830      656E7365 
 4830      5F6C6F77 
 4830      42617365 
 4830      6C696E65 
 4831              	.LASF21:
 4832 02d6 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines_Filtered\000"
 4832      656E7365 
 4832      5F435344 
 4832      5F496E69 
 4832      7469616C 
 4833              	.LASF88:
 4834 0303 7265706F 		.ascii	"report_debug_data\000"
 4834      72745F64 
 4834      65627567 
 4834      5F646174 
 4834      6100
 4835              	.LASF1:
 4836 0315 756E7369 		.ascii	"unsigned char\000"
 4836      676E6564 
 4836      20636861 
 4836      7200
 4837              	.LASF52:
 4838 0323 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4838      656E7365 
 4838      5F6E6567 
 4838      61746976 
 4838      654E6F69 
 4839              	.LASF96:
 4840 0343 433A5C55 		.ascii	"C:\\Users\\Public\\touch\\(NowC302)A1_Global_Multi_"
 4840      73657273 
 4840      5C507562 
 4840      6C69635C 
 4840      746F7563 
 4841 0372 43726561 		.ascii	"Creator4.1_hawkeye\\CapSense_CSD_P4_Example_WithTun"
 4841      746F7234 
 4841      2E315F68 
 4841      61776B65 
 4841      79655C43 
 4842 03a4 65723031 		.ascii	"er01.cydsn\000"
 4842      2E637964 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 108


 4842      736E00
 4843              	.LASF15:
 4844 03af 6C6F6E67 		.ascii	"long double\000"
 4844      20646F75 
 4844      626C6500 
 4845              	.LASF69:
 4846 03bb 43617053 		.ascii	"CapSense_ScanSensor\000"
 4846      656E7365 
 4846      5F536361 
 4846      6E53656E 
 4846      736F7200 
 4847              	.LASF66:
 4848 03cf 43795379 		.ascii	"CySysWdtGetMatch\000"
 4848      73576474 
 4848      4765744D 
 4848      61746368 
 4848      00
 4849              	.LASF41:
 4850 03e0 4D617463 		.ascii	"Match_ms\000"
 4850      685F6D73 
 4850      00
 4851              	.LASF25:
 4852 03e9 436C6561 		.ascii	"Clear_WDT_With_Flag\000"
 4852      725F5744 
 4852      545F5769 
 4852      74685F46 
 4852      6C616700 
 4853              	.LASF80:
 4854 03fd 6861776B 		.ascii	"hawkeye_data_Write\000"
 4854      6579655F 
 4854      64617461 
 4854      5F577269 
 4854      746500
 4855              	.LASF0:
 4856 0410 7369676E 		.ascii	"signed char\000"
 4856      65642063 
 4856      68617200 
 4857              	.LASF7:
 4858 041c 6C6F6E67 		.ascii	"long long unsigned int\000"
 4858      206C6F6E 
 4858      6720756E 
 4858      7369676E 
 4858      65642069 
 4859              	.LASF85:
 4860 0433 43617053 		.ascii	"CapSense_Start\000"
 4860      656E7365 
 4860      5F537461 
 4860      727400
 4861              	.LASF8:
 4862 0442 756E7369 		.ascii	"unsigned int\000"
 4862      676E6564 
 4862      20696E74 
 4862      00
 4863              	.LASF63:
 4864 044f 54696D65 		.ascii	"Timer_1_ClearInterrupt\000"
 4864      725F315F 
 4864      436C6561 
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 109


 4864      72496E74 
 4864      65727275 
 4865              	.LASF48:
 4866 0466 43617053 		.ascii	"CapSense_sensorSignal\000"
 4866      656E7365 
 4866      5F73656E 
 4866      736F7253 
 4866      69676E61 
 4867              	.LASF17:
 4868 047c 5365745F 		.ascii	"Set_WDT_Clear_Flag\000"
 4868      5744545F 
 4868      436C6561 
 4868      725F466C 
 4868      616700
 4869              	.LASF76:
 4870 048f 556E5573 		.ascii	"UnUsedPin_10_Write\000"
 4870      65645069 
 4870      6E5F3130 
 4870      5F577269 
 4870      746500
 4871              	.LASF68:
 4872 04a2 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4872      656E7365 
 4872      5F494952 
 4872      3446696C 
 4872      74657200 
 4873              	.LASF31:
 4874 04b6 69735365 		.ascii	"isSensorEnabled\000"
 4874      6E736F72 
 4874      456E6162 
 4874      6C656400 
 4875              	.LASF67:
 4876 04c6 43795379 		.ascii	"CySysWdtSetMatch\000"
 4876      73576474 
 4876      5365744D 
 4876      61746368 
 4876      00
 4877              	.LASF99:
 4878 04d7 466F7263 		.ascii	"Force_WDT_Reset\000"
 4878      655F5744 
 4878      545F5265 
 4878      73657400 
 4879              	.LASF81:
 4880 04e7 436C6F63 		.ascii	"Clock_1_StartEx\000"
 4880      6B5F315F 
 4880      53746172 
 4880      74457800 
 4881              	.LASF98:
 4882 04f7 6D61696E 		.ascii	"main\000"
 4882      00
 4883              	.LASF54:
 4884 04fc 494C4F44 		.ascii	"ILODelayCycles_1\000"
 4884      656C6179 
 4884      4379636C 
 4884      65735F31 
 4884      00
 4885              	.LASF60:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 110


 4886 050d 43617073 		.ascii	"Capsense_FilteredRawData\000"
 4886      656E7365 
 4886      5F46696C 
 4886      74657265 
 4886      64526177 
 4887              	.LASF32:
 4888 0526 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold_Filter\000"
 4888      656E7365 
 4888      5F557064 
 4888      61746542 
 4888      6173656C 
 4889              	.LASF77:
 4890 0550 556E5573 		.ascii	"UnUsedPin_14_Write\000"
 4890      65645069 
 4890      6E5F3134 
 4890      5F577269 
 4890      746500
 4891              	.LASF83:
 4892 0563 54696D65 		.ascii	"Timer_1_Start\000"
 4892      725F315F 
 4892      53746172 
 4892      7400
 4893              	.LASF47:
 4894 0571 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4894      656E7365 
 4894      5F73656E 
 4894      736F7242 
 4894      6173656C 
 4895              	.LASF94:
 4896 058c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4896      43313120 
 4896      352E342E 
 4896      31203230 
 4896      31363036 
 4897 05bf 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4897      20726576 
 4897      6973696F 
 4897      6E203233 
 4897      37373135 
 4898 05f2 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 4898      66756E63 
 4898      74696F6E 
 4898      2D736563 
 4898      74696F6E 
 4899              	.LASF3:
 4900 061a 73686F72 		.ascii	"short unsigned int\000"
 4900      7420756E 
 4900      7369676E 
 4900      65642069 
 4900      6E7400
 4901              	.LASF11:
 4902 062d 75696E74 		.ascii	"uint32\000"
 4902      333200
 4903              	.LASF95:
 4904 0634 6D61696E 		.ascii	"main.c\000"
 4904      2E6300
 4905              	.LASF5:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 111


 4906 063b 6C6F6E67 		.ascii	"long unsigned int\000"
 4906      20756E73 
 4906      69676E65 
 4906      6420696E 
 4906      7400
 4907              	.LASF34:
 4908 064d 7369676E 		.ascii	"sign\000"
 4908      00
 4909              	.LASF13:
 4910 0652 646F7562 		.ascii	"double\000"
 4910      6C6500
 4911              	.LASF73:
 4912 0659 556E5573 		.ascii	"UnUsedPin_16_Write\000"
 4912      65645069 
 4912      6E5F3136 
 4912      5F577269 
 4912      746500
 4913              	.LASF45:
 4914 066c 43617053 		.ascii	"CapSense_widgetNumber\000"
 4914      656E7365 
 4914      5F776964 
 4914      6765744E 
 4914      756D6265 
 4915              	.LASF65:
 4916 0682 6973725F 		.ascii	"isr_WDT_ClearPending\000"
 4916      5744545F 
 4916      436C6561 
 4916      7250656E 
 4916      64696E67 
 4917              	.LASF61:
 4918 0697 5375625F 		.ascii	"Sub_Buff\000"
 4918      42756666 
 4918      00
 4919              	.LASF29:
 4920 06a0 46697273 		.ascii	"FirstSensingData\000"
 4920      7453656E 
 4920      73696E67 
 4920      44617461 
 4920      00
 4921              	.LASF70:
 4922 06b1 43617053 		.ascii	"CapSense_IsBusy\000"
 4922      656E7365 
 4922      5F497342 
 4922      75737900 
 4923              	.LASF75:
 4924 06c1 556E5573 		.ascii	"UnUsedPin_18_Write\000"
 4924      65645069 
 4924      6E5F3138 
 4924      5F577269 
 4924      746500
 4925              	.LASF46:
 4926 06d4 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4926      656E7365 
 4926      5F73656E 
 4926      736F7242 
 4926      6173656C 
 4927              	.LASF51:
ARM GAS  C:\Users\young\AppData\Local\Temp\ccRRoTpk.s 			page 112


 4928 06ec 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4928      656E7365 
 4928      5F6E6F69 
 4928      73655468 
 4928      72657368 
 4929              	.LASF26:
 4930 0704 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline_Filtered\000"
 4930      656E7365 
 4930      5F435344 
 4930      5F496E69 
 4930      7469616C 
 4931              	.LASF39:
 4932 0733 5744545F 		.ascii	"WDT_Init\000"
 4932      496E6974 
 4932      00
 4933              	.LASF56:
 4934 073c 5744545F 		.ascii	"WDT_Clear_Flag\000"
 4934      436C6561 
 4934      725F466C 
 4934      616700
 4935              	.LASF18:
 4936 074b 43617053 		.ascii	"CapSense_UpdateSensorBaseline_Filter\000"
 4936      656E7365 
 4936      5F557064 
 4936      61746553 
 4936      656E736F 
 4937              	.LASF84:
 4938 0770 43794465 		.ascii	"CyDelay\000"
 4938      6C617900 
 4939              	.LASF62:
 4940 0778 5369676E 		.ascii	"SignalBit_Debug\000"
 4940      616C4269 
 4940      745F4465 
 4940      62756700 
 4941              	.LASF71:
 4942 0788 43617053 		.ascii	"CapSense_BaseInit\000"
 4942      656E7365 
 4942      5F426173 
 4942      65496E69 
 4942      7400
 4943              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
